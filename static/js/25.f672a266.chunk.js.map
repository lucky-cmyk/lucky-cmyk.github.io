{"version":3,"sources":["pages/AccountList/components/CreateAccount.js","pages/AccountList/components/ListTable.js","pages/AccountList/components/ModifyPassword.js","pages/AccountList/components/ModifyAccountRole.js","pages/AccountList/components/Frozen.js","pages/AccountList/components/UnFrozen.js","pages/AccountList/index.js","api/acount.js","api/role.js"],"names":["Option","TextArea","CreateAccount","props","onCancel","visible","onOk","role_data","useForm","form","title","resetFields","validateFields","then","a","accrount_create","getFieldsValue","message","success","err","console","log","labelCol","span","wrapperCol","name","hideRequiredMark","Item","label","placeholder","rules","required","getFieldValue","validator","_","value","Promise","reject","Error","resolve","style","width","map","option","id","memo","ListTable","ref","useImperativeHandle","getData","newVal","account_get_handle","modifypassword_h","modifyaccountRole_h","block_h","pageSize","total","showTotal","useState","loading","setLoading","data","setData","current","showSizeChanger","pagination","setPagination","columns","dataIndex","key","render","state","last_time","dayjs","format","created_at","align","text","record","index","type","onClick","uname","role_id","Boolean","params","account_get","page","page_size","length","user_ids","get_id_user","get_by_user_nam","toString","ids_names_data","ids_names","repacle_id_user_name","trans_key","count","error","useEffect","bordered","dataSource","rowKey","onChange","forwardRef","username","submit","password_update","e","setFieldsValue","afterClose","disabled","user_id","perms","set_perms","expandedKeys","setExpandedKeys","checkedKeys","setCheckedKeys","selectedKeys","setSelectedKeys","autoExpandParent","setAutoExpandParent","permissions_get_role_h","permissions_get_role","treeData","trans_tree","children","keys","trans_tree_get_key","check","checkState","update_role","checkable","onExpand","expandedKeysValue","onCheck","checkedKeysValue","onSelect","selectedKeysValue","info","RangePicker","upload_block","ban_time","showTime","UnFrozen","Index","childRef","useRef","add_visible","set_add_visible","password_visible","set_password_visible","accountRole_visible","set_accountRole_visible","frozen_visible","set_frozen_visible","unforzen_visible","set_unforzen_visible","set_username","set_id","set_role_id","appidList","useSelector","appids","set_role_data","set_opa_user","get_role","role_get","Page","route","dashed","boolean","ModifyPassword","ModifyAccountRole","Frozen","getAccountLog","uid","axios","get","http","post","put","role_delete","delete","role_create","jpost","role_update","permissions_get","get_role_by_user"],"mappings":"2ZAcQA,EAAR,IAAQA,OACAC,EAAR,IAAQA,SACFC,EAAgB,SAACC,GACrB,IAAQC,EAAuCD,EAAvCC,SAAUC,EAA6BF,EAA7BE,QAASC,EAAoBH,EAApBG,KAAMC,EAAcJ,EAAdI,UACjC,EAAe,IAAKC,UAAbC,EAAP,oBAuBA,OACE,mBACEC,MAAM,2BACNL,QAASA,EACTD,SAZc,WAChBK,EAAKE,cACLP,KAWEE,KA1BW,WACb,IACEG,EAAKG,iBAAiBC,KAAtB,sBAA2B,sBAAAC,EAAA,sEAEnBC,YAAgBN,EAAKO,kBAFF,OAGzBV,IACAW,EAAA,EAAQC,QAAQ,4BAChBT,EAAKE,cALoB,4CAO3B,MAAOQ,GACPC,QAAQC,IAAIF,KAYd,SAME,8CAXe,CACjBG,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MASlB,IAEEd,KAAMA,EACNgB,KAAK,gBACLC,kBAAkB,EAJpB,UAME,kBAAMC,KAAN,CACEC,MAAM,qBACNH,KAAK,OACLI,YAAY,uCACZC,MAAO,CAAC,CAAEC,UAAU,EAAMd,QAAS,yCAJrC,SAME,mBAAOY,YAAY,2CAGrB,kBAAMF,KAAN,CACEC,MAAM,eACNH,KAAK,YACLK,MAAO,CAAC,CAAEC,UAAU,EAAMd,QAAS,mCAHrC,SAKE,mBAAOY,YAAY,qCAGrB,kBAAMF,KAAN,CACEC,MAAM,uCACNH,KAAK,oBACLK,MAAO,CACL,CAAEC,UAAU,EAAMd,QAAS,8CAC3B,gBAAGe,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGC,GACX,OAAKA,GAASH,EAAc,eAAiBG,EAGtCC,QAAQC,OAAO,IAAIC,MAAM,2DAFvBF,QAAQG,cARzB,SAeE,mBAAOV,YAAY,iDAGrB,kBAAMF,KAAN,CACEC,MAAM,eACNH,KAAK,UACLK,MAAO,CAAC,CAAEC,UAAU,EAAMd,QAAS,mCAHrC,SAKE,mBAAQY,YAAY,iCAAQW,MAAO,CAAEC,MAAO,QAA5C,gBACGlC,QADH,IACGA,OADH,EACGA,EAAWmC,KAAI,SAACC,GAAD,OACd,cAAC3C,EAAD,CAAwBmC,MAAOQ,EAAOC,GAAtC,SACGD,EAAOlB,MADGkB,EAAOC,WAO1B,kBAAMjB,KAAN,CACEC,MAAM,eACNH,KAAK,UACLK,MAAO,CAAC,CAAEC,UAAU,EAAMd,QAAS,mCAHrC,SAKE,cAAChB,EAAD,aAMK4C,iBAAK3C,G,0BCtGd4C,G,QAAY,SAAC3C,EAAO4C,GACxBC,8BAAoBD,GAAK,iBAAO,CAE9BE,QAAS,SAACC,GACRC,EAAmBD,QAGvB,IACEE,EAMEjD,EANFiD,iBACAC,EAKElD,EALFkD,oBACAC,EAIEnD,EAJFmD,QAHF,EAOInD,EAHFoD,gBAJF,MAIa,GAJb,IAOIpD,EAFFqD,aALF,MAKU,EALV,EAQA,GADIrD,EADFsD,UAE4BC,oBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAoCJ,mBAAS,CAC3CK,QAAS,EACTR,SAAUA,GAAY,GACtBC,MAAOA,GAAS,EAChBQ,iBAAiB,IAJnB,mBAAOC,EAAP,KAAmBC,EAAnB,KAMMC,EAAU,CACd,CAAEzD,MAAO,KAAM0D,UAAW,KAAMC,IAAK,MACrC,CAAE3D,MAAO,qBAAO0D,UAAW,SAC3B,CAAE1D,MAAO,eAAM0D,UAAW,aAC1B,CACE1D,MAAO,eACP0D,UAAW,QACXE,OAAQ,SAACC,GAAD,OAAqB,GAATA,EAAa,eAAO,iBAE1C,CACE7D,MAAO,uCACP0D,UAAW,YACXE,OAAQ,SAACE,GAAD,OACNA,EAAYC,IAAMD,GAAWE,OAAO,uBAAyB,KAEjE,CACEhE,MAAO,2BACP0D,UAAW,aACXE,OAAQ,SAACK,GAAD,OACNA,EAAaF,IAAME,GAAYD,OAAO,uBAAyB,KAEnE,CACEhE,MAAO,qBACP0D,UAAW,oBAEb,CACE1D,MAAO,eACP0D,UAAW,YACXQ,MAAO,SACPN,OAAQ,SAACO,EAAMC,EAAQC,GACrB,OACE,iCACE,mBACEC,KAAK,OACLC,QAAS,kBAAM7B,EAAiB0B,EAAOI,MAAOJ,EAAOlC,KAFvD,sCAMA,mBACEoC,KAAK,OACLC,QAAS,kBAAM5B,EAAoByB,EAAOK,QAASL,EAAOlC,KAF5D,sCAMA,mBACEoC,KAAK,OACLC,QAAS,kBACP3B,EAAQ8B,QAAwB,GAAhBN,EAAOP,OAAaO,EAAOI,MAAOJ,EAAOlC,KAH7D,SAOmB,GAAhBkC,EAAOP,MAAa,eAAO,uBAQlCpB,EAAkB,uCAAG,gDAAArC,EAAA,6DAAOuE,EAAP,+BAAgB,GAAhB,SAEvBzB,GAAW,GAFY,SAGN0B,YAAY,aAC3BC,KAAMtB,EAAWF,QACjByB,UAAWvB,EAAWV,UACnB8B,IANkB,aAGnBxB,EAHmB,QASdA,KAAK4B,OAAS,GATA,wBAUfC,EAAWC,YAAY9B,EAAKA,KAAM,CAAEQ,IAAK,gBAV1B,UAWQuB,YAAgB,CAC3CF,SAAUA,EAASG,aAZA,SAWfC,EAXe,UAefC,EAAYD,EAAejC,KAC/BA,EAAKA,KAAOmC,YAAqBnC,EAAKA,KAAM,CAC1CQ,IAAK,cACLR,KAAMkC,EACNE,UAAW,sBAnBM,QAwBvBnC,EAAQD,EAAKA,MACbK,EAAc,2BACTD,GADQ,IAEXT,MAAOK,EAAK0B,KAAKW,SAGnBtC,GAAW,GA9BY,kDAgCvBA,GAAW,GACXxC,QAAQ+E,MAAR,MAjCuB,0DAAH,qDA4CxB,OAHAC,qBAAU,WACRjD,MACC,CAACc,EAAWF,QAASE,EAAWV,WAEjC,mCACE,mBACE8C,UAAQ,EACR1C,QAASA,EACTQ,QAASA,EACTmC,WAAYzC,EACZ0C,OAAO,KACPtC,WAAYA,EACZuC,SAhBW,SAACvC,GAEhBC,EAAc,eAAKD,WAmBRwC,uBAAW3D,GCxIpB5C,GAFN,IAAQF,OACR,IAAQC,SACc,SAACE,GACrB,IAAQC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,KAAMoG,EAAiBvG,EAAjBuG,SAAU9D,EAAOzC,EAAPyC,GAC3C,EAAe,IAAKpC,UAAbC,EAAP,oBAEMkG,EAAM,uCAAG,sBAAA7F,EAAA,sDACb,IACEL,EAAKG,iBAAiBC,KAAtB,sBAA2B,sBAAAC,EAAA,sEACnB8F,YAAgB,2BAAKnG,EAAKO,kBAAX,IAA6B4B,QADzB,OAGzBtC,IACAW,EAAA,EAAQC,QAAQ,4BAJS,4CAM3B,MAAO2F,GACPzF,QAAQ+E,MAAMU,GATH,2CAAH,qDA8BZ,OARAT,qBAAU,WACJ/F,GACFI,EAAKqG,eAAe,CAClBrF,KAAMiF,MAGT,CAACrG,IAGF,mBACEK,MAAM,2BACNL,QAASA,EACTD,SAtBc,WAChBA,KAsBEE,KAAMqG,EACNI,WAjBY,WACdtG,EAAKE,eAWL,SAOE,8CAvBe,CACjBW,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAqBlB,IAEEd,KAAMA,EACNgB,KAAK,gBACLC,kBAAkB,EAJpB,UAME,kBAAMC,KAAN,CAAWC,MAAM,qBAAMH,KAAK,OAA5B,SACE,mBAAOuF,UAAQ,EAACnF,YAAY,2CAG9B,kBAAMF,KAAN,CACEC,MAAM,eACNH,KAAK,YACLK,MAAO,CAAC,CAAEC,UAAU,EAAMd,QAAS,mCAHrC,SAKE,mBAAOY,YAAY,qCAGrB,kBAAMF,KAAN,CACEC,MAAM,uCACNH,KAAK,oBACLK,MAAO,CACL,CAAEC,UAAU,EAAMd,QAAS,8CAC3B,gBAAGe,EAAH,EAAGA,cAAH,MAAwB,CACtBC,UADsB,SACZC,EAAGC,GACX,OAAKA,GAASH,EAAc,eAAiBG,EAGtCC,QAAQC,OAAO,IAAIC,MAAM,2DAFvBF,QAAQG,cARzB,SAeE,mBAAOV,YAAY,yDAMdgB,iBAAK3C,G,6BChFZF,EAAR,IAAQA,OAwEFE,GAvEN,IAAQD,SAuEc,SAACE,GACrB,IAAQC,EAAyDD,EAAzDC,SAAUC,EAA+CF,EAA/CE,QAASC,EAAsCH,EAAtCG,KAAMC,EAAgCJ,EAAhCI,UAAW4E,EAAqBhF,EAArBgF,QAAS8B,EAAY9G,EAAZ8G,QACrD,EAAe,IAAKzG,UAAbC,EAAP,oBACA,EAA2BiD,qBAA3B,mBAAOwD,EAAP,KAAcC,EAAd,KAqBA,EAAwCzD,mBAAS,CAAC,QAAS,UAA3D,mBAAO0D,EAAP,KAAqBC,EAArB,KACA,EAAsC3D,mBAAS,CAAC,UAAhD,mBAAO4D,EAAP,KAAoBC,EAApB,KACA,EAAwC7D,mBAAS,IAAjD,mBAAO8D,EAAP,KAAqBC,EAArB,KACA,EAAgD/D,oBAAS,GAAzD,mBAAOgE,EAAP,KAAyBC,EAAzB,KAmBMC,EAAsB,uCAAG,WAAOhF,GAAP,mBAAA9B,EAAA,+EAEV+G,YAAqB,CAAE1C,QAASvC,IAFtB,OAEvBiB,EAFuB,OAIvBiE,EAAWC,YAAWlE,EAAKA,KAAM,CACnCQ,IAAK,KACL3D,MAAO,OACPsH,SAAU,UAEZb,EAAUW,GACJG,EAAOC,YAAmBrE,EAAKA,KAAM,CACzCQ,IAAK,KACL3D,MAAO,OACPsH,SAAU,QACVG,MAAO,QACPC,YAAY,IAGdb,EAAeU,GAlBY,kDAsB3B7G,QAAQ+E,MAAR,MAtB2B,0DAAH,sDAyB5BC,qBAAU,WACJ/F,IACFuH,EAAuBzC,GACvB1E,EAAKqG,eAAe,CAClB3B,eAGH,CAAC9E,IAMJ,OACE,mBACEK,MAAM,2BACNL,QAASA,EACTC,KAnFW,WACbG,EAAKG,iBAAiBC,KAAtB,sBAA2B,sBAAAC,EAAA,sEACnBuH,YAAY,2BAAK5H,EAAKO,kBAAX,IAA6BiG,aADrB,OAGzB3G,IACAF,IACAa,EAAA,EAAQC,QAAQ,4BALS,6CAmFzBd,SA1Ec,WAChBK,EAAKE,cACLP,KAoEA,SAME,8CAxEe,CACjBkB,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAsElB,IAEEd,KAAMA,EACNgB,KAAK,gBACLC,kBAAkB,EAJpB,UAME,kBAAMC,KAAN,CAAWC,MAAM,eAAKH,KAAK,UAA3B,SACE,mBAAQe,MAAO,CAAEC,MAAO,QAAU+D,SAlBvB,SAAC5D,GAElBgF,EAAuBhF,IAgBjB,gBACGrC,QADH,IACGA,OADH,EACGA,EAAWmC,KAAI,SAACC,GAAD,OACd,cAAC,EAAD,CAAwBR,MAAOQ,EAAOC,GAAtC,SACGD,EAAOlB,MADGkB,EAAOC,WAO1B,kBAAMjB,KAAN,CAAWC,MAAM,eAAKH,KAAK,eAA3B,SACE,mBACEuF,UAAQ,EACRsB,WAAS,EACTC,SAlFO,SAACC,GAIhBnB,EAAgBmB,GAChBb,GAAoB,IA8EZP,aAAcA,EACdM,iBAAkBA,EAClBe,QA7EM,SAACC,GACftH,QAAQC,IAAI,UAAWqH,GACvBnB,EAAemB,IA4EPpB,YAAaA,EACbqB,SA1EO,SAACC,EAAmBC,GACnCzH,QAAQC,IAAI,WAAYwH,GACxBpB,EAAgBmB,IAyERpB,aAAcA,EACdM,SAAUZ,cAsBPrE,iBAAK3C,G,oBCpNZD,GAFR,IAAQ6I,YACR,IAAQ9I,OACR,IAAQC,UACFC,EAAgB,SAACC,GACrB,IAAQC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,KAAMoG,EAAiBvG,EAAjBuG,SAAU9D,EAAOzC,EAAPyC,GAC3C,EAAe,IAAKpC,UAAbC,EAAP,oBAoCA,OAPA2F,qBAAU,WACL/F,GACDI,EAAKqG,eAAe,CAClBJ,eAGH,CAACrG,IAEF,mBAAOK,MAAM,eAAKL,QAASA,EAASD,SAhBpB,WAChBK,EAAKE,cACLP,KAcyDE,KAnC5C,WACb,IACEG,EAAKG,iBAAiBC,KAAtB,sBAA2B,sBAAAC,EAAA,sEAEnBiI,YAAa,2BACdtI,EAAKO,kBADQ,IAEhBgI,SAAUvE,IAAMhE,EAAKuB,cAAc,aAAa0C,OAC9C,uBAEF9B,QAPuB,OASzB3B,EAAA,EAAQC,QAAQ,4BAChBT,EAAKE,cACLL,IAXyB,4CAa3B,MAAO6F,GACP/E,QAAQ+E,MAAMA,KAmBhB,SACE,4CAAM1F,KAAMA,EAAMgB,KAAK,iBAbR,CACjBH,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAWlB,cACE,kBAAMI,KAAN,CAAWC,MAAM,qBAAMH,KAAK,WAA5B,SACE,mBAAOuF,UAAQ,MAEjB,kBAAMrF,KAAN,CAAWC,MAAM,eAAKH,KAAK,WAA3B,SACE,mBAAYI,YAAY,iCAAQ6C,OAAO,sBAAsBuE,SAAU,OAEzE,kBAAMtH,KAAN,CAAWC,MAAM,eAAKH,KAAK,cAA3B,SACE,cAAC,EAAD,CAAUI,YAAY,4CAMjBgB,iBAAK3C,GCvDZD,GAFR,IAAQ6I,YACR,IAAQ9I,OACR,IAAQC,UACFiJ,EAAW,SAAC/I,GAChB,IAAQC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,QAASC,EAAuBH,EAAvBG,KAAMoG,EAAiBvG,EAAjBuG,SAAU9D,EAAOzC,EAAPyC,GAC3C,EAAe,IAAKpC,UAAbC,EAAP,oBA6BA,OAPA2F,qBAAU,WACL/F,GACDI,EAAKqG,eAAe,CAClBJ,eAGH,CAACrG,IAEF,mBAAOK,MAAM,eAAKL,QAASA,EAASD,SAhBpB,WAChBK,EAAKE,cACLP,KAcyDE,KA5B5C,WACb,IACEG,EAAKG,iBAAiBC,KAAtB,sBAA2B,sBAAAC,EAAA,sEACnBiI,YAAa,2BAAKtI,EAAKO,kBAAX,IAA6BgI,SAAU,GAAIpG,QADpC,OAEzB3B,EAAA,EAAQC,QAAQ,4BAChBT,EAAKE,cACLL,IAJyB,4CAM3B,MAAO6F,GACP/E,QAAQC,IAAI8E,KAmBd,SACE,4CAAM1F,KAAMA,EAAMgB,KAAK,iBAbR,CACjBH,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,MAWlB,cACE,kBAAMI,KAAN,CAAWC,MAAM,qBAAMH,KAAK,WAA5B,SACE,mBAAOuF,UAAQ,MAKjB,kBAAMrF,KAAN,CAAWC,MAAM,eAAKH,KAAK,cAA3B,SACE,cAAC,EAAD,CAAUI,YAAY,4CAMjBgB,iBAAKqG,GCwHLC,UAxKf,SAAehJ,GACb,MAAwBuD,mBAAS,IAAjC,mBACM0F,GADN,UACiBC,oBACjB,EAA8B3F,oBAAS,GAAvC,mBACA,GADA,UACuCA,oBAAS,IAAhD,mBAAO4F,EAAP,KAAoBC,EAApB,KACA,EAAiD7F,oBAAS,GAA1D,mBAAO8F,EAAP,KAAyBC,EAAzB,KACA,EAAuD/F,oBAAS,GAAhE,mBAAOgG,EAAP,KAA4BC,EAA5B,KACA,EAAgCjG,mBAAS,IAAzC,mBACA,GADA,UAC6BA,sBAA7B,mBACA,GADA,UAC6CA,sBAA7C,mBAAOkG,EAAP,KAAuBC,EAAvB,KACA,EAAiDnG,qBAAjD,mBAAOoG,EAAP,KAAyBC,EAAzB,KACA,EAAiCrG,mBAAS,IAA1C,mBAAOgD,EAAP,KAAiBsD,EAAjB,KACA,EAAqBtG,mBAAS,IAA9B,mBAAOd,EAAP,KAAWqH,GAAX,KACA,GAA+BvG,mBAAS,IAAxC,qBAAOyB,GAAP,MAAgB+E,GAAhB,MACMC,GAAYC,aAAY,SAAC7F,GAAD,OAAWA,EAAM8F,UAC/C,GAAmC3G,mBAAS,IAA5C,qBAAOnD,GAAP,MAAkB+J,GAAlB,MAiBAlE,qBAAU,cAAU,CAAC+D,KAErB,IAAMI,GAAe,SAAC7D,EAAU9D,GAC9BoH,EAAatD,GACbuD,GAAOrH,IAmDH4H,GAAQ,uCAAG,4BAAA1J,EAAA,sEACE2J,YAAS,CACxBlF,KAAM,EACNC,UAAW,MAHE,OACX3B,EADW,OAMfyG,GAAczG,EAAKA,KAAOA,EAAKA,KAAO,IANvB,2CAAH,qDA2Bd,OAHAuC,qBAAU,WACRoE,OACC,IAED,eAACE,EAAA,EAAD,CAAMhK,MAAOP,EAAMwK,MAAMjK,MAAzB,UAEE,4BACE,mBAAQsE,KAAK,UAAUC,QA/EX,WAChBsE,GAAgB,IA8EZ,wCAIF,mBAASqB,QAAM,IACf,cAAC,EAAD,CACE7H,IAAKqG,EACLhG,iBAjFmB,SAACsD,EAAU9D,GAClC2H,GAAa7D,EAAU9D,GACvB6G,GAAqB,IAgFjBpG,oBAxEsB,SAAC8B,EAASvC,GACpCsH,GAAY/E,GACZ8E,GAAOrH,GACP+G,GAAwB,IAsEpBrG,QA/DU,SAACuH,EAASnE,EAAU9D,GAClC2H,GAAa7D,EAAU9D,GACvBiI,EAAUhB,GAAmB,GAAQE,GAAqB,MAgExD,cAAC,EAAD,CACExJ,UAAWA,GACXD,KAvDS,WACb8I,EAASrF,QAAQd,UACjBsG,GAAgB,IAsDZlJ,QAASiJ,EACTlJ,SAAU,WA1GdmJ,GAAgB,MA4Gd,cAACuB,EAAD,CACEpE,SAAUA,EACV9D,GAAIA,EACJtC,KAzDqB,WACzBmJ,GAAqB,GACrBL,EAASrF,QAAQd,WAwDb5C,QAASmJ,EACTpJ,SAAU,WA1FdqJ,GAAqB,MA4FnB,cAACsB,EAAD,CACE5F,QAASA,GACT8B,QAASrE,EACTrC,UAAWA,GACXF,QAASqJ,EACTtJ,SAAU,WAvFduJ,GAAwB,IAwFpBrJ,KAAM,kBAzCVqJ,GAAwB,QACxBP,EAASrF,QAAQd,aA0Cf,cAAC+H,EAAD,CACE3K,QAASuJ,EACTxJ,SAAU,WAnFdyJ,GAAmB,IAoFfnD,SAAUA,EACV9D,GAAIA,EACJtC,KAAM,kBA3DVuJ,GAAmB,QACnBT,EAASrF,QAAQd,aA4Df,cAAC,EAAD,CACE5C,QAASyJ,EACT1J,SAAU,WAtFd2J,GAAqB,IAuFjBrD,SAAUA,EACV9D,GAAIA,EACJtC,KAAM,kBA5DVyJ,GAAqB,QACrBX,EAASrF,QAAQd,kB,yTCjHRgI,EAAa,uCAAG,WAAOC,EAAK7F,GAAZ,eAAAvE,EAAA,sEACVqK,IAAMC,IAAN,iBAAoBF,EAApB,eAAsC,CAAC7F,WAD7B,cACvBxB,EADuB,gCAEpBA,QAFoB,IAEpBA,OAFoB,EAEpBA,EAAMA,MAFc,2CAAH,wDAKb9C,EAAe,uCAAG,WAAOsE,GAAP,SAAAvE,EAAA,sEAChBuK,IAAKC,KAAL,mBAA8BjG,GADd,mFAAH,sDAKfC,EAAW,uCAAG,WAAOD,GAAP,SAAAvE,EAAA,+EAClBuK,IAAKD,IAAL,iBAA2B/F,IADT,2CAAH,sDAIXuB,EAAe,uCAAG,WAAOvB,GAAP,SAAAvE,EAAA,sEAChBuK,IAAKE,IAAL,4BAAsClG,GADtB,mFAAH,sDAIf0D,EAAY,uCAAG,WAAO1D,GAAP,SAAAvE,EAAA,+EACnBuK,IAAKE,IAAL,yBAAmClG,IADhB,2CAAH,sDAKZgD,EAAW,uCAAG,WAAOhD,GAAP,SAAAvE,EAAA,+EAClBuK,IAAKE,IAAL,wBAAkClG,IADhB,2CAAH,sDAKXO,EAAe,uCAAG,WAAOP,GAAP,SAAAvE,EAAA,+EACtBuK,IAAKD,IAAL,+BAAyC/F,IADnB,2CAAH,uD,iCCpC5B,0PAGaoF,EAAW,SAACpF,GACvB,OAAO8F,IAAMC,IAAN,aAAwB/F,IAGpBmG,EAAc,SAACnG,GAC1B,OAAO8F,IAAMM,OAAN,eAA6BpG,IAGzBqG,EAAc,SAACrG,GAC1B,OAAO8F,IAAMQ,MAAN,eAA4BtG,IAGxBuG,EAAc,SAACvG,GAC1B,OAAO8F,IAAMI,IAAN,eAA0BlG,IAGtBwG,EAAkB,SAACxG,GAC9B,OAAO8F,IAAMC,IAAN,oBAA+B/F,IAG3BwC,EAAuB,SAACxC,GACnC,OAAO8F,IAAMC,IAAN,wBAAmC/F,IAG/ByG,EAAmB,SAACzG,GAC/B,OAAO8F,IAAMC,IAAN,yBAAoC/F","file":"static/js/25.f672a266.chunk.js","sourcesContent":["import React,{ memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  message,\r\n} from \"antd\";\r\nimport { accrount_create } from \"../../../api/acount\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst CreateAccount = (props) => {\r\n  const { onCancel, visible, onOk, role_data } = props;\r\n  const [form] = Form.useForm();\r\n  //提交创建账号\r\n  const submit = () => {\r\n    try {\r\n      form.validateFields().then(async () => {\r\n        // console.log(form.getFieldsValue());\r\n        await accrount_create(form.getFieldsValue());\r\n        onOk();\r\n        message.success(\"添加成功\");\r\n        form.resetFields();\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const on_cancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"创建账号\"\r\n      visible={visible}\r\n      onCancel={on_cancel}\r\n      onOk={submit}\r\n    >\r\n      <Form\r\n        {...FormConfig}\r\n        form={form}\r\n        name=\"form_in_modal\"\r\n        hideRequiredMark={true}\r\n      >\r\n        <Form.Item\r\n          label=\"用户名\"\r\n          name=\"name\"\r\n          placeholder=\"请输入用户名\"\r\n          rules={[{ required: true, message: \"请输入用户名\" }]}\r\n        >\r\n          <Input placeholder=\"请输入用户名\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"pass_word\"\r\n          rules={[{ required: true, message: \"请输入密码\" }]}\r\n        >\r\n          <Input placeholder=\"请输入密码\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"再次输入密码\"\r\n          name=\"confirm_pass_word\"\r\n          rules={[\r\n            { required: true, message: \"请再次输入密码\" },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"pass_word\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error(\"两次输入密码不一致\"));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请再次输入密码\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"角色\"\r\n          name=\"role_id\"\r\n          rules={[{ required: true, message: \"请选择角色\" }]}\r\n        >\r\n          <Select placeholder=\"请选择角色\" style={{ width: \"100%\" }}>\r\n            {role_data?.map((option) => (\r\n              <Option key={option.id} value={option.id}>\r\n                {option.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"备注\"\r\n          name=\"remarks\"\r\n          rules={[{ required: true, message: \"请输入备注\" }]}\r\n        >\r\n          <TextArea />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(CreateAccount);\r\n","import { Table, Button } from \"antd\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { account_get, get_by_user_nam } from \"../../../api/acount\";\r\nimport { get_id_user, repacle_id_user_name } from \"../../../utils\";\r\nimport { get_user_name } from \"../../../api/common\";\r\n// import mock from ''\r\nconst ListTable = (props, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    // changeVal 就是暴露给父组件的方法\r\n    getData: (newVal) => {\r\n      account_get_handle(newVal);\r\n    },\r\n  }));\r\n  const {\r\n    modifypassword_h,\r\n    modifyaccountRole_h,\r\n    block_h,\r\n    pageSize = 10,\r\n    total = 0,\r\n    showTotal = true,\r\n  } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: pageSize || 10,\r\n    total: total || 0,\r\n    showSizeChanger: true,\r\n  });\r\n  const columns = [\r\n    { title: \"ID\", dataIndex: \"id\", key: \"id\" },\r\n    { title: \"用户名\", dataIndex: \"uname\" },\r\n    { title: \"角色\", dataIndex: \"role_name\" },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"state\",\r\n      render: (state) => (state == 1 ? \"正常\" : \"冻结\"),\r\n    },\r\n    {\r\n      title: \"最近登录时间\",\r\n      dataIndex: \"last_time\",\r\n      render: (last_time) =>\r\n        last_time ? dayjs(last_time).format(\"YYYY-MM-DD HH:mm:ss\") : \"\",\r\n    },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: (created_at) =>\r\n        created_at ? dayjs(created_at).format(\"YYYY-MM-DD HH:mm:ss\") : \"\",\r\n    },\r\n    {\r\n      title: \"创建者\",\r\n      dataIndex: \"create_user_name\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      align: \"center\",\r\n      render: (text, record, index) => {\r\n        return (\r\n          <span>\r\n            <Button\r\n              type=\"link\"\r\n              onClick={() => modifypassword_h(record.uname, record.id)}\r\n            >\r\n              修改密码\r\n            </Button>\r\n            <Button\r\n              type=\"link\"\r\n              onClick={() => modifyaccountRole_h(record.role_id, record.id)}\r\n            >\r\n              修改权限\r\n            </Button>\r\n            <Button\r\n              type=\"link\"\r\n              onClick={() =>\r\n                block_h(Boolean(record.state == 1), record.uname, record.id)\r\n              }\r\n            >\r\n              {/* 封停/解封 */}\r\n              {record.state == 1 ? \"封停\" : \"解封\"}\r\n            </Button>\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  //获取账号列表\r\n  const account_get_handle = async (params = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      let data = await account_get({\r\n        page: pagination.current,\r\n        page_size: pagination.pageSize,\r\n        ...params,\r\n      });\r\n\r\n      if (data.data.length > 0) {\r\n        const user_ids = get_id_user(data.data, { key: \"create_user\" });\r\n        const ids_names_data = await get_by_user_nam({\r\n          user_ids: user_ids.toString(),\r\n        });\r\n        if (ids_names_data) {\r\n          let ids_names = ids_names_data.data;\r\n          data.data = repacle_id_user_name(data.data, {\r\n            key: \"create_user\",\r\n            data: ids_names,\r\n            trans_key: \"create_user_name\",\r\n          });\r\n        }\r\n      }\r\n\r\n      setData(data.data);\r\n      setPagination({\r\n        ...pagination,\r\n        total: data.page.count,\r\n      });\r\n      // console.log(pagination);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.error(e);\r\n    }\r\n  };\r\n  //表格改变触发\r\n  const onchange = (pagination) => {\r\n    // console.log(pagination)\r\n    setPagination({ ...pagination });\r\n  };\r\n  useEffect(() => {\r\n    account_get_handle();\r\n  }, [pagination.current, pagination.pageSize]);\r\n  return (\r\n    <>\r\n      <Table\r\n        bordered\r\n        loading={loading}\r\n        columns={columns}\r\n        dataSource={data}\r\n        rowKey=\"id\"\r\n        pagination={pagination}\r\n        onChange={onchange}\r\n      ></Table>\r\n    </>\r\n  );\r\n};\r\nexport default forwardRef(ListTable);\r\n","import React, { memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  message,\r\n} from \"antd\";\r\nimport { password_update } from \"../../../api/acount\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst CreateAccount = (props) => {\r\n  const { onCancel, visible, onOk, username, id } = props;\r\n  const [form] = Form.useForm();\r\n  //提交\r\n  const submit = async () => {\r\n    try {\r\n      form.validateFields().then(async () => {\r\n        await password_update({ ...form.getFieldsValue(), id });\r\n\r\n        onOk();\r\n        message.success(\"修改成功\");\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n  const on_cancel = () => {\r\n    onCancel();\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  const reset_h = () => {\r\n    form.resetFields();\r\n  };\r\n  useEffect(() => {\r\n    if (visible) {\r\n      form.setFieldsValue({\r\n        name: username,\r\n      });\r\n    }\r\n  }, [visible]);\r\n\r\n  return (\r\n    <Modal\r\n      title=\"修改密码\"\r\n      visible={visible}\r\n      onCancel={on_cancel}\r\n      onOk={submit}\r\n      afterClose={reset_h}\r\n    >\r\n      <Form\r\n        {...FormConfig}\r\n        form={form}\r\n        name=\"form_in_modal\"\r\n        hideRequiredMark={true}\r\n      >\r\n        <Form.Item label=\"用户名\" name=\"name\">\r\n          <Input disabled placeholder=\"请输入用户名\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"密码\"\r\n          name=\"pass_word\"\r\n          rules={[{ required: true, message: \"请输入密码\" }]}\r\n        >\r\n          <Input placeholder=\"请输入密码\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"再次输入密码\"\r\n          name=\"confirm_pass_word\"\r\n          rules={[\r\n            { required: true, message: \"请再次输入密码\" },\r\n            ({ getFieldValue }) => ({\r\n              validator(_, value) {\r\n                if (!value || getFieldValue(\"pass_word\") === value) {\r\n                  return Promise.resolve();\r\n                }\r\n                return Promise.reject(new Error(\"两次输入密码不一致\"));\r\n              },\r\n            }),\r\n          ]}\r\n        >\r\n          <Input placeholder=\"请再次输入密码\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(CreateAccount);\r\n","import React, { memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  Tree,\r\n  message,\r\n} from \"antd\";\r\nimport { permissions_get_role } from \"../../../api/role\";\r\nimport { trans_tree, trans_tree_get_key } from \"../../../utils\";\r\nimport { update_role } from \"../../../api/acount\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst treeData = [\r\n  {\r\n    title: \"0-0\",\r\n    key: \"0-0\",\r\n    children: [\r\n      {\r\n        title: \"0-0-0\",\r\n        key: \"0-0-0\",\r\n        children: [\r\n          {\r\n            title: \"0-0-0-0\",\r\n            key: \"0-0-0-0\",\r\n          },\r\n          {\r\n            title: \"0-0-0-1\",\r\n            key: \"0-0-0-1\",\r\n          },\r\n          {\r\n            title: \"0-0-0-2\",\r\n            key: \"0-0-0-2\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: \"0-0-1\",\r\n        key: \"0-0-1\",\r\n        children: [\r\n          {\r\n            title: \"0-0-1-0\",\r\n            key: \"0-0-1-0\",\r\n          },\r\n          {\r\n            title: \"0-0-1-1\",\r\n            key: \"0-0-1-1\",\r\n          },\r\n          {\r\n            title: \"0-0-1-2\",\r\n            key: \"0-0-1-2\",\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        title: \"0-0-2\",\r\n        key: \"0-0-2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"0-1\",\r\n    key: \"0-1\",\r\n    children: [\r\n      {\r\n        title: \"0-1-0-0\",\r\n        key: \"0-1-0-0\",\r\n      },\r\n      {\r\n        title: \"0-1-0-1\",\r\n        key: \"0-1-0-1\",\r\n      },\r\n      {\r\n        title: \"0-1-0-2\",\r\n        key: \"0-1-0-2\",\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    title: \"0-2\",\r\n    key: \"0-2\",\r\n  },\r\n];\r\nconst CreateAccount = (props) => {\r\n  const { onCancel, visible, onOk, role_data, role_id, user_id } = props;\r\n  const [form] = Form.useForm();\r\n  const [perms, set_perms] = useState();\r\n  //提交\r\n  const submit = () => {\r\n    form.validateFields().then(async () => {\r\n      await update_role({ ...form.getFieldsValue(), user_id });\r\n\r\n      onOk();\r\n      onCancel();\r\n      message.success(\"修改成功\");\r\n    });\r\n  };\r\n  //取消\r\n  const on_cancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n\r\n  const [expandedKeys, setExpandedKeys] = useState([\"0-0-0\", \"0-0-1\"]);\r\n  const [checkedKeys, setCheckedKeys] = useState([\"0-0-0\"]);\r\n  const [selectedKeys, setSelectedKeys] = useState([]);\r\n  const [autoExpandParent, setAutoExpandParent] = useState(true);\r\n\r\n  const onExpand = (expandedKeysValue) => {\r\n    // console.log(\"onExpand\", expandedKeysValue); // if not set autoExpandParent to false, if children expanded, parent can not collapse.\r\n    // or, you can remove all expanded children keys.\r\n\r\n    setExpandedKeys(expandedKeysValue);\r\n    setAutoExpandParent(false);\r\n  };\r\n\r\n  const onCheck = (checkedKeysValue) => {\r\n    console.log(\"onCheck\", checkedKeysValue);\r\n    setCheckedKeys(checkedKeysValue);\r\n  };\r\n\r\n  const onSelect = (selectedKeysValue, info) => {\r\n    console.log(\"onSelect\", info);\r\n    setSelectedKeys(selectedKeysValue);\r\n  };\r\n  const permissions_get_role_h = async (id) => {\r\n    try {\r\n      let data = await permissions_get_role({ role_id: id });\r\n      // console.log(data)\r\n      let treeData = trans_tree(data.data, {\r\n        key: \"id\",\r\n        title: \"name\",\r\n        children: \"child\",\r\n      });\r\n      set_perms(treeData);\r\n      const keys = trans_tree_get_key(data.data, {\r\n        key: \"id\",\r\n        title: \"name\",\r\n        children: \"child\",\r\n        check: \"check\",\r\n        checkState: true,\r\n      });\r\n      // console.log(\"测试\", keys, data.data);\r\n      setCheckedKeys(keys);\r\n      // console.log(treeData)\r\n      // set_perms(data.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (visible) {\r\n      permissions_get_role_h(role_id);\r\n      form.setFieldsValue({\r\n        role_id,\r\n      });\r\n    }\r\n  }, [visible]);\r\n  //选择角色\r\n  const check_role = (id) => {\r\n    // console.log(id);\r\n    permissions_get_role_h(id);\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"修改权限\"\r\n      visible={visible}\r\n      onOk={submit}\r\n      onCancel={on_cancel}\r\n    >\r\n      <Form\r\n        {...FormConfig}\r\n        form={form}\r\n        name=\"form_in_modal\"\r\n        hideRequiredMark={true}\r\n      >\r\n        <Form.Item label=\"角色\" name=\"role_id\">\r\n          <Select style={{ width: \"100%\" }} onChange={check_role}>\r\n            {role_data?.map((option) => (\r\n              <Option key={option.id} value={option.id}>\r\n                {option.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"权限\" name=\"iscompulsory\">\r\n          <Tree\r\n            disabled\r\n            checkable\r\n            onExpand={onExpand}\r\n            expandedKeys={expandedKeys}\r\n            autoExpandParent={autoExpandParent}\r\n            onCheck={onCheck}\r\n            checkedKeys={checkedKeys}\r\n            onSelect={onSelect}\r\n            selectedKeys={selectedKeys}\r\n            treeData={perms}\r\n          />\r\n        </Form.Item>\r\n        {/* <Row>\r\n          <Col span={6}></Col>\r\n          <Col span={18}>\r\n            <Form.Item>\r\n              <Space>\r\n                <Button type=\"primary\" htmlType=\"submit\" onClick={submit}>\r\n                  Submit\r\n                </Button>\r\n                <Button htmlType=\"button\" onClick={onCancel}>\r\n                  Cannel\r\n                </Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row> */}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(CreateAccount);\r\n","import React,{ memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Col,\r\n  Row,\r\n  DatePicker,\r\n  message,\r\n} from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { upload_block } from \"../../../api/acount\";\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst CreateAccount = (props) => {\r\n  const { onCancel, visible, onOk, username, id } = props;\r\n  const [form] = Form.useForm();\r\n  //提交\r\n  const submit = () => {\r\n    try {\r\n      form.validateFields().then(async () => {\r\n        // console.log(form.getFieldsValue());\r\n        await upload_block({\r\n          ...form.getFieldsValue(),\r\n          ban_time: dayjs(form.getFieldValue(\"ban_time\")).format(\r\n            \"YYYY-MM-DD HH:mm:ss\"\r\n          ),\r\n          id,\r\n        });\r\n        message.success(\"封停成功\");\r\n        form.resetFields();\r\n        onOk();\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const on_cancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  useEffect(() => {\r\n    if(visible){\r\n      form.setFieldsValue({\r\n        username,\r\n      });\r\n    }\r\n  }, [visible]);\r\n  return (\r\n    <Modal title=\"封停\" visible={visible} onCancel={on_cancel} onOk={submit}>\r\n      <Form form={form} name=\"form_in_modal\" {...FormConfig}>\r\n        <Form.Item label=\"用户名\" name=\"username\">\r\n          <Input disabled></Input>\r\n        </Form.Item>\r\n        <Form.Item label=\"时间\" name=\"ban_time\">\r\n          <DatePicker placeholder=\"请选择时间\" format=\"YYYY-MM-DD HH:mm:ss\" showTime={{}} />\r\n        </Form.Item>\r\n        <Form.Item label=\"原因\" name=\"ban_content\">\r\n          <TextArea placeholder=\"请输入原因\"></TextArea>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(CreateAccount);\r\n","import React,{ memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Col,\r\n  Row,\r\n  DatePicker,\r\n  message,\r\n} from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { upload_block } from \"../../../api/acount\";\r\nconst { RangePicker } = DatePicker;\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst UnFrozen = (props) => {\r\n  const { onCancel, visible, onOk, username, id } = props;\r\n  const [form] = Form.useForm();\r\n  //提交\r\n  const submit = () => {\r\n    try {\r\n      form.validateFields().then(async () => {\r\n        await upload_block({ ...form.getFieldsValue(), ban_time: \"\", id });\r\n        message.success(\"解封成功\");\r\n        form.resetFields();\r\n        onOk();\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const on_cancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  useEffect(() => {\r\n    if(visible){\r\n      form.setFieldsValue({\r\n        username,\r\n      });\r\n    }\r\n  }, [visible]);\r\n  return (\r\n    <Modal title=\"解封\" visible={visible} onCancel={on_cancel} onOk={submit}>\r\n      <Form form={form} name=\"form_in_modal\" {...FormConfig}>\r\n        <Form.Item label=\"用户名\" name=\"username\">\r\n          <Input disabled></Input>\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"时间\" name=\"istest\">\r\n          <DatePicker format=\"YYYY-MM-DD HH:mm:ss\" showTime={{}} />\r\n        </Form.Item> */}\r\n        <Form.Item label=\"原因\" name=\"ban_content\">\r\n          <TextArea placeholder=\"请输入原因\"></TextArea>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(UnFrozen);\r\n","/*\r\n * @Description: 角色管理\r\n * @Author: luck-cmyk\r\n */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Table, Button, Popconfirm, Space, message, Divider } from \"antd\";\r\nimport Page from \"../../components/Page\";\r\nimport dayjs from \"dayjs\";\r\nimport CreateAccount from \"./components/CreateAccount.js\";\r\nimport ListTable from \"./components/ListTable\";\r\nimport ModifyPassword from \"./components/ModifyPassword\";\r\nimport ModifyAccountRole from \"./components/ModifyAccountRole\";\r\nimport Frozen from \"./components/Frozen\";\r\nimport UnFrozen from \"./components/UnFrozen\";\r\nimport { accrount_create, password_update } from \"../../api/acount\";\r\nimport { role_get } from \"../../api/role\";\r\nfunction Index(props) {\r\n  const [data, setData] = useState([]);\r\n  const childRef = useRef();\r\n  const [visible, setVisible] = useState(false);\r\n  const [add_visible, set_add_visible] = useState(false);\r\n  const [password_visible, set_password_visible] = useState(false);\r\n  const [accountRole_visible, set_accountRole_visible] = useState(false);\r\n  const [fromData, setFromData] = useState([]);\r\n  const [curAppid, setAppid] = useState();\r\n  const [frozen_visible, set_frozen_visible] = useState();\r\n  const [unforzen_visible, set_unforzen_visible] = useState();\r\n  const [username, set_username] = useState(\"\");\r\n  const [id, set_id] = useState(\"\");\r\n  const [role_id, set_role_id] = useState(\"\");\r\n  const appidList = useSelector((state) => state.appids);\r\n  const [role_data, set_role_data] = useState([]); //角色列表数据\r\n  const edit = (record, index) => {\r\n    let d = {\r\n      ...record,\r\n      time: [dayjs.unix(record.start_time), dayjs.unix(record.end_time)],\r\n    };\r\n    // console.log('编辑表单', d);\r\n    setFromData(d);\r\n    setVisible(true);\r\n  };\r\n\r\n  const onSubmit = async (fixData) => {};\r\n  const add_onCancel = () => {\r\n    set_add_visible(false);\r\n  };\r\n  const handleDelete = async (id) => {};\r\n\r\n  useEffect(() => {}, [appidList]);\r\n  //设置当前操作的用户名密码\r\n  const set_opa_user = (username, id) => {\r\n    set_username(username);\r\n    set_id(id);\r\n  };\r\n  //创建账号\r\n  const handleAdd = () => {\r\n    set_add_visible(true);\r\n  };\r\n\r\n  //修改密码\r\n  const modifypassword_h = (username, id) => {\r\n    set_opa_user(username, id);\r\n    set_password_visible(true);\r\n  };\r\n\r\n  //修改密码关闭\r\n  const password_onCancel = () => {\r\n    set_password_visible(false);\r\n  };\r\n  //修改权限\r\n  const modifyaccountRole_h = (role_id, id) => {\r\n    set_role_id(role_id);\r\n    set_id(id);\r\n    set_accountRole_visible(true);\r\n  };\r\n  //修改权限关闭\r\n  const accountRole_onCancel = () => {\r\n    set_accountRole_visible(false);\r\n  };\r\n  //冻结或解冻设置\r\n  const block_h = (boolean, username, id) => {\r\n    set_opa_user(username, id);\r\n    boolean ? set_frozen_visible(true) : set_unforzen_visible(true);\r\n  };\r\n  //冻结关闭\r\n  const frozen_onCancel = () => {\r\n    set_frozen_visible(false);\r\n  };\r\n  //解冻关闭\r\n  const unfrozen_onCancel = () => {\r\n    set_unforzen_visible(false);\r\n  };\r\n  //新增账号确定\r\n  const add_ok = () => {\r\n    childRef.current.getData();\r\n    set_add_visible(false);\r\n  };\r\n  //修改密码确定\r\n  const password_update_ok = () => {\r\n    set_password_visible(false);\r\n    childRef.current.getData();\r\n  };\r\n  //获取角色\r\n  const get_role = async () => {\r\n    let data = await role_get({\r\n      page: 1,\r\n      page_size: 100000,\r\n    });\r\n    // console.log(data.data);\r\n    set_role_data(data.data ? data.data : []);\r\n  };\r\n  //冻结成功\r\n  const forzen_ok = () => {\r\n    set_frozen_visible(false);\r\n    childRef.current.getData();\r\n  };\r\n  //解冻成功\r\n  const unforzen_ok = () => {\r\n    // console.log(1234)\r\n    set_unforzen_visible(false);\r\n    childRef.current.getData();\r\n  };\r\n  //修改权限成功\r\n  const accountRole_ok = () => {\r\n    set_accountRole_visible(false);\r\n    childRef.current.getData();\r\n  };\r\n  useEffect(() => {\r\n    get_role();\r\n  }, []);\r\n  return (\r\n    <Page title={props.route.title}>\r\n      {/* <Space direction=\"vertical\"> */}\r\n      <Space>\r\n        <Button type=\"primary\" onClick={handleAdd}>\r\n          创建账号\r\n        </Button>\r\n      </Space>\r\n      <Divider dashed />\r\n      <ListTable\r\n        ref={childRef}\r\n        modifypassword_h={modifypassword_h}\r\n        modifyaccountRole_h={modifyaccountRole_h}\r\n        block_h={block_h}\r\n      />\r\n      {/* </Space> */}\r\n      <CreateAccount\r\n        role_data={role_data}\r\n        onOk={add_ok}\r\n        visible={add_visible}\r\n        onCancel={() => add_onCancel()}\r\n      />\r\n      <ModifyPassword\r\n        username={username}\r\n        id={id}\r\n        onOk={password_update_ok}\r\n        visible={password_visible}\r\n        onCancel={() => password_onCancel()}\r\n      />\r\n      <ModifyAccountRole\r\n        role_id={role_id}\r\n        user_id={id}\r\n        role_data={role_data}\r\n        visible={accountRole_visible}\r\n        onCancel={() => accountRole_onCancel()}\r\n        onOk={() => accountRole_ok()}\r\n      />\r\n      <Frozen\r\n        visible={frozen_visible}\r\n        onCancel={() => frozen_onCancel()}\r\n        username={username}\r\n        id={id}\r\n        onOk={() => forzen_ok()}\r\n      />\r\n      <UnFrozen\r\n        visible={unforzen_visible}\r\n        onCancel={() => unfrozen_onCancel()}\r\n        username={username}\r\n        id={id}\r\n        onOk={() => unforzen_ok()}\r\n      />\r\n    </Page>\r\n  );\r\n}\r\nexport default Index;\r\n","import http from \"utils/http\";\r\nimport axios from \"../utils/axios\";\r\nexport const mock = async (params) => {\r\n  let data = await http.get(`/mock`, { params });\r\n\r\n  return data?.data;\r\n};\r\n\r\nexport const getAccountLog = async (uid, params) => {\r\n  let data = await axios.get(`/users/${uid}/accountLog`, {params});\r\n  return data?.data\r\n};\r\n//新增账号\r\nexport const accrount_create = async (params) => {\r\n  return await http.post(`/user-web/create`, params);\r\n};\r\n\r\n//获取账号列表\r\nexport const account_get = async (params) => {\r\n  return http.get(`/user-web/gets`, params);\r\n};\r\n//修改密码\r\nexport const password_update = async (params) => {\r\n  return await http.put(`/user-web/update-password`, params);\r\n};\r\n//封停/解封\r\nexport const upload_block = async (params) => {\r\n  return http.put(`/user-web/update-block`, params);\r\n};\r\n\r\n//修改角色\r\nexport const update_role = async (params) => {\r\n  return http.put(`/user-web/update-role`, params);\r\n};\r\n\r\n//获取用户名称\r\nexport const get_by_user_nam = async (params) => {\r\n  return http.get(`/component/gets-by-user-name`, params);\r\n};\r\n\r\n","import axios from \"utils/http\";\r\n\r\n//获取角色列表\r\nexport const role_get = (params) => {\r\n  return axios.get(`/role/gets`, params);\r\n};\r\n//删除角色\r\nexport const role_delete = (params) => {\r\n  return axios.delete(`/role/delete`, params);\r\n};\r\n//新增角色\r\nexport const role_create = (params) => {\r\n  return axios.jpost(`/role/create`, params);\r\n};\r\n//修改角色\r\nexport const role_update = (params) => {\r\n  return axios.put(`/role/update`, params);\r\n};\r\n//获取所有权限\r\nexport const permissions_get = (params) => {\r\n  return axios.get(`/permissions/gets`, params);\r\n};\r\n//获取所有权限\r\nexport const permissions_get_role = (params) => {\r\n  return axios.get(`/role/get-permissions`, params);\r\n};\r\n//获取角色下面的用户\r\nexport const get_role_by_user = (params) => {\r\n  return axios.get(`/role/get-role-by-user`, params);\r\n};\r\n"],"sourceRoot":""}