{"version":3,"sources":["api/game.js","pages/Game/components/ListTable.js","pages/Game/components/ListTableBar.js","pages/Game/components/DefineGame.js","pages/Game/components/CreateGame.js","pages/Game/components/UpdataGame.js","pages/Game/index.js","api/acount.js"],"names":["game_get","params","http","get","game_create","jpost","game_update","put","getUserGameList","uid","a","axios","data","ListTable","props","ref","useImperativeHandle","getData","newVal","game_get_handle","pageSize","total","handleUpdate","showTotal","useState","loading","setLoading","setData","current","pagination","setPagination","columns","title","dataIndex","key","render","created_at","dayjs","format","status","align","text","record","index","type","onClick","page","page_size","count","console","error","useEffect","rowKey","bordered","dataSource","onChange","forwardRef","ListTableBar","search_h","handleCreate","useForm","form","name","initialValues","remember","layout","Item","label","placeholder","getFieldsValue","resetFields","Option","TextArea","CreateGame","onCancel","visible","onOk","validateFields","then","message","success","err","log","labelCol","span","wrapperCol","hideRequiredMark","rules","required","memo","UpdataGame","game_info","id","appid","game_name","package_name","setFieldsValue","min","value","Index","childRef","useRef","update_visible","set_update_visible","create_visible","set_create_visible","set_game_info","useSelector","state","appids","Page","route","dashed","accrount_create","post","account_get","password_update","upload_block","update_role","get_by_user_nam","getAccountLog"],"mappings":"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","file":"static/js/27.f2cb55ec.chunk.js","sourcesContent":["import http from \"utils/http\";\r\nimport axios from \"../utils/axios\";\r\n\r\n//获取游戏列表\r\nexport const game_get = (params) => {\r\n  return http.get(`/admin/game-manage/gets`, { ...params });\r\n};\r\n//创建游戏\r\nexport const game_create = (params) => {\r\n  return http.jpost(`/admin/game-manage/create`, { ...params });\r\n};\r\n//编辑游戏\r\nexport const game_update = (params) => {\r\n  return http.put(`/admin/game-manage/update`, { ...params });\r\n};\r\n\r\nexport const getUserGameList = async (uid, params) => {\r\n  let data = await axios.get(`/users/${uid}/games`, { params });\r\n\r\n  return data?.data;\r\n};\r\n","import React, {\r\n  useEffect,\r\n  forwardRef,\r\n  useState,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport { Table, Button } from \"antd\";\r\nimport dayjs from \"dayjs\";\r\nimport { mock } from \"@/api/mock\";\r\nimport { game_get } from \"../../../api/game\";\r\n// import mock from ''\r\n\r\nconst ListTable = (props, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    // changeVal 就是暴露给父组件的方法\r\n    getData: (newVal) => {\r\n      game_get_handle(newVal);\r\n    },\r\n  }));\r\n  const { pageSize = 5, total = 20, showTotal = true ,handleUpdate} = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: pageSize || 20,\r\n    total: total || 100000,\r\n  });\r\n  const columns = [\r\n    { title: \"ID\", dataIndex: \"id\", key: \"id\" },\r\n    { title: \"appid\", dataIndex: \"appid\", key: \"appid\" },\r\n    { title: \"游戏名称\", dataIndex: \"game_name\" },\r\n    { title: \"包名\", dataIndex: \"package_name\", key: \"appid\" },\r\n    {\r\n      title: \"创建时间\",\r\n      dataIndex: \"created_at\",\r\n      render: (created_at) => dayjs(created_at).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    },\r\n    {\r\n      title: \"状态\",\r\n      dataIndex: \"status\",\r\n      render: (status) => (status === 1 ? \"可用\" : \"不可用\"),\r\n    },\r\n\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"operation\",\r\n      align: \"center\",\r\n      render: (text, record, index) => {\r\n        return (\r\n          <span>\r\n            <Button type=\"link\" onClick={() => handleUpdate(record)}>\r\n              编辑\r\n            </Button>\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  //获取游戏列表\r\n  const game_get_handle = async (params = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      let data = await game_get({\r\n        page: pagination.current,\r\n        page_size: pagination.pageSize,\r\n        ...params,\r\n      });\r\n      // console.log(data.data)\r\n      setData(data.data);\r\n      setPagination({\r\n        ...pagination,\r\n        total: data.page.count,\r\n      });\r\n      setLoading(false);\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.error(e);\r\n    }\r\n  };\r\n  useEffect(async () => {\r\n    game_get_handle();\r\n  }, [pagination.current]);\r\n  //表格改变触发\r\n  const onchange = (pagination) => {\r\n    setPagination({ ...pagination });\r\n  };\r\n  return (\r\n    <>\r\n      <Table\r\n        rowKey=\"id\"\r\n        bordered\r\n        loading={loading}\r\n        columns={columns}\r\n        dataSource={data}\r\n        pagination={pagination}\r\n        onChange={onchange}\r\n      ></Table>\r\n    </>\r\n  );\r\n};\r\nexport default forwardRef(ListTable);\r\n","import { Space, Form, Input, Button } from \"antd\";\r\nimport React from \"react\";\r\nconst ListTableBar = (props) => {\r\n  const { search_h, handleCreate } = props;\r\n  const [form] = Form.useForm();\r\n  const search_handle = () => {\r\n    search_h(form.getFieldsValue());\r\n  };\r\n  const reset_handle = () => {\r\n    form.resetFields();\r\n    search_h();\r\n  };\r\n  return (\r\n    <Space>\r\n      <Form\r\n        form={form}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        layout=\"inline\"\r\n      >\r\n        <Form.Item label=\"游戏名称\" name=\"search_name\">\r\n          <Input placeholder=\"请输入游戏名称进行查询\" />\r\n        </Form.Item>\r\n      </Form>\r\n      <Button onClick={search_handle}>查询</Button>\r\n      <Button onClick={reset_handle}>重置</Button>\r\n      <Button onClick={handleCreate}>新增</Button>\r\n    </Space>\r\n  );\r\n};\r\nexport default ListTableBar;\r\n","import React,{ memo, useState, useEffect } from \"react\";\r\nimport { Modal, Form, Input, Select, Button, Space, Row, Col } from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst DefineGame = (props) => {\r\n  const { onCancel, visible, onOk } = props;\r\n  const [form] = Form.useForm();\r\n  //提交\r\n  const submit = () => {\r\n    // console.log(form.getFieldsValue())\r\n    form.validateFields().then(() => {\r\n      form.resetFields();\r\n      onOk();\r\n    });\r\n  };\r\n  const on_cancel = () => {\r\n    onCancel();\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"定义游戏\"\r\n      visible={visible}\r\n      onCancel={on_cancel}\r\n      onOk={submit}\r\n    >\r\n      <Form {...FormConfig} form={form} name=\"form_in_modal\">\r\n        <Form.Item label=\"游戏名\" name=\"status\">\r\n          <Input placeholder=\"Multiple uid are separated by commas\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"游戏标志\" name=\"iscompulsory\">\r\n          <Input placeholder=\"Multiple uid are separated by commas\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"备注\" name=\"iscompulsory\">\r\n          <TextArea placeholder=\"Multiple uid are separated by commas\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"钥匙对\" name=\"istest\">\r\n          <Input placeholder=\"Multiple uid are separated by commas\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"公钥\" name=\"istest\">\r\n          <Input placeholder=\"Multiple uid are separated by commas\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"私钥\" name=\"istest\">\r\n          <Input placeholder=\"Multiple uid are separated by commas\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"支持货币\" name=\"userids\">\r\n          <Select style={{ width: 120 }} mode=\"multiple\">\r\n            <Option value=\"1\">Yes</Option>\r\n            <Option value=\"0\">No</Option>\r\n          </Select>\r\n        </Form.Item>\r\n        {/* <Row>\r\n          <Col span={6}></Col>\r\n          <Col span={18}>\r\n            <Form.Item>\r\n              <Space>\r\n                <Button type=\"primary\" htmlType=\"submit\">\r\n                  Submit\r\n                </Button>\r\n                <Button htmlType=\"button\" onClick={onCancel}>\r\n                  Cannel\r\n                </Button>\r\n              </Space>\r\n            </Form.Item>\r\n          </Col>\r\n        </Row> */}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(DefineGame);\r\n","import React,{ memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  message,\r\n} from \"antd\";\r\nimport { accrount_create } from \"../../../api/acount\";\r\nimport { game_create } from \"../../../api/game\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst CreateGame = (props) => {\r\n  const { onCancel, visible, onOk } = props;\r\n  const [form] = Form.useForm();\r\n  //提交创建账号\r\n  const submit = () => {\r\n    try {\r\n      form.validateFields().then(async () => {\r\n        // console.log(form.getFieldsValue());\r\n        await game_create(form.getFieldsValue());\r\n        onOk();\r\n        message.success(\"创建成功\");\r\n        form.resetFields();\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const on_cancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"创建游戏\"\r\n      visible={visible}\r\n      onCancel={on_cancel}\r\n      onOk={submit}\r\n    >\r\n      <Form\r\n        {...FormConfig}\r\n        form={form}\r\n        name=\"form_in_modal\"\r\n        hideRequiredMark={true}\r\n      >\r\n        <Form.Item\r\n          label=\"appid\"\r\n          name=\"appid\"\r\n          rules={[{ required: true, message: \"请输入appid\" }]}\r\n        >\r\n          <Input placeholder=\"请输入appid\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"游戏名\"\r\n          name=\"game_name\"\r\n          rules={[{ required: true, message: \"请输入游戏名\" }]}\r\n        >\r\n          <Input placeholder=\"请输入游戏名\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"包名\"\r\n          name=\"package_name\"\r\n          rules={[{ required: true, message: \"请输入包名\" }]}\r\n        >\r\n          <Input placeholder=\"请输入包名\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(CreateGame);\r\n","import React,{ memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  message,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { accrount_create } from \"../../../api/acount\";\r\nimport { game_create, game_update } from \"../../../api/game\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst UpdataGame = (props) => {\r\n  const { onCancel, visible, onOk, game_info } = props;\r\n  const {\r\n    id = \"\",\r\n    appid = \"\",\r\n    game_name = \"\",\r\n    package_name = \"\",\r\n    status = \"\",\r\n  } = game_info;\r\n  const [form] = Form.useForm();\r\n  //提交创建账号\r\n  const submit = () => {\r\n    try {\r\n      form.validateFields().then(async () => {\r\n        // console.log(form.getFieldsValue());\r\n        await game_update({ ...form.getFieldsValue(), id });\r\n        onOk();\r\n        form.resetFields();\r\n\r\n        message.success(\"更新成功\");\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const on_cancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n  useEffect(() => {\r\n    if(visible){\r\n      form.setFieldsValue({\r\n        appid,\r\n        game_name,\r\n        package_name,\r\n        status,\r\n      });\r\n    }\r\n  }, [visible]);\r\n  return (\r\n    <Modal\r\n      title=\"编辑游戏\"\r\n      visible={visible}\r\n      onCancel={on_cancel}\r\n      onOk={submit}\r\n    >\r\n      <Form\r\n        {...FormConfig}\r\n        form={form}\r\n        name=\"form_in_modal\"\r\n        hideRequiredMark={true}\r\n      >\r\n        <Form.Item\r\n          label=\"appid\"\r\n          name=\"appid\"\r\n          rules={[{ required: true, message: \"请输入appid\" }]}\r\n        >\r\n          <InputNumber min={0} placeholder=\"请输入appid\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"游戏名\"\r\n          name=\"game_name\"\r\n          rules={[{ required: true, message: \"请输入游戏名\" }]}\r\n        >\r\n          <Input placeholder=\"请输入游戏名\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"包名\"\r\n          name=\"package_name\"\r\n          rules={[{ required: true, message: \"请输入包名\" }]}\r\n        >\r\n          <Input placeholder=\"请输入包名\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"状态\"\r\n          name=\"status\"\r\n          rules={[{ required: true, message: \"请选择状态\" }]}\r\n        >\r\n          <Select>\r\n            <Option value={1}>可用</Option>\r\n            <Option value={2}>不可用</Option>\r\n          </Select>\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(UpdataGame);\r\n","/*\r\n * @Description: 角色管理\r\n * @Author: luck-cmyk\r\n */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Table, Button, Popconfirm, Space, message, Divider } from \"antd\";\r\nimport Page from \"../../components/Page\";\r\nimport dayjs from \"dayjs\";\r\nimport ListTable from \"./components/ListTable\";\r\nimport ListTableBar from \"./components/ListTableBar\";\r\nimport DefineGame from \"./components/DefineGame\";\r\nimport { game_get } from \"../../api/game\";\r\nimport CreateGame from \"./components/CreateGame\";\r\nimport UpdataGame from \"./components/UpdataGame\";\r\nfunction Index(props) {\r\n  const childRef = useRef();\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [visible, setVisible] = useState(false);\r\n  const [fromData, setFromData] = useState([]);\r\n  const [curAppid, setAppid] = useState();\r\n  const [update_visible, set_update_visible] = useState(false);\r\n  const [create_visible, set_create_visible] = useState(false);\r\n  const [game_info, set_game_info] = useState({\r\n    id: \"\",\r\n    appid: \"\",\r\n    game_name: \"\",\r\n    package_name: \"\",\r\n    status: \"\",\r\n  });\r\n  const appidList = useSelector((state) => state.appids);\r\n  const getDataByAppid = async (appid) => {\r\n    setAppid(appid);\r\n    setLoading(true);\r\n    const dataSource = data.map((data, index) => {\r\n      return {\r\n        ...data,\r\n        key: data.id,\r\n      };\r\n    });\r\n    setLoading(false);\r\n    setData(dataSource);\r\n  };\r\n\r\n  // useEffect(async () => {\r\n  //   try {\r\n  //     setLoading(true);\r\n  //     let data = await game_get();\r\n  //     setData(data);\r\n  //     setLoading(false);\r\n  //   } catch (error) {\r\n  //     setLoading(false);\r\n  //     console.error(error);\r\n  //   }\r\n  // }, []);\r\n  //创建游戏\r\n  const handleCreate = () => {\r\n    set_create_visible(true);\r\n  };\r\n\r\n  //编辑游戏\r\n  const handleUpdate = (record) => {\r\n    set_game_info(record);\r\n    set_update_visible(true);\r\n  };\r\n  //编辑游戏取消\r\n  const update_cancel = () => {\r\n    set_update_visible(false);\r\n  };\r\n  //编辑游戏完成\r\n  const update_ok = () => {\r\n    set_update_visible(false);\r\n    childRef.current.getData();\r\n  };\r\n  //创建游戏取消\r\n  const create_cancel = () => {\r\n    set_create_visible(false);\r\n  };\r\n  //创建游戏成功\r\n  const create_ok = () => {\r\n    set_create_visible(false);\r\n    childRef.current.getData();\r\n  };\r\n  const search_h = (value) => {\r\n    childRef.current.getData(value);\r\n  };\r\n  return (\r\n    <Page title={props.route.title}>\r\n      <ListTableBar search_h={search_h} handleCreate={handleCreate} />\r\n      <Divider dashed />\r\n      <ListTable ref={childRef} handleUpdate={handleUpdate} />\r\n      <CreateGame\r\n        visible={create_visible}\r\n        onCancel={create_cancel}\r\n        onOk={create_ok}\r\n      />\r\n      <UpdataGame\r\n        game_info={game_info}\r\n        visible={update_visible}\r\n        onCancel={update_cancel}\r\n        onOk={update_ok}\r\n      />\r\n    </Page>\r\n  );\r\n}\r\nexport default Index;\r\n","import http from \"utils/http\";\r\nimport axios from \"../utils/axios\";\r\nexport const mock = async (params) => {\r\n  let data = await http.get(`/mock`, { params });\r\n\r\n  return data?.data;\r\n};\r\n//新增账号\r\nexport const accrount_create = async (params) => {\r\n  return await http.post(`/admin/user-web/create`, params);\r\n};\r\n\r\n//获取账号列表\r\nexport const account_get = async (params) => {\r\n  return http.get(`/admin/user-web/gets`, params);\r\n};\r\n//修改密码\r\nexport const password_update = async (params) => {\r\n  return await http.put(`/admin/user-web/update-password`, params);\r\n};\r\n//封停/解封\r\nexport const upload_block = async (params) => {\r\n  return http.put(`/admin/user-web/update-block`, params);\r\n};\r\n\r\n//修改角色\r\nexport const update_role = async (params) => {\r\n  return http.put(`/admin/user-web/update-role`, params);\r\n};\r\n\r\n//获取用户名称\r\nexport const get_by_user_nam = async (params) => {\r\n  return http.get(`/admin/component/gets-by-user-name`, params);\r\n};\r\n\r\nexport const getAccountLog = async (uid, params) => {\r\n  let data = await axios.get(`/users/${uid}/accountLog`, {params});\r\n  return data?.data\r\n};\r\n"],"sourceRoot":""}