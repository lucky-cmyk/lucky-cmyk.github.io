{"version":3,"sources":["pages/GameOperaLog/components/ListTable.js","pages/GameOperaLog/components/ListTableBar.js","pages/GameOperaLog/index.js","api/acount.js","api/log.js"],"names":["ListTable","props","ref","useImperativeHandle","getData","newVal","game_log_get_handle","modifypassword_h","modifyaccountRole_h","block_h","pageSize","total","showTotal","useState","loading","setLoading","data","setData","current","pagination","setPagination","a","params","game_log_get","page","page_size","length","user_ids","get_id_user","key","get_by_user_nam","toString","ids_names_data","ids_names","repacle_id_user_name","trans_key","count","console","error","useEffect","bordered","columns","title","dataIndex","dataSource","rowKey","onChange","forwardRef","ListTableBar","search_h","useForm","form","name","initialValues","remember","layout","Item","label","placeholder","onClick","getFieldsValue","resetFields","Index","appidList","useSelector","state","appids","childRef","useRef","Page","route","value","dashed","accrount_create","http","post","account_get","get","password_update","put","upload_block","update_role","getAccountLog","uid","axios","account_log_get","status","role_log_get"],"mappings":"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","file":"static/js/29.bfef44be.chunk.js","sourcesContent":["import { Table, Button } from \"antd\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { mock } from \"@/api/mock\";\r\nimport { account_get, get_by_user_nam } from \"../../../api/acount\";\r\nimport { account_log_get, game_log_get } from \"../../../api/log\";\r\nimport { get_id_user, repacle_id_user_name } from \"../../../utils\";\r\n// import mock from ''\r\nconst ListTable = (props, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    // changeVal 就是暴露给父组件的方法\r\n    getData: (newVal) => {\r\n      game_log_get_handle(newVal);\r\n    },\r\n  }));\r\n  const {\r\n    modifypassword_h,\r\n    modifyaccountRole_h,\r\n    block_h,\r\n    pageSize = 5,\r\n    total = 20,\r\n    showTotal = true,\r\n  } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: pageSize || 20,\r\n    total: total || 0,\r\n  });\r\n  const columns = [\r\n    { title: \"ID\", dataIndex: \"id\", key: \"id\" },\r\n    { title: \"操作模块\", dataIndex: \"module\" },\r\n    { title: \"操作功能\", dataIndex: \"action\" },\r\n    { title: \"操作人\", dataIndex: \"action_user_name\" },\r\n    {\r\n      title: \"操作时间\",\r\n      dataIndex: \"action_time\",\r\n      // render: (action_time) =>\r\n      //   dayjs(action_time).format(\"YYYY-MM-DD HH:mm:ss\"),\r\n    },\r\n    {\r\n      title: \"操作备注\",\r\n      dataIndex: \"action_remarks\",\r\n    },\r\n  ];\r\n  //获取日志列表\r\n  const game_log_get_handle = async (params = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      let data = await game_log_get({\r\n        page: pagination.current,\r\n        page_size: pagination.pageSize,\r\n        ...params,\r\n      });\r\n      if(data.data.length>0){\r\n        const user_ids = get_id_user(data.data, { key: \"action_user\" });\r\n        const ids_names_data = await get_by_user_nam({\r\n          user_ids: user_ids.toString(),\r\n        });\r\n        let ids_names = ids_names_data.data;\r\n        data.data = repacle_id_user_name(data.data, {\r\n          key: \"action_user\",\r\n          data: ids_names,\r\n          trans_key: \"action_user_name\",\r\n        });\r\n      }\r\n    \r\n      setData(data.data);\r\n      setPagination({\r\n        ...pagination,\r\n        total: data.page.count,\r\n        pageSize: data.page.page_size,\r\n      });\r\n      setLoading(false);\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.error(e);\r\n    }\r\n  };\r\n  //表格改变触发\r\n  const onchange = (pagination) => {\r\n    setPagination({ ...pagination });\r\n  };\r\n  useEffect(async () => {\r\n    game_log_get_handle();\r\n  }, [pagination.current]);\r\n  return (\r\n    <>\r\n      <Table\r\n        bordered\r\n        loading={loading}\r\n        columns={columns}\r\n        dataSource={data}\r\n        rowKey=\"id\"\r\n        pagination={pagination}\r\n        onChange={onchange}\r\n      ></Table>\r\n    </>\r\n  );\r\n};\r\nexport default forwardRef(ListTable);\r\n","import { Space, Form, Input, Button } from \"antd\";\r\nimport React from \"react\";\r\nconst ListTableBar = (props) => {\r\n  const { search_h } = props;\r\n  const [form] = Form.useForm();\r\n  const search_handle = () => {\r\n    search_h(form.getFieldsValue());\r\n  };\r\n  const reset_handle = () => {\r\n    form.resetFields();\r\n    search_h();\r\n  };\r\n  return (\r\n    <Space>\r\n      <Form\r\n        form={form}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        layout=\"inline\"\r\n      >\r\n        <Form.Item label=\"操作人\" name=\"user_name\">\r\n          <Input placeholder=\"请输入操作人\" />\r\n        </Form.Item>\r\n        <Form.Item label=\"操作功能\" name=\"action\">\r\n          <Input placeholder=\"请输入操作功能\" />\r\n        </Form.Item>\r\n      </Form>\r\n      <Button onClick={search_handle}>查询</Button>\r\n      <Button onClick={reset_handle}>重置</Button>\r\n    </Space>\r\n  );\r\n};\r\nexport default ListTableBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Table, Button, Popconfirm, Space, message, Divider } from \"antd\";\r\nimport Page from \"../../components/Page\";\r\nimport dayjs from \"dayjs\";\r\nimport ListTable from \"./components/ListTable\";\r\nimport ListTableBar from \"./components/ListTableBar\";\r\nfunction Index(props) {\r\n  const appidList = useSelector((state) => state.appids);\r\n  const childRef = useRef();\r\n  useEffect(() => {}, [appidList]);\r\n  const search_h = (value) => {\r\n    childRef.current.getData(value);\r\n  };\r\n  return (\r\n    <Page title={props.route.title}>\r\n    \r\n        <ListTableBar search_h={search_h} />\r\n        <Divider dashed />\r\n        <ListTable ref={childRef} />\r\n    </Page>\r\n  );\r\n}\r\nexport default Index;\r\n","import http from \"utils/http\";\r\nimport axios from \"../utils/axios\";\r\nexport const mock = async (params) => {\r\n  let data = await http.get(`/mock`, { params });\r\n\r\n  return data?.data;\r\n};\r\n//新增账号\r\nexport const accrount_create = async (params) => {\r\n  return await http.post(`/admin/user-web/create`, params);\r\n};\r\n\r\n//获取账号列表\r\nexport const account_get = async (params) => {\r\n  return http.get(`/admin/user-web/gets`, params);\r\n};\r\n//修改密码\r\nexport const password_update = async (params) => {\r\n  return await http.put(`/admin/user-web/update-password`, params);\r\n};\r\n//封停/解封\r\nexport const upload_block = async (params) => {\r\n  return http.put(`/admin/user-web/update-block`, params);\r\n};\r\n\r\n//修改角色\r\nexport const update_role = async (params) => {\r\n  return http.put(`/admin/user-web/update-role`, params);\r\n};\r\n\r\n//获取用户名称\r\nexport const get_by_user_nam = async (params) => {\r\n  return http.get(`/admin/component/gets-by-user-name`, params);\r\n};\r\n\r\nexport const getAccountLog = async (uid, params) => {\r\n  let data = await axios.get(`/users/${uid}/accountLog`, {params});\r\n  return data?.data\r\n};\r\n","import axios from \"utils/http\";\r\n\r\n//获取账号日志列表\r\nexport const account_log_get = async (params) => {\r\n  let data = await axios.get(`/admin/component/gets-by-api-log`, {\r\n    ...params,\r\n    status: 1,\r\n  });\r\n\r\n  return data;\r\n};\r\n//获取角色日志列表\r\nexport const role_log_get = async (params) => {\r\n  let data = await axios.get(`/admin/component/gets-by-api-log`, {\r\n    ...params,\r\n    status: 2,\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\n//获取游戏日志列表\r\nexport const game_log_get = async (params) => {\r\n  let data = await axios.get(`/admin/component/gets-by-api-log`, {\r\n    ...params,\r\n    status: 3,\r\n  });\r\n\r\n  return data;\r\n};\r\n"],"sourceRoot":""}