{"version":3,"sources":["pages/RobotCDConfig/components/ListTable.js","pages/RobotCDConfig/components/CreateCD.js","pages/RobotCDConfig/components/UpdateCD.js","pages/RobotCDConfig/index.js","api/room.js"],"names":["ListTable","props","ref","useImperativeHandle","getData","newVal","personal_adjust_cd_config_get_handle","modifypassword_h","modifyaccountRole_h","block_h","pageSize","total","update_h","showTotal","useState","loading","setLoading","data","setData","current","showSizeChanger","pagination","setPagination","trans_type_text","type","text","columns","title","dataIndex","key","render","_","record","onClick","a","params","personal_adjust_cd_config_get","page","page_size","count","console","error","useEffect","bordered","dataSource","rowKey","onChange","forwardRef","Option","TextArea","Index","onCancel","visible","onOk","useForm","form","submit","validateFields","then","personal_adjust_cd_config_create","getFieldsValue","resetFields","message","success","e","labelCol","span","wrapperCol","name","hideRequiredMark","Item","label","rules","required","placeholder","value","rows","memo","info","personal_adjust_cd_config_update","setFieldsValue","afterClose","childRef","useRef","create_visible","set_create_visible","update_visible","set_update_visible","set_info","Page","route","dashed","handleUpdate","CreateCD","UpdateCD","room_get","axios","get","room_add","jpost","room_update","put","room_del","delete","room_get_by_name","robot_info_get","discard_config_create","discard_config_get","discard_config_update","dropcard_config_create","dropcard_config_get","dropcard_config_update","room_config_get","room_config_set","room_config_add","room_config_update","room_pool_rules_config_create","room_pool_rules_config_update","room_pool_rules_config_get","room_pool_rules_config_set_status","room_money_pool_create","room_money_pool_get","room_money_pool_update","personal_adjust_cond_config_create","personal_adjust_cond_config_update","personal_adjust_cond_config_get","personal_adjust_cond_config_delete","personal_adjust_cond_config_get_all","personal_adjust_rules_config_create","personal_adjust_rules_config_update","personal_adjust_rules_config_set_status","personal_adjust_rules_config_get"],"mappings":"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","file":"static/js/30.a31afd64.chunk.js","sourcesContent":["import { Table, Button, Space } from \"antd\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\nimport dayjs from \"dayjs\";\r\nimport { personal_adjust_cd_config_get } from \"../../../api/room\";\r\n// import mock from ''\r\nconst ListTable = (props, ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    // changeVal 就是暴露给父组件的方法\r\n    getData: (newVal) => {\r\n      personal_adjust_cd_config_get_handle(newVal);\r\n    },\r\n  }));\r\n  const {\r\n    modifypassword_h,\r\n    modifyaccountRole_h,\r\n    block_h,\r\n    pageSize = 10,\r\n    total = 0,\r\n    showTotal = true,\r\n    update_h,\r\n  } = props;\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [pagination, setPagination] = useState({\r\n    current: 1,\r\n    pageSize: pageSize || 10,\r\n    total: total || 0,\r\n    showSizeChanger: true,\r\n  });\r\n  //类型转换\r\n  const trans_type_text = (type) => {\r\n    let text;\r\n    switch (type) {\r\n      case 1:\r\n        text = \"1-上次触发并成功后的战斗次数\";\r\n        break;\r\n      case 2:\r\n        text = \"2-上次触发并强制中断后的战斗次数\";\r\n        break;\r\n    }\r\n    return text;\r\n  };\r\n  const columns = [\r\n    {\r\n      title: \"类型\",\r\n      dataIndex: \"type\",\r\n      key: \"type\",\r\n      render: (_, record) => <span>{trans_type_text(record.type)}</span>,\r\n    },\r\n    { title: \"最小值\", dataIndex: \"value_min\" },\r\n    { title: \"最大值\", dataIndex: \"value_max\" },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"desc\",\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      dataIndex: \"action\",\r\n      render: (_, record) => (\r\n        <Space>\r\n          <a onClick={() => update_h(record)}>编辑</a>\r\n        </Space>\r\n      ),\r\n    },\r\n  ];\r\n  //获取列表\r\n  const personal_adjust_cd_config_get_handle = async (params = {}) => {\r\n    try {\r\n      setLoading(true);\r\n      let data = await personal_adjust_cd_config_get({\r\n        page: pagination.current,\r\n        page_size: pagination.pageSize,\r\n        ...params,\r\n      });\r\n      // console.log(data)\r\n      setData(data.data);\r\n        setPagination({\r\n        ...pagination,\r\n        total: data.page.count,\r\n      });\r\n      // console.log(pagination);\r\n      setLoading(false);\r\n    } catch (e) {\r\n      setLoading(false);\r\n      console.error(e);\r\n    }\r\n  };\r\n  //表格改变触发\r\n  const onchange = (pagination) => {\r\n    // console.log(pagination)\r\n    setPagination({ ...pagination });\r\n  };\r\n  useEffect(() => {\r\n    personal_adjust_cd_config_get_handle();\r\n  }, [pagination.current, pagination.pageSize]);\r\n  return (\r\n    <>\r\n      <Table\r\n        bordered\r\n        loading={loading}\r\n        columns={columns}\r\n        dataSource={data}\r\n        rowKey=\"id\"\r\n        pagination={pagination}\r\n        onChange={onchange}\r\n      ></Table>\r\n    </>\r\n  );\r\n};\r\nexport default forwardRef(ListTable);\r\n","import React, { memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  message,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { Tree } from \"antd\";\r\nimport { personal_adjust_cd_config_create } from \"../../../api/room\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst Index = (props) => {\r\n  const { onCancel, visible, onOk } = props;\r\n  const [form] = Form.useForm();\r\n  //提交\r\n  const submit = async () => {\r\n    // console.log(form.getFieldsValue());\r\n    try {\r\n      form.validateFields().then(async () => {\r\n        await personal_adjust_cd_config_create({\r\n          ...form.getFieldsValue(),\r\n        });\r\n        form.resetFields();\r\n        message.success(\"创建成功\");\r\n        onOk();\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n\r\n  const on_cancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n  return (\r\n    <Modal\r\n      title=\"添加配置\"\r\n      visible={visible}\r\n      onCancel={on_cancel}\r\n      onOk={submit}\r\n    >\r\n      <Form\r\n        {...FormConfig}\r\n        form={form}\r\n        name=\"form_in_modal\"\r\n        hideRequiredMark={true}\r\n      >\r\n        <Form.Item\r\n          label=\"类型\"\r\n          name=\"type\"\r\n          rules={[{ required: true, message: \"请选择类型\" }]}\r\n        >\r\n          <Select placeholder=\"请选择类型\">\r\n            <Option value={1}>1-上次触发并成功后的战斗次数</Option>\r\n            <Option value={2}>2-上次触发并强制中断后的战斗次数</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"最大值\"\r\n          name=\"value_max\"\r\n          rules={[{ required: true, message: \"请输入最大值\" }]}\r\n        >\r\n          <InputNumber  placeholder=\"请输入最大值\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"最小值\"\r\n          name=\"value_min\"\r\n          rules={[{ required: true, message: \"请输入最小值\" }]}\r\n        >\r\n          <InputNumber  placeholder=\"请输入最小值\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"描述\"\r\n          name=\"desc\"\r\n          rules={[{ required: true, message: \"请输入描述\" }]}\r\n        >\r\n          <TextArea rows={4} placeholder=\"请输入描述\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(Index);\r\n","import React, { memo, useState, useEffect } from \"react\";\r\nimport {\r\n  Modal,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Button,\r\n  Space,\r\n  Row,\r\n  Col,\r\n  message,\r\n  InputNumber,\r\n} from \"antd\";\r\nimport { Tree } from \"antd\";\r\nimport { personal_adjust_cd_config_update } from \"../../../api/room\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst Index = (props) => {\r\n  const { onCancel, visible, onOk, info } = props;\r\n  const [form] = Form.useForm();\r\n  //提交\r\n  const submit = async () => {\r\n    // console.log(form.getFieldsValue());\r\n    try {\r\n      form.validateFields().then(async () => {\r\n        await personal_adjust_cd_config_update({\r\n          ...form.getFieldsValue(),\r\n        });\r\n        form.resetFields();\r\n        message.success(\"修改成功\");\r\n        onOk();\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n  const FormConfig = {\r\n    labelCol: { span: 6 },\r\n    wrapperCol: { span: 18 },\r\n  };\r\n\r\n  const on_cancel = () => {\r\n    form.resetFields();\r\n    onCancel();\r\n  };\r\n  const reset_h = () => {\r\n    form.resetFields();\r\n  };\r\n  useEffect(() => {\r\n    if (visible) {\r\n      form.setFieldsValue({\r\n        ...info,\r\n      });\r\n    }\r\n  }, [visible]);\r\n  return (\r\n    <Modal\r\n      title=\"修改配置\"\r\n      visible={visible}\r\n      onCancel={on_cancel}\r\n      onOk={submit}\r\n      afterClose={() => reset_h()}\r\n    >\r\n      <Form\r\n        {...FormConfig}\r\n        form={form}\r\n        name=\"form_in_modal\"\r\n        hideRequiredMark={true}\r\n      >\r\n        <Form.Item\r\n          label=\"类型\"\r\n          name=\"type\"\r\n          rules={[{ required: true, message: \"请选择类型\" }]}\r\n        >\r\n          <Select placeholder=\"请选择类型\">\r\n            <Option value={1}>1-上次触发并成功后的战斗次数</Option>\r\n            <Option value={2}>2-上次触发并强制中断后的战斗次数</Option>\r\n          </Select>\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"最大值\"\r\n          name=\"value_max\"\r\n          rules={[{ required: true, message: \"请输入最大值\" }]}\r\n        >\r\n          <InputNumber placeholder=\"请输入最大值\" />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"最小值\"\r\n          name=\"value_min\"\r\n          rules={[{ required: true, message: \"请输入最小值\" }]}\r\n        >\r\n          <InputNumber placeholder=\"请输入最小值\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"描述\"\r\n          name=\"desc\"\r\n          rules={[{ required: true, message: \"请输入描述\" }]}\r\n        >\r\n          <TextArea rows={4} placeholder=\"请输入描述\" />\r\n        </Form.Item>\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\nexport default memo(Index);\r\n","/*\r\n * @Description: 列表\r\n * @Author: luck-cmyk\r\n */\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { Table, Button, Popconfirm, Space, message, Divider } from \"antd\";\r\nimport Page from \"../../components/Page\";\r\nimport ListTable from \"./components/ListTable\";\r\nimport CreateCD from \"./components/CreateCD\";\r\nimport UpdateCD from \"./components/UpdateCD\";\r\n\r\nfunction Index(props) {\r\n  const childRef = useRef();\r\n  const handleAdd = () => {\r\n    set_create_visible(true);\r\n  };\r\n  const [create_visible, set_create_visible] = useState(false);\r\n  const [update_visible, set_update_visible] = useState(false);\r\n  const [info, set_info] = useState({});\r\n  useEffect(() => {}, []);\r\n  //添加成功\r\n  const create_ok = () => {\r\n    set_create_visible(false);\r\n    childRef.current.getData();\r\n  };\r\n  //取消创建\r\n  const create_cancel = () => {\r\n    set_create_visible(false);\r\n  };\r\n  //修改\r\n  const handleUpdate = (record) => {\r\n    set_info(record);\r\n    set_update_visible(true);\r\n  };\r\n  //修改成功\r\n  const update_ok = () => {\r\n    set_update_visible(false);\r\n    childRef.current.getData();\r\n  };\r\n  //修改取消\r\n  const update_cancel = () => {\r\n    set_update_visible(false);\r\n  };\r\n  return (\r\n    <Page title={props.route.title}>\r\n      {/* <Space direction=\"vertical\"> */}\r\n      <Space>\r\n        <Button type=\"primary\" onClick={handleAdd}>\r\n          添加配置\r\n        </Button>\r\n      </Space>\r\n      <Divider dashed />\r\n      <ListTable ref={childRef} update_h={(record) => handleUpdate(record)} />\r\n      <CreateCD\r\n        visible={create_visible}\r\n        onOk={() => create_ok()}\r\n        onCancel={() => create_cancel()}\r\n      />\r\n      <UpdateCD\r\n        info={info}\r\n        visible={update_visible}\r\n        onOk={() => update_ok()}\r\n        onCancel={() => update_cancel()}\r\n      />\r\n    </Page>\r\n  );\r\n}\r\nexport default Index;\r\n","import axios from \"utils/http\";\r\n\r\n//获取房间列表\r\nexport const room_get = (params) => {\r\n  return axios.get(`/room-list`, params);\r\n};\r\n\r\n//新增房间列表\r\nexport const room_add = (params) => {\r\n  return axios.jpost(`/room-list`, params);\r\n};\r\n\r\n//修改房间列表\r\nexport const room_update = (params) => {\r\n  return axios.put(`/room-list`, params);\r\n};\r\n\r\n//删除房间列表\r\nexport const room_del = (params) => {\r\n  return axios.delete(`/room-list/${params}`);\r\n};\r\n\r\n//返回房间名\r\nexport const room_get_by_name = (params) => {\r\n  return axios.get(`/room-list-by-name`, params);\r\n};\r\n//机器人\r\n//获取机器人详情\r\nexport const robot_info_get = (params) => {\r\n  return axios.get(`/wingman`, params);\r\n};\r\n\r\n//机器人特殊出牌设置新增\r\nexport const discard_config_create = (params) => {\r\n  return axios.jpost(\"/wingman-discard-config\", params);\r\n};\r\n//机器人特殊出牌设置获取\r\nexport const discard_config_get = (params) => {\r\n  return axios.get(\"/wingman-discard-config\", params);\r\n};\r\n//机器人特殊出牌设置修改\r\nexport const discard_config_update = (params) => {\r\n  return axios.put(\"/wingman-discard-config\", params);\r\n};\r\n\r\n//机器人弃牌设置新增\r\nexport const dropcard_config_create = (params) => {\r\n  return axios.jpost(\"/wingman-drop-config\", params);\r\n};\r\n//机器人弃牌设置获取\r\nexport const dropcard_config_get = (params) => {\r\n  return axios.get(\"/wingman-drop-config\", params);\r\n};\r\n//机器人弃牌设置修改\r\nexport const dropcard_config_update = (params) => {\r\n  return axios.put(\"/wingman-drop-config\", params);\r\n};\r\n\r\n//机器人房间设置获取\r\nexport const room_config_get = (params) => {\r\n  return axios.get(\"/wingman-room-config\", params);\r\n};\r\n\r\n//机器人房间设置修改状态\r\nexport const room_config_set = (params) => {\r\n  return axios.put(\"/wingman-room-config/set-status\", params);\r\n};\r\n//机器人房间设置新增\r\nexport const room_config_add = (params) => {\r\n  return axios.jpost(\"/wingman-room-config\", params);\r\n};\r\n//机器人房间设置修改\r\nexport const room_config_update = (params) => {\r\n  return axios.put(\"/wingman-room-config\", params);\r\n};\r\n//房间池规则新增\r\nexport const room_pool_rules_config_create = (params) => {\r\n  return axios.jpost(\"/room-money-pool-rules-config\", params);\r\n};\r\n//房间池规则修改\r\nexport const room_pool_rules_config_update = (params) => {\r\n  return axios.put(\"/room-money-pool-rules-config\", params);\r\n};\r\n//房间池规则获取\r\nexport const room_pool_rules_config_get = (params) => {\r\n  return axios.get(\"/room-money-pool-rules-config\", params);\r\n};\r\n//房间池规则设置状态\r\nexport const room_pool_rules_config_set_status = (params) => {\r\n  return axios.put(\"/room-money-pool-rules-config/set-status\", params);\r\n};\r\n//房间池配置新增\r\nexport const room_list_create = (params) => {\r\n  return axios.jpost(\"/room-list\", params);\r\n};\r\n//房间池基本配置新增\r\nexport const room_money_pool_create = (params) => {\r\n  return axios.jpost(\"/room-money-pool-config\", params);\r\n};\r\n//房间池基本配置获取\r\nexport const room_money_pool_get = (params) => {\r\n  return axios.get(\"/room-money-pool-config\", params);\r\n};\r\n//房间池基本配置修改\r\nexport const room_money_pool_update = (params) => {\r\n  return axios.put(\"/room-money-pool-config\", params);\r\n};\r\n//个人池条件配置新增\r\nexport const personal_adjust_cond_config_create = (params) => {\r\n  return axios.jpost(\"/personal-adjust-cond-config\", params);\r\n};\r\n//个人池条件配置修改\r\nexport const personal_adjust_cond_config_update = (params) => {\r\n  return axios.put(\"/personal-adjust-cond-config\", params);\r\n};\r\n//个人池条件配置获取\r\nexport const personal_adjust_cond_config_get = (params) => {\r\n  return axios.get(\"/personal-adjust-cond-config\", params);\r\n};\r\n//个人池条件配置删除\r\nexport const personal_adjust_cond_config_delete = (params) => {\r\n  return axios.delete(`/personal-adjust-cond-config/${params}` );\r\n};\r\n//个人池条件配置全部获取\r\nexport const personal_adjust_cond_config_get_all = (params) => {\r\n  return axios.get(\"/personal-adjust-cond-config/list\", params);\r\n};\r\n//个人池冷却配置新增\r\nexport const personal_adjust_cd_config_create = (params) => {\r\n  return axios.jpost(\"/personal-adjust-cd-config\", params);\r\n};\r\n//个人池冷却配置修改\r\nexport const personal_adjust_cd_config_update = (params) => {\r\n  return axios.put(\"/personal-adjust-cd-config\", params);\r\n};\r\n//个人池冷却配置获取\r\nexport const personal_adjust_cd_config_get = (params) => {\r\n  return axios.get(\"/personal-adjust-cd-config\", params);\r\n};\r\n\r\n//个人池规则配置新增\r\nexport const personal_adjust_rules_config_create = (params) => {\r\n  return axios.jpost(\"/personal-adjust-rules-config\", params);\r\n};\r\n//个人池规则配置修改\r\nexport const personal_adjust_rules_config_update = (params) => {\r\n  return axios.put(\"/personal-adjust-rules-config\", params);\r\n};\r\n//个人池规则配置修改状态\r\nexport const personal_adjust_rules_config_set_status = (params) => {\r\n  return axios.put(\"/personal-adjust-rules-config/set-status\", params);\r\n};\r\n\r\n//个人池规则配置获取\r\nexport const personal_adjust_rules_config_get = (params) => {\r\n  return axios.get(\"/personal-adjust-rules-config\", params);\r\n};\r\n"],"sourceRoot":""}