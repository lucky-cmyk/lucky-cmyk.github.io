{"version":3,"sources":["components/Page/Page.js","api/login.js","api/user.js","store/actions/appid.js","store/actions/session.js","store/actions/reactAppBaseUrl.js","store/actions/reactAppCdneUrl.js","store/actions/reactAppS3Enable.js","store/actions/routes.js","components/Initialization/index.js","App.js","serviceWorker.js","index.js","store/reducers/session.js","store/reducers/appid.js","store/reducers/reactAppBaseUrl.js","store/reducers/reactAppCdnUrl.js","store/reducers/reactAppS3Enable.js","store/reducers/routes.js","store/reducers/index.js","store/index.js","utils/axios.js","utils/http.js","api/sys.js","utils/index.js","components/Navigation/Navigation.js","assets/image/logo.svg","layouts/Dashboard/index.js","pages/Login/index.js","pages/Home/index.js","routes.js"],"names":["Page","props","title","children","rest","bordered","Helmet","loginIn","params","a","axios","jpost","data","loginOut","getUserInfo","get","uid","bpUser","patch","getDevUsers","devid","userlist","ls","getIpUsers","ip","getGameCircleRecord","rid","getInviteUsersById","INIT_APPID","LOGIN","LOGOUT","login","userInfo","dispatch","type","logout","INIT_BASE_URL","initBaseUrl","baseUrl","INIT_CDN_URL","initCdnUrl","cndUrl","INIT_S3_ENABLE","iniS3Enable","s3Enable","SET_ROUTES","set_routes","routePerms","get_menu_key","superKey","new_routes","create_route_key","routes","key","perms","concat","InitIndex","useDispatch","useEffect","session","localStorage","getItem","JSON","parse","load","then","res","REACT_APP_BASE_URL","REACT_APP_CDN_URL","REACT_APP_S3_SERVER_ENABLE","useSelector","state","Initialization","renderRoutes","Boolean","window","location","hostname","match","ReactDOM","render","store","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","initalState","loggedIn","sessionReducer","action","actionTypes","appidsReducer","baseUrlReducer","setItem","cdnUrlReducer","s3EnableReducer","routesReducer","rootReducer","combineReducers","appids","cdnUrl","createStore","composeWithDevTools","applyMiddleware","thunk","instance","undefined","create","baseURL","process","headers","interceptors","request","use","config","getState","token","Promise","reject","response","resp","code","removeItem","reload","service","timeout","downservice","status","updateUrl","err","http","img","url","resolve","method","jqpost","formput","getdownload","fileName","responseType","blob","Blob","createElement","elink","target","download","href","URL","createObjectURL","click","revokeObjectURL","msSaveBlob","post","qs","stringify","delete","deleteBody","put","imgPost","getMenu","AllMenu","id","icon","link","getAppid","username","appid","appName","getUsers","userListLineData","paramsSerializer","p","arrayFormat","getAuthentication","getOnline","getWithdraw","reviewWithdraw","reason","returnWithdraw","getConfig","addAutoReviewConfig","updateAutoReviewConfig","delAutoReviewConfig","addSecurityList","DelSecurityList","kickOutSecurityUser","getBlockListType","addBlockList","trans_tree","options","arr","map","item","push","trans_tree_get_key","check","checkState","length","trans_tree_get_all_key","get_id_user","source","repacle_id_user_name","trans_key","objKey","value","Object","entries","trans_menu_key","trans_title","trans_children","router","trans_route","new_menu","option","conf","opt","includes","obj","Navigation","useState","menus","setMenu","mounted","menu","fetchData","mode","SubMenu","child","Item","to","memo","Index","route","history","useHistory","className","justify","align","span","src","logo","alt","style","textAlign","overlay","onClick","color","e","preventDefault","DownOutlined","padding","fallback","layout","labelCol","wrapperCol","useForm","form","onLogin","values","diff","Date","getTime","dayjs","unix","expire","time","getFieldValue","log","headStyle","display","name","onFinish","rules","required","placeholder","Password","htmlType","block","path","exact","component","Login","Dashboard","Home","expect","lazy"],"mappings":"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","file":"static/js/main.1f261ab5.chunk.js","sourcesContent":["/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Card } from 'antd';\r\n\r\nconst Page = props => {\r\n  const { title, children, ...rest } = props;\r\n\r\n  return (\r\n    <Card {...rest} title={title} bordered={false} >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import axios from \"../utils/http\";\r\n\r\n//登录\r\nexport const loginIn = async (params) => {\r\n  let data = await axios.jpost(`/admin/login`, params);\r\n  return data;\r\n};\r\n//登出\r\nexport const loginOut = async (params) => {\r\n  let data = await axios.jpost(`/admin/log-out`, params);\r\n  return data;\r\n};\r\n\r\n","import axios from 'utils/axios'\r\n\r\nexport const getUserInfo = async (params) => {\r\n  let data = await axios.get(`/users/${params.uid}`,{params});\r\n\r\n  return data?.data\r\n};\r\n\r\nexport const bpUser = async (uid, params) => {\r\n  let data = await axios.patch(`/users/${uid}/ustatus`, params);\r\n  return data?.data\r\n};\r\n\r\nexport const createToken = async (loginInfo) => {\r\n  let data = await axios.post('/token', loginInfo);\r\n  return data\r\n};\r\n\r\nexport const getUserManage = async (params) => {\r\n  let data = await axios.get('/user/manage', {params});\r\n  return data\r\n};\r\n\r\nexport const getDevUsers = async (devid) => {\r\n  let data = await axios.get(`/user/devid/${devid}`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n  return {userlist: [], ls: []}\r\n};\r\n\r\nexport const getIpUsers = async (ip) => {\r\n  let data = await axios.get(`/user/ip/${ip}`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n  return {userlist: [], ls: []}\r\n};\r\n\r\nexport const editNickname = async (uid, params) => {\r\n  let data = await axios.patch(`/users/uname`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n};\r\n\r\nexport const getGameCircleRecord = async rid => {\r\n  let data = await axios.get(`/gameCircleRecord/${rid}`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n};\r\n\r\nexport const getInviteUsersById = async (uid) => {\r\n  let data = await axios.get(`/user/getInviteById/${uid}`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n  return [];\r\n};\r\n","export const INIT_APPID = 'INIT_APPID';\r\n\r\nexport const initAppid = appidList => dispatch =>\r\n  dispatch({\r\n    type: INIT_APPID,\r\n    data: appidList\r\n  });\r\n\r\n","import { loginOut } from \"../../api/login\";\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const login = (userInfo) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN,\r\n    data: userInfo,\r\n  });\r\n};\r\n\r\nexport const logout = (data) => async (dispatch) => {\r\n  await loginOut();\r\n  dispatch({\r\n    type: LOGOUT,\r\n    data: data,\r\n  });\r\n};\r\n","export const INIT_BASE_URL = 'BASE_URL';\r\n\r\nexport const initBaseUrl = baseUrl => dispatch =>\r\n  dispatch({\r\n    type: INIT_BASE_URL,\r\n    data: baseUrl\r\n  });\r\n\r\n","export const INIT_CDN_URL = 'CDN_URL';\r\n\r\nexport const initCdnUrl = cndUrl => dispatch =>\r\n  dispatch({\r\n    type: INIT_CDN_URL,\r\n    data: cndUrl\r\n  });\r\n\r\n","export const INIT_S3_ENABLE = 'S3_ENABLE';\r\n\r\nexport const iniS3Enable = s3Enable => dispatch =>\r\n  dispatch({\r\n    type: INIT_S3_ENABLE,\r\n    data: s3Enable\r\n  });\r\n\r\n","import routes from \"../../routes\";\r\nimport { create_route_key, get_menu_key, trans_menu_key } from \"../../utils\";\r\nexport const SET_ROUTES = \"SET_ROUTES\";\r\n\r\nexport const set_routes = (data) => (dispatch) => {\r\n  //提供路由使用的所有权限\r\n  const routePerms = get_menu_key(data, {\r\n    // key: \"name\",\r\n    superKey: \"link\",\r\n    children: \"children\",\r\n  });\r\n  //路由白名单，本地存在路由地址,不与权限挂钩\r\n  const whiteList = [\"*\", \"/login\", \"/\"];\r\n  const new_routes = create_route_key(routes, {\r\n    key: \"title\",\r\n    superKey: \"path\",\r\n    children: \"routes\",\r\n    perms: routePerms.concat(whiteList),\r\n  });\r\n  // store.dispatch(set_routes(new_routes));\r\n\r\n  // console.log(new_routes)\r\n  dispatch({\r\n    type: SET_ROUTES,\r\n    data: new_routes,\r\n  });\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport { getAppid } from \"api/sys\";\r\nimport {\r\n  initAppid,\r\n  login,\r\n  initBaseUrl,\r\n  initCdnUrl,\r\n  iniS3Enable,\r\n} from \"../../store/actions\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * @return {null}\r\n */\r\nfunction InitIndex() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const load = () => {\r\n      let session = localStorage.getItem(\"session\");\r\n      // console.log(session)\r\n\r\n      if (session !== null) {\r\n        session = JSON.parse(session);\r\n        if (\"token\" in session) {\r\n          // if (dayjs().unix() + session.diff < session.time + session.expire) {\r\n          // console.log(session);\r\n          dispatch(login({ ...session }));\r\n          return;\r\n          // }\r\n        }\r\n      }\r\n      // dispatch(login({}))\r\n    };\r\n    load();\r\n\r\n    // const fetchData = async () => {\r\n    //   const appidList = await getAppid();\r\n    //   dispatch(initAppid(appidList));\r\n    // };\r\n    // fetchData()\r\n\r\n    //初始化加载全局一些配置\r\n    axios.get(\"/config.json\").then((res) => {\r\n      // console.log(res)\r\n      dispatch(initBaseUrl(res.data.REACT_APP_BASE_URL));\r\n      dispatch(initCdnUrl(res.data.REACT_APP_CDN_URL));\r\n      dispatch(iniS3Enable(res.data.REACT_APP_S3_SERVER_ENABLE));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return null;\r\n}\r\nexport default InitIndex;\r\n","import React, { useEffect } from \"react\";\r\nimport { Provider, useSelector } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Initialization from \"components/Initialization\";\r\n\r\nimport store from \"store\";\r\nimport routes from \"./routes\";\r\nimport \"./assets/css/app.css\";\r\n\r\n// if (process.env.NODE_ENV === 'development') {\r\n//   require('./mock');\r\n// }\r\nexport default () => {\r\n  const routes = useSelector((state) => state.routes);\r\n  return (\r\n    <>\r\n      <Initialization />\r\n      <BrowserRouter>{renderRoutes(routes)}</BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import * as actionTypes from \"store/actions\";\r\n\r\nconst initalState = {\r\n  loggedIn: false,\r\n};\r\n\r\nconst sessionReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN:\r\n      return { ...action.data, loggedIn: true };\r\n    case actionTypes.LOGOUT:\r\n      return { loggedIn: true };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sessionReducer;\r\n","import * as actionTypes from 'store/actions';\r\n\r\nconst initalState = [];\r\n\r\nconst appidsReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_APPID:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appidsReducer;\r\n","import * as actionTypes from \"store/actions\";\r\n\r\nconst initalState = localStorage.getItem(\"INIT_BASE_URL\") || \"\";\r\nconst baseUrlReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_BASE_URL:\r\n      localStorage.setItem(\"INIT_BASE_URL\", action.data);\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default baseUrlReducer;\r\n","import * as actionTypes from 'store/actions';\r\n\r\nconst initalState = \"\";\r\n\r\nconst cdnUrlReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_CDN_URL:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cdnUrlReducer;\r\n","import * as actionTypes from 'store/actions';\r\n\r\nconst initalState = false; //false:服务器上传，true s3上传\r\n\r\nconst s3EnableReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_S3_ENABLE:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default s3EnableReducer;\r\n","import * as actionTypes from \"store/actions\";\r\nimport routes from \"../../routes\";\r\n\r\nconst routesReducer = (state = routes, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_ROUTES:\r\n      return action.data;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default routesReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport sessionReducer from \"./session\";\r\nimport appidsReducer from \"./appid\";\r\nimport baseUrlReducer from \"./reactAppBaseUrl\";\r\nimport cdnUrlReducer from \"./reactAppCdnUrl\";\r\nimport s3EnableReducer from \"./reactAppS3Enable\";\r\nimport routesReducer from \"./routes\";\r\nconst rootReducer = combineReducers({\r\n  session: sessionReducer,\r\n  appids: appidsReducer,\r\n  baseUrl: baseUrlReducer,\r\n  cdnUrl: cdnUrlReducer,\r\n  s3Enable: s3EnableReducer,\r\n  routes: routesReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","import { message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport store from \"store\";\r\n\r\nlet instance = undefined;\r\n// console.log(baseURL)\r\ninstance = axios.create({\r\n  baseURL: process.env.REACT_APP_REQUEST_URL,\r\n  headers: {\r\n    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    // 'X-TUNNEL-VERIFY': \"Test\"\r\n  },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    // const updateUrl = store.getState().baseUrl;\r\n    // if (updateUrl) {\r\n    //   config.baseURL = updateUrl;\r\n    // }\r\n\r\n    const session = store.getState().session;\r\n    if (\"token\" in session) {\r\n      config.headers[\"x-token\"] = session.token;\r\n    }\r\n    // console.log(session, config);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // console.log(error, \"123test\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (resp) => {\r\n    const data = resp;\r\n    if (data.code === 10000) {\r\n      localStorage.removeItem(\"session\");\r\n      window.location.reload();\r\n    }\r\n    return data;\r\n  },\r\n  (error) => {\r\n    message.error(error.response.data);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import { message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport store from \"store\";\r\nimport qs from \"qs\";\r\n// import \"\" from ''\r\n// create an axios instance\r\n\r\nlet baseURL = process.env.REACT_APP_REQUEST_URL;\r\nconst service = axios.create({\r\n  // baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url\r\n  // baseURL: \"/api\",\r\n  baseURL,\r\n  // withCredentials: true, // send cookies when cross-domain requests\r\n  // 如果请求话费了超过 `timeout` 的时间，请求将被中断\r\n  timeout: 10000000,\r\n  // withCredentials: true,\r\n  // `withCredentials` 表示跨域请求时是否需要使用凭证\r\n});\r\nconst downservice = axios.create({\r\n  baseURL,\r\n  timeout: 100000,\r\n  // withCredentials: true,\r\n});\r\ndownservice.interceptors.request.use(\r\n  (config) => {\r\n    // do something before request is sent\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\ndownservice.interceptors.response.use(\r\n  /**\r\n   * If you want to get http information such as headers or status\r\n   * Please return  response => response\r\n   */\r\n\r\n  /**\r\n   * Determine the request status by custom code\r\n   * Here is just an example\r\n   * You can also judge the status by HTTP Status Code\r\n   */\r\n  (response) => {\r\n    const res = response.data;\r\n    // if the custom code is not 20000, it is judged as an error.\r\n    if ((response.status = 200)) {\r\n      return response;\r\n    } else {\r\n      return Promise.reject(\"服务器端异常\");\r\n    }\r\n  },\r\n  (error) => {\r\n    const { config, response } = error;\r\n\r\n    return Promise.reject(\"服务器端异常\");\r\n  }\r\n);\r\n// request interceptor\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    const updateUrl = store.getState().baseUrl;\r\n    if (updateUrl) {\r\n      config.baseURL = updateUrl;\r\n    }\r\n    // do something before request is sent\r\n    const session = store.getState().session;\r\n    if (\"token\" in session) {\r\n      config.headers[\"x-token\"] = session.token;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // do something with request error\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// response interceptor\r\nservice.interceptors.response.use(\r\n  /**\r\n   * If you want to get http information such as headers or status\r\n   * Please return  response => response\r\n   */\r\n\r\n  /**\r\n   * Determine the request status by custom code\r\n   * Here is just an example\r\n   * You can also judge the status by HTTP Status Code\r\n   */\r\n  (response) => {\r\n    const data = response.data;\r\n\r\n    if (data.code === 1 || data.code == 75008) {\r\n      localStorage.removeItem(\"session\");\r\n\r\n      window.location.reload();\r\n    } else if (data.code != 0) {\r\n      message.error(data.err);\r\n      return Promise.reject(\"服务器异常\");\r\n    }\r\n    return data;\r\n  },\r\n  (error) => {\r\n    const { config, response } = error;\r\n    return Promise.reject(\"服务器端异常\");\r\n  }\r\n);\r\n\r\nconst http = {\r\n  img(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        data,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  jqpost(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        params: data,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  formput(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"put\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        params: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  getdownload(url, data, fileName) {\r\n    return new Promise((resolve, reject) => {\r\n      downservice({\r\n        url,\r\n        method: \"get\",\r\n        params: data,\r\n        responseType: \"blob\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          const blob = new Blob([res.data], {\r\n            type: \"application/zip;charset=utf-8\",\r\n          });\r\n          if (\"download\" in document.createElement(\"a\")) {\r\n            // 非IE下载\r\n            const elink = document.createElement(\"a\");\r\n            elink.target = \"hrefTemplate\"; // 指向上面的iframe框架（防止跳转至空白页）,可有可无\r\n            elink.download = fileName + \".zip\";\r\n            elink.href = URL.createObjectURL(blob);\r\n            elink.click();\r\n            URL.revokeObjectURL(elink.href); // 释放URL 对象\r\n          } else {\r\n            // IE10+下载\r\n            navigator.msSaveBlob(blob, fileName);\r\n          }\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  get(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"get\",\r\n        params: data,\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  post(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        data: qs.stringify(data),\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  delete(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        params: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  deleteBody(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  put(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"put\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  jpost(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        data: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  imgPost(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        data,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n};\r\n\r\nexport default http;\r\n","import axios from \"../utils/axios\";\r\nimport store from \"store\";\r\nimport { menu_get } from \"./menu\";\r\nimport qs from \"qs\";\r\nimport { set_routes } from \"../store/actions\";\r\nimport { trans_menu_key } from \"../utils\";\r\n// 语言，权限管理，通用方法\r\nexport const getMenu = async () => {\r\n  const session = store.getState().session;\r\n  //将返回数据转换成与菜单匹配的数据\r\n\r\n  const AllMenu = [\r\n    {\r\n      id: 1191,\r\n      title: \"账号管理\",\r\n      icon: \"UserOutlined\",\r\n      children: [\r\n        { id: 1234, title: \"账号列表\", link: \"/account/List\" },\r\n        { id: 1235, title: \"操作日志\", link: \"/account/operalog\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 1192,\r\n      title: \"角色管理\",\r\n      icon: \"UserOutlined\",\r\n      children: [\r\n        { id: 1236, title: \"角色列表\", link: \"/role/List\" },\r\n        { id: 1237, title: \"操作日志\", link: \"/role/operalog\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 1193,\r\n      title: \"游戏管理\",\r\n      icon: \"RedditOutlined\",\r\n      children: [\r\n        { id: 1238, title: \"游戏列表\", link: \"/game/List\" },\r\n        { id: 1239, title: \"操作日志\", link: \"/game/operalog\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 119,\r\n      title: \"用户管理\",\r\n      icon: \"UserOutlined\",\r\n      children: [\r\n        { id: 123, title: \"用户信息\", link: \"/user/userInfo\" },\r\n        { id: 12323, title: \"邀请数据排行\", link: \"/activity/inviteRank\" },\r\n        { id: 1238928324, title: \"用户登录列表\", link: \"/user/loginLogList\" },\r\n        { id: 124, title: \"用户列表\", link: \"/userList\" },\r\n        {\r\n          id: 41231293023721003,\r\n          title: \"异常用户名单\",\r\n          link: \"/security/flagLog\",\r\n        },\r\n        // {id: 1238928323, title: '用户数据排行', link: '/user/getUserRank'},\r\n        {\r\n          id: 41231293023721004,\r\n          title: \"可疑用户列表\",\r\n          link: \"/security/list\",\r\n        },\r\n      ],\r\n    },\r\n    //排行榜数据\r\n    // {\r\n    //   id: 199999,\r\n    //   title: \"用户排行榜\",\r\n    //   icon: \"OrderedListOutlined\",\r\n    //   children: [\r\n    //     { id: 1999991, title: \"支付排行榜\", link: \"/user/paymentRanking\" },\r\n    //     { id: 1999992, title: \"提现排行榜\", link: \"/user/withdrawRanking\" },\r\n    //     { id: 1999993, title: \"盈利排行榜\", link: \"/user/profitRanking\" },\r\n    //   ],\r\n    // },\r\n    //机器人管理\r\n    {\r\n      id: 2,\r\n      title: \"机器人管理\",\r\n      icon: \"RobotOutlined\",\r\n      children: [\r\n        { id: 21, title: \"场次规则管理\", link: \"/robot/playRule\" },\r\n        // { id: 22, title: \"机器人列表\", link: \"/robot/users\" },\r\n        // { id: 112423, title: \"玩家控牌记录\", link: \"/user/cardControl\" },\r\n        // { id: 112623, title: \"玩家控牌配置\", link: \"/cardControl\" },\r\n        {\r\n          id: 34223,\r\n          title: \"个人池条件配置\",\r\n          link: \"/robot/CondConfig\",\r\n        },\r\n        {\r\n          id: 2332,\r\n          title: \"个人池冷却配置\",\r\n          link: \"/robot/CDConfig\",\r\n        },\r\n        {\r\n          id: 2342,\r\n          title: \"个人池规则配置\",\r\n          link: \"/robot/RulesConfig\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 222,\r\n      title: \"关键数据配置\",\r\n      icon: \"EditOutlined\",\r\n      children: [\r\n        // { id: 1224, title: \"Notice公告配置\", link: \"/notice\" },\r\n        // { id: 12243888, title: \"Post推送配置\", link: \"/poster\" },\r\n        // { id: 1222000003, title: \"Email邮件配置\", link: \"/email\" },\r\n        // {\r\n        //   id: 31324983928341,\r\n        //   title: \"跑马灯配置\",\r\n        //   link: \"/notice/broadcast\",\r\n        // },\r\n        // { id: 1222000005, title: \"自动审核配置\", link: \"/autoReviewConfig\" },\r\n        // {\r\n        //   id: 1222000006,\r\n        //   title: \"自动审核白名单\",\r\n        //   link: \"/autoReviewWhiteList\",\r\n        // },\r\n        // {\r\n        //   id: 1222000007,\r\n        //   title: \"自动审核区域配置\",\r\n        //   link: \"/autoReviewDangerArea\",\r\n        // },\r\n        // { id: 1225, title: \"玩法场次管理\", link: \"/roomList\" },\r\n        { id: 12225, title: \"玩法场次配置\", link: \"/roomListConfig\" },\r\n        { id: 123847, title: \"地区管理\", link: \"/areaConfig\" },\r\n        // { id: 122647362, title: \"全局配置\", link: \"/globalConfig\" },\r\n      ],\r\n    },\r\n    //活动管理\r\n    // {\r\n    //   id: 3,\r\n    //   title: \"活动管理\",\r\n    //   icon: \"GiftOutlined\",\r\n    //   children: [\r\n    //     { id: 3123123121, title: \"赢牌奖励活动\", link: \"/activity/win\" },\r\n    //     { id: 313248888341, title: \"新手任务\", link: \"/activity/tasks\" },\r\n    //     { id: 313248888342, title: \"活跃度系统配置\", link: \"/active/sys\" },\r\n    //     { id: 1222000004, title: \"充值活动管理\", link: \"/activityRecharge\" },\r\n    //   ],\r\n    // },\r\n    //客服\r\n    // {\r\n    //   id: 1223410002,\r\n    //   title: \"客服功能\",\r\n    //   icon: \"RedditOutlined\",\r\n    //   children: [\r\n    //     // {id: 122300003, title: 'Operation management', link: '/operationManage'},\r\n    //     { id: 12210900001, title: \"KYC审核\", link: \"/authentication\" },\r\n    //     { id: 153300103, title: \"封号列表\", link: \"/user/manage\" },\r\n    //     { id: 1248, title: \"充值订单\", link: \"/payments\" },\r\n    //     { id: 1222000002, title: \"提现订单\", link: \"/withdraw\" },\r\n    //     {\r\n    //       id: 12220000023,\r\n    //       title: \"refund Processing\",\r\n    //       link: \"/refundProcessing\",\r\n    //     },\r\n    //   ],\r\n    // },\r\n    //数据统计\r\n    // {\r\n    //   id: 1239839,\r\n    //   title: \"数据后台\",\r\n    //   icon: \"LineChartOutlined\",\r\n    //   children: [\r\n    //     { id: 1231, title: \"在线在玩数据\", link: \"/online\" },\r\n    //     { id: 1241, title: \"关键数据\", link: \"/statistics/200\" },\r\n    //     { id: 123243, title: \"日报数据\", link: \"/statistics/209\" },\r\n    //     // {id: 12342, title: 'Payment details', link: '/statistics/201'},\r\n    //     // {id: 123143, title: 'Total prepaid', link: '/statistics/202'},\r\n    //     // {id: 124343,title: 'Active user',link: '/statistics/203'},\r\n    //     // {id: 124349203, title: 'Users Retention', link: '/statistics/204'},\r\n    //     // {id: 12434920234213, title: 'Transaction history', link: '/statistics/206'},\r\n    //     { id: 124349202342130, title: \"用户活跃\", link: \"/statistics/207\" },\r\n    //     { id: 1243492023421309, title: \"游戏局数\", link: \"/statistics/208\" },\r\n    //     { id: 123456098, title: \"机器人关键数据\", link: \"/statistics/244\" },\r\n    //     {\r\n    //       id: 12342983198,\r\n    //       title: \"Points 机器人局数分析\",\r\n    //       link: \"/statistics/211\",\r\n    //     },\r\n    //     {\r\n    //       id: 123456198,\r\n    //       title: \"Pool 机器人局数分析\",\r\n    //       link: \"/statistics/230\",\r\n    //     },\r\n    //     {\r\n    //       id: 123456129398,\r\n    //       title: \"10Card 机器人局数分析\",\r\n    //       link: \"/statistics/239\",\r\n    //     },\r\n    //     { id: 1209382934, title: \"用户留存统计\", link: \"/statistics/218\" },\r\n    //     { id: 1209382823114, title: \"用户付费\", link: \"/statistics/222\" },\r\n    //     // {id: 1209382934,title: '用户留存统计',link: '/activeData'},\r\n    //     {\r\n    //       id: 1209382823115,\r\n    //       title: \"关键指标\",\r\n    //       link: \"/crux/statistics/200\",\r\n    //     },\r\n    //   ],\r\n    // },\r\n    //系统配置\r\n    // {\r\n    //   id: 122,\r\n    //   title: \"游戏更新配置\",\r\n    //   icon: \"SoundOutlined\",\r\n    //   children: [\r\n    //     { id: 1221, title: \"热更新配置\", link: \"/hotUpgrade\" },\r\n    //     { id: 98732, title: \"更新配置\", link: \"/clientHotUpgrade\" },\r\n    //     { id: 12211, title: \"版本更新配置\", link: \"/verUpdate\" },\r\n    //     { id: 1222, title: \"游戏开关配置\", link: \"/switch\" },\r\n    //     { id: 1226387, title: \"维护公告展示\", link: \"/maintenanceNotice\" },\r\n    //     { id: 1227, title: \"审核白名单\", link: \"/reviewWhiteList\" },\r\n    //     { id: 1228, title: \"审核黑名单\", link: \"/reviewBlockList\" },\r\n    //   ],\r\n    // },\r\n    // {\r\n    //   id: 1001,\r\n    //   title: \"黑名单管理\",\r\n    //   icon: \"BlockOutlined\", //黑名单管理\r\n    //   children: [\r\n    //     { id: 10010, title: \"UserIdBlocklist\", link: \"/blockList\" },\r\n    //     { id: 10011, title: \"BlockOtherlist\", link: \"/blockOtherList\" },\r\n    //   ],\r\n    // },\r\n    // {\r\n    //   id: 1201,\r\n    //   title: \"Financial Module \",\r\n    //   icon: \"ExceptionOutlined\",\r\n    //   children: [\r\n    //     { id: 12011, title: \"Deposit Bill\", link: \"/depositBill\" },\r\n    //     { id: 12012, title: \"Withdraw Bill\", link: \"/withdrawBill\" },\r\n    //   ],\r\n    // },\r\n    //dt_statistics数据统计表\r\n    // {\r\n    //   id: 1301,\r\n    //   title: \"数据统计\",\r\n    //   icon: \"LineChartOutlined\",\r\n    //   children: [\r\n    //     { id: 13010, title: \"在线在玩数据\", link: \"/online\" },\r\n    //     { id: 13011, title: \"关键指标\", link: \"/crux/statistics/13011\" },\r\n    //     { id: 13012, title: \"新用户付费\", link: \"/crux/statistics/13012\" },\r\n    //     { id: 13013, title: \"用户活跃\", link: \"/crux/statistics/13013\" },\r\n    //     { id: 13014, title: \"用户留存\", link: \"/crux/statistics/13014\" },\r\n    //     { id: 13015, title: \"游戏局数\", link: \"/crux/statistics/13015\" },\r\n    //     {\r\n    //       id: 13016,\r\n    //       title: \"point机器人局数\",\r\n    //       link: \"/crux/statistics/13016\",\r\n    //     },\r\n    //     {\r\n    //       id: 13017,\r\n    //       title: \"pool机器人局数\",\r\n    //       link: \"/crux/statistics/13017\",\r\n    //     },\r\n    //     {\r\n    //       id: 13018,\r\n    //       title: \"10card机器人局数\",\r\n    //       link: \"/crux/statistics/13018\",\r\n    //     },\r\n    //     { id: 13019, title: \"用户付费\", link: \"/crux/statistics/13019\" },\r\n    //   ],\r\n    // },\r\n  ];\r\n\r\n  //--------------------------------------管理员账号-------------------------------------\r\n  if (true || session.username === \"laibaorummy\") {\r\n    return AllMenu;\r\n  }\r\n};\r\n//获取菜单\r\nexport const getMenu_h = async () => {\r\n  let data = await menu_get();\r\n  //将返回数据转换成与菜单匹配的数据\r\n  data = trans_menu_key(data, {\r\n    title: \"title\",\r\n    trans_title: \"name\",\r\n    children: \"children\",\r\n    trans_children: \"child\",\r\n    router: \"link\",\r\n    trans_route: \"router\",\r\n  });\r\n  store.dispatch(set_routes(data));\r\n  return data;\r\n};\r\n\r\nexport const getAppid = async () => {\r\n  const session = store.getState().session;\r\n  if (session.username === \"xiaomirummy\") {\r\n    return [\r\n      /*{\r\n      id: 2,\r\n      appid: 6002,\r\n      appName: 'xiaomi',\r\n    },*/\r\n    ];\r\n  }\r\n  return [\r\n    { id: 1, appid: 6000, appName: \"Ruby Rummy\" },\r\n    { id: 2, appid: 1000, appName: \"King Rummy\" },\r\n    { id: 3, appid: 1001, appName: \"Nuts Rummy\" },\r\n    { id: 4, appid: 999, appName: \"King Rummy_999\" },\r\n    { id: 5, appid: 998, appName: \"King Rummy_998\" },\r\n    { id: 6, appid: 997, appName: \"King Rummy_997\" },\r\n    { id: 7, appid: 1100, appName: \"Gentle Rummy\" },\r\n  ];\r\n\r\n  // let data = await axios.get('/sys/appid');\r\n  //\r\n  // return data\r\n};\r\n\r\nexport const getHotupgradeList = async (params) => {\r\n  let data = await axios.get(\"/sys/hotupgrade\", { params });\r\n  return data;\r\n};\r\n\r\nexport const delHotupgrade = async (params) => {\r\n  let data = await axios.delete(\"/sys/hotupgrade\", { params });\r\n  return data;\r\n};\r\n\r\nexport const addHotupgrade = async (appid, data) => {\r\n  data.ver = parseInt(data.ver);\r\n  let body = { appid, versioncode: data.versioncode };\r\n  delete data.id;\r\n  delete data.versioncode;\r\n\r\n  body.value = JSON.stringify(data);\r\n  console.log(\"addHotupgrade\", body);\r\n\r\n  try {\r\n    let resp = await axios.post(\"/sys/hotupgrade\", body);\r\n    console.log(resp);\r\n    return resp?.data.code === 0;\r\n  } catch (e) {\r\n    console.log(\"addHotupgrade\", e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const editHotupgrade = async (appid, data) => {\r\n  data.ver = parseInt(data.ver);\r\n  let body = { appid, versioncode: data.versioncode, id: parseInt(data.id) };\r\n  delete data.id;\r\n  delete data.versioncode;\r\n  body.value = JSON.stringify(data);\r\n  console.log(\"修改热更配置：\", body);\r\n  let resp = await axios.put(\"/sys/hotupgrade\", body);\r\n  return resp;\r\n};\r\n\r\nexport const getUsers = async (params) => {\r\n  let resp = await axios.get(\"/users\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const userListLineData = async (uid, params) => {\r\n  let resp = await axios.get(`/users/${uid}/lineData`, {\r\n    params: params,\r\n    paramsSerializer: function (p) {\r\n      //固定写法\r\n      return qs.stringify(p, { arrayFormat: \"repeat\" });\r\n    },\r\n  });\r\n  return resp?.data;\r\n};\r\n\r\nexport const getAuthentication = async (params) => {\r\n  let resp = await axios.get(\"/kycs\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getOnline = async (params) => {\r\n  let resp = await axios.get(\"/statistic/online\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getEmail = async (params) => {\r\n  let resp = await axios.get(\"/messages\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const addEmail = async (data) => {\r\n  let resp = await axios.post(\"/messages\", data);\r\n  return resp;\r\n};\r\n\r\nexport const getWithdraw = async (params) => {\r\n  let resp = await axios.get(\"/withdrawals\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const reviewWithdraw = async (id, status, reason) => {\r\n  return await axios.patch(`/withdrawals/${id}`, { status, reason });\r\n};\r\n\r\nexport const returnWithdraw = async (id) => {\r\n  return await axios.patch(`/withdrawalReturn/${id}`);\r\n};\r\n\r\nexport const getOprationRecord = async (data) => {\r\n  let resp = await axios.get(\"/oprationRecord\", data);\r\n  return resp;\r\n};\r\n\r\nexport const getAdministrator = async (data) => {\r\n  let resp = await axios.get(\"/administrator\", data);\r\n  return resp;\r\n};\r\n\r\nexport const getSwitch = async (params) => {\r\n  let resp = await axios.get(\"/switch\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const addSwitch = async (appid, data) => {\r\n  data.appid = appid;\r\n  data.t_uid = parseInt(data.t_uid);\r\n  data = JSON.stringify(data);\r\n  console.log(\"addSwitch\", data);\r\n  let resp = await axios.post(\"/switch\", data);\r\n  return resp;\r\n};\r\n\r\nexport const editSwitch = async (appid, data) => {\r\n  data.appid = appid;\r\n  data.t_uid = parseInt(data.t_uid);\r\n  data = JSON.stringify(data);\r\n  console.log(\"editSwitch\", data);\r\n  let resp = await axios.put(\"/switch\", data);\r\n  return resp;\r\n};\r\n\r\nexport const delSwitch = async (params) => {\r\n  let resp = await axios.delete(\"/switch\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getVerUpdate = async (params) => {\r\n  let resp = await axios.get(\"/config/verupdate\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const addVerUpdate = async (data) => {\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.post(\"/config/verupdate\", data);\r\n  return resp;\r\n};\r\n\r\nexport const editVerUpdate = async (data) => {\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.put(\"/config/verupdate\", data);\r\n  return resp;\r\n};\r\n\r\nexport const delVerUpdate = async (params) => {\r\n  let resp = await axios.delete(\"/config/verupdate\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getNotice = async (params) => {\r\n  let resp = await axios.get(\"/notices\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const addNotice = async (data) => {\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.post(\"/notices\", data);\r\n  return resp;\r\n};\r\nexport const editNotice = async (data) => {\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.put(\"/notices\", data);\r\n  return resp;\r\n};\r\n\r\nexport const delNotice = async (params) => {\r\n  let resp = await axios.delete(\"/notices\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getActivityRecharge = async (params) => {\r\n  let resp = await axios.get(\"/activity/recharge\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addActivityRecharge = async (data) => {\r\n  data.bonus_range = JSON.stringify(data.bonus_range);\r\n  data.cashback_range = JSON.stringify(data.cashback_range);\r\n  if (data.repeat_range) {\r\n    data.repeat_range = JSON.stringify(data.repeat_range);\r\n  }\r\n  if (data.condition_group) {\r\n    data.condition_group = JSON.stringify(data.condition_group);\r\n  }\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.post(\"/activity/recharge\", data);\r\n  return resp;\r\n};\r\nexport const editActivityRecharge = async (data) => {\r\n  data.bonus_range = JSON.stringify(data.bonus_range);\r\n  data.cashback_range = JSON.stringify(data.cashback_range);\r\n  if (data.repeat_range) {\r\n    data.repeat_range = JSON.stringify(data.repeat_range);\r\n  }\r\n  if (data.condition_group) {\r\n    data.condition_group = JSON.stringify(data.condition_group);\r\n  }\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.put(\"/activity/recharge\", data);\r\n  return resp;\r\n};\r\nexport const delActivityRecharge = async (params) => {\r\n  let resp = await axios.delete(\"/activity/recharge\", { params });\r\n  return resp;\r\n};\r\nexport const getRoomList = async (params) => {\r\n  let resp = await axios.get(\"/activity/recharge\", { params });\r\n  return resp?.data;\r\n};\r\n\r\n//------自动审批配置信息-------\r\nexport const getConfig = async (params) => {\r\n  let resp = await axios.get(\"/auto/getAutoReviewConfig\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addAutoReviewConfig = async (data) => {\r\n  let resp = await axios.post(\"/auto/addAutoReviewConfig\", data);\r\n  return resp;\r\n};\r\nexport const updateAutoReviewConfig = async (id, data) => {\r\n  return await axios.patch(`/auto/addAutoReviewConfig/${id}`, data);\r\n};\r\nexport const delAutoReviewConfig = async (id, params) => {\r\n  let resp = await axios.delete(`/auto/addAutoReviewConfig/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//------提款自动审批白名单信息-------\r\nexport const getAutoWhiteList = async (params) => {\r\n  let resp = await axios.get(\"/auto/getAutoWhiteList\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addAutoWhiteList = async (data) => {\r\n  let resp = await axios.post(\"/auto/addAutoWhiteList\", data);\r\n  return resp;\r\n};\r\nexport const updateAutoWhiteList = async (id, data) => {\r\n  return await axios.patch(`/auto/addAutoWhiteList/${id}`, data);\r\n};\r\nexport const delAutoWhiteList = async (id, params) => {\r\n  let resp = await axios.delete(`/auto/addAutoWhiteList/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//------提款自动审批危险区域信息-------\r\nexport const getAutoDangerArea = async (params) => {\r\n  let resp = await axios.get(\"/auto/getAutoDangerArea\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addAutoDangerArea = async (data) => {\r\n  let resp = await axios.post(\"/auto/addAutoDangerArea\", data);\r\n  return resp;\r\n};\r\nexport const updateAutoDangerArea = async (id, data) => {\r\n  return await axios.patch(`/auto/addAutoDangerArea/${id}`, data);\r\n};\r\nexport const delAutoDangerArea = async (id, params) => {\r\n  let resp = await axios.delete(`/auto/addAutoDangerArea/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//--------新手任务编辑新增修改\r\nexport const InsertTask = async (data) => {\r\n  let resp = await axios.post(\"/activity/tasks\", data);\r\n  return resp;\r\n};\r\nexport const UpdateTask = async (id, data) => {\r\n  return await axios.patch(`/activity/tasks/${id}`, data);\r\n};\r\nexport const DelTask = async (id, params) => {\r\n  let resp = await axios.delete(`/activity/tasks/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//--------维护公告，状态,获取，修改\r\nexport const getMaintenance = async (params) => {\r\n  let resp = await axios.get(\"/maintenance/notice\", { params });\r\n  return resp?.data;\r\n};\r\nexport const UpdateMaintenance = async (id, data) => {\r\n  return await axios.patch(`/maintenance/notice/${id}`, data);\r\n};\r\n//--------维护公告 用户白名单获取，删除，新增\r\nexport const getUserWhiteMaintenance = async (params) => {\r\n  let resp = await axios.get(\"/user/maintain/white/\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addUserMaintain = async (data) => {\r\n  let resp = await axios.post(\"/user/maintain/white/\", data);\r\n  return resp;\r\n};\r\nexport const DelUserMaintain = async (id, data) => {\r\n  return await axios.delete(`/user/maintain/white/${id}`, data);\r\n};\r\n\r\n//------活跃度任务信息,活跃度信息，活跃度开关-------\r\nexport const getActiveTaskConfig = async (params) => {\r\n  let resp = await axios.get(\"/active/getTaskConfig\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addActiveTaskConfig = async (data) => {\r\n  let resp = await axios.post(\"/active/addTaskConfig\", data);\r\n  return resp;\r\n};\r\nexport const UpdateActiveTaskConfig = async (id, data) => {\r\n  return await axios.patch(`/active/addTaskConfig/${id}`, data);\r\n};\r\nexport const DelActiveTaskConfig = async (id, data) => {\r\n  let resp = await axios.delete(`/active/addTaskConfig/${id}`, data);\r\n  return resp;\r\n};\r\nexport const activeTaskConfigSwitch = async (id, data) => {\r\n  let resp = await axios.patch(`/active/updateSwitch/${id}`, data);\r\n  return resp;\r\n};\r\n\r\nexport const getActiveConfig = async (params) => {\r\n  let resp = await axios.get(\"/active/getConfig\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addActiveConfig = async (data) => {\r\n  let resp = await axios.post(\"/active/addConfig\", data);\r\n  return resp;\r\n};\r\nexport const UpdateActiveConfig = async (id, data) => {\r\n  return await axios.patch(`/active/addConfig/${id}`, data);\r\n};\r\nexport const DelActiveConfig = async (id, params) => {\r\n  let resp = await axios.delete(`/active/addConfig/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\nexport const activeSwitch = async (params) => {\r\n  let resp = await axios.put(\"/active/switch\", params);\r\n  return resp;\r\n};\r\nexport const getActiveSwitch = async (params) => {\r\n  let resp = await axios.get(\"/active/getSwitch\", { params });\r\n  return resp?.data;\r\n};\r\n\r\n//------可疑用户新增，删除，踢人-------\r\n\r\nexport const addSecurityList = async (data) => {\r\n  let resp = await axios.post(\"/security/addList\", data);\r\n  return resp;\r\n};\r\nexport const DelSecurityList = async (id, data) => {\r\n  let resp = await axios.delete(`/security/addList/${id}`, data);\r\n  return resp;\r\n};\r\nexport const kickOutSecurityUser = async (id, data) => {\r\n  let resp = await axios.post(`/security/kickOut/${id}`, data);\r\n  return resp;\r\n};\r\n\r\n//------黑名单列表，单个查询，批量上传新增接口，批量删除接口-------\r\n\r\nexport const getBlockList = async (params) => {\r\n  let resp = await axios.get(\"/block/list\", { params });\r\n  return resp?.data;\r\n};\r\nexport const getBlockListType = async (params) => {\r\n  let resp = await axios.get(`/block/list/${params.uid}`, { params });\r\n  return resp;\r\n};\r\nexport const addBlockList = async (data) => {\r\n  let resp = await axios.post(\"/block/list\", data);\r\n  return resp;\r\n};\r\nexport const BatchDelBlockList = async (data) => {\r\n  let resp = await axios.post(`/block/batch-delete`, data);\r\n  return resp;\r\n};\r\nexport const DelBlockList = async (id, data) => {\r\n  let resp = await axios.delete(`/block/list/${id}`, data);\r\n  return resp;\r\n};\r\n//------黑名单其他列表，分页查询，单个删除及新增-------\r\nexport const getBlockOtherList = async (params) => {\r\n  let resp = await axios.get(\"/block-other/list\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addBlockOtherList = async (data) => {\r\n  let resp = await axios.post(\"/block-other/list\", data);\r\n  return resp;\r\n};\r\nexport const DelBlockOtherList = async (id, data) => {\r\n  let resp = await axios.delete(`/block-other/list/${id}`, data);\r\n  return resp;\r\n};\r\n\r\n//------充值提款账单查询-------\r\nexport const getDepositBillList = async (params) => {\r\n  let resp = await axios.get(\"/financial/deposit\", {\r\n    params: params,\r\n    paramsSerializer: function (p) {\r\n      //固定写法\r\n      return qs.stringify(p, { arrayFormat: \"repeat\" });\r\n    },\r\n  });\r\n  return resp?.data;\r\n};\r\nexport const getWithdrawBillList = async (params) => {\r\n  let resp = await axios.get(\"/financial/withdrawal\", {\r\n    params: params,\r\n    paramsSerializer: function (p) {\r\n      //固定写法\r\n      return qs.stringify(p, { arrayFormat: \"repeat\" });\r\n    },\r\n  });\r\n  return resp?.data;\r\n};\r\n\r\n//---------------- 更新配置-----------\r\n\r\nexport const getClientHotupgradeList = async (params) => {\r\n  let data = await axios.get(\"/sys/clientHotupgrade\", { params });\r\n  return data;\r\n};\r\n\r\nexport const delClientHotupgrade = async (params) => {\r\n  let data = await axios.delete(\"/sys/clientHotupgrade\", { params });\r\n  return data;\r\n};\r\n\r\nexport const addClientHotupgrade = async (appid, data) => {\r\n  try {\r\n    let resp = await axios.post(\"/sys/clientHotupgrade\", data);\r\n    console.log(resp);\r\n    return resp?.data;\r\n  } catch (e) {\r\n    console.log(\"addClientHotupgrade\", e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const editClientHotupgrade = async (appid, data) => {\r\n  console.log(\"修改更新配置：\", data);\r\n  let resp = await axios.put(\"/sys/clientHotupgrade\", data);\r\n  return resp;\r\n};\r\n\r\n//------审核白名单配置-------\r\nexport const getReviewWhiteList = async (params) => {\r\n  let resp = await axios.get(\"/review/getReviewWhiteList\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addReviewWhiteList = async (data) => {\r\n  let resp = await axios.post(\"/review/addReviewWhiteList\", data);\r\n  return resp;\r\n};\r\nexport const updateReviewWhiteList = async (id, data) => {\r\n  return await axios.patch(`/review/addReviewWhiteList/${id}`, data);\r\n};\r\nexport const delReviewWhiteList = async (id, params) => {\r\n  let resp = await axios.delete(`/review/addReviewWhiteList/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//------全局配置信息-------\r\nexport const getGlobalConfig = async (params) => {\r\n  let resp = await axios.get(\"/global/getGlobalConfig\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addGlobalConfig = async (data) => {\r\n  let resp = await axios.post(\"/global/addGlobalConfig\", data);\r\n  return resp;\r\n};\r\nexport const updateGlobalConfig = async (id, data) => {\r\n  return await axios.patch(`/global/addGlobalConfig/${id}`, data);\r\n};\r\nexport const delGlobalConfig = async (id, params) => {\r\n  let resp = await axios.delete(`/global/addGlobalConfig/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//------审核黑名单 查询删除及添加-------\r\nexport const getReviewBlockList = async (params) => {\r\n  let resp = await axios.get(\"/review_block/list\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addReviewBlockList = async (data) => {\r\n  let resp = await axios.post(\"/review_block/list\", data);\r\n  return resp;\r\n};\r\nexport const DelReviewBlockList = async (id, data) => {\r\n  let resp = await axios.delete(`/review_block/list/${id}`, data);\r\n  return resp;\r\n};\r\n","// const arr = [{ id: 3 }, { id: 5 }];\r\n//从数组中取得值\r\nfunction getAttrFormArr(arr, attr) {\r\n  let new_arr = arr.map((opt) => opt[attr]);\r\n  return new_arr;\r\n}\r\n//转换key值\r\nexport const trans_tree = (data, options) => {\r\n  let arr = [];\r\n  const { key, title, children } = options;\r\n  if (data) {\r\n    data.map((item) => {\r\n      arr.push({\r\n        key: item[key],\r\n        title: item[title],\r\n        children: item[children] ? trans_tree(item[children], options) : [],\r\n      });\r\n    });\r\n  }\r\n  return arr;\r\n};\r\n/**\r\n * 获取所有子key值（有children的父亲key值不返回）\r\n * @param {*} data\r\n * @param {*} options\r\n * @param {*} checkState 是否校验选中状态，校验则只有选中状态的才返回\r\n * @returns\r\n */\r\nexport function trans_tree_get_key(data, options) {\r\n  let arr = [];\r\n  const { key, title, children, check = \"check\", checkState = false } = options;\r\n  if (data) {\r\n    data.map((item) => {\r\n      if (item[children] && item[children].length > 0) {\r\n        // console.log(trans_tree_get_key(item[children], options))\r\n        arr = arr.concat(trans_tree_get_key(item[children], options));\r\n        // console.log(arr,'测试');\r\n      } else {\r\n        if (checkState) {\r\n          if (item[check]) {\r\n            arr.push(item[key]);\r\n          }\r\n        } else {\r\n          arr.push(item[key]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n/**\r\n * 获取所有key值（有children的父亲key值也返回）\r\n * @param {*} data\r\n * @param {*} options\r\n * @param {*} checkState 是否校验选中状态，校验则只有选中状态的才返回\r\n * @returns\r\n */\r\nexport function trans_tree_get_all_key(data, options) {\r\n  let arr = [];\r\n  const { key, title, children, check = \"check\", checkState = false } = options;\r\n  if (data) {\r\n    data.map((item) => {\r\n      if (item[children] && item[children].length > 0) {\r\n        if (checkState) {\r\n          if (item[check]) {\r\n            arr.push(item[key]);\r\n          }\r\n        } else {\r\n          arr.push(item[key]);\r\n        }\r\n        arr = arr.concat(trans_tree_get_all_key(item[children], options));\r\n      } else {\r\n        if (checkState) {\r\n          if (item[check]) {\r\n            arr.push(item[key]);\r\n          }\r\n        } else {\r\n          arr.push(item[key]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n//获取列表里面的所有用户id\r\nexport function get_id_user(source, config) {\r\n  const { data = [], key = \"id\" } = config;\r\n  let arr = [];\r\n  source.map((item) => {\r\n    arr.push(item[key]);\r\n  });\r\n  return arr;\r\n}\r\n/**\r\n * 查询列表里面的用户id，替换成用户名称\r\n * @param {*} source\r\n * @param {*} data\r\n * @returns\r\n */\r\nexport function repacle_id_user_name(source, config) {\r\n  const { data = [], key = \"id\", trans_key = \"uname\" } = config;\r\n  let arr = source;\r\n  for (const [objKey, value] of Object.entries(data)) {\r\n    arr.map((item) => {\r\n      if (objKey == item[key]) {\r\n        // arr.uname=value\r\n        item[trans_key] = value;\r\n      }\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n/**\r\n * 将菜单的所有关键字转换为项目需要的关键字\r\n * @param {*} data\r\n * @param {*} config\r\n * @returns\r\n */\r\nexport function trans_menu_key(data, config) {\r\n  const { title, trans_title, children, trans_children, router, trans_route } =\r\n    config;\r\n  let new_menu = [];\r\n  data.map((option) => {\r\n    // console.log(perms,option[trans_title],data)\r\n    if (option[trans_children] && option[trans_children].length > 0) {\r\n      let conf = {};\r\n      conf[title] = option[trans_title];\r\n      // conf[children] = option[trans_children];\r\n      conf[router] = option[trans_route];\r\n      conf.id = option.id;\r\n      conf[children] = trans_menu_key(option[trans_children], config);\r\n      new_menu.push(conf);\r\n    } else {\r\n      let conf = {};\r\n      conf[title] = option[trans_title];\r\n      conf[children] = option[trans_children];\r\n      conf[router] = option[trans_route];\r\n      new_menu.push(conf);\r\n    }\r\n  });\r\n  return new_menu;\r\n}\r\n/**\r\n * 获取菜单权限关键字,供路由使用\r\n * @param {*} data\r\n * @param {*} config\r\n */\r\nexport function get_menu_key(data, config) {\r\n  const { key, children, superKey } = config;\r\n  let arr = [];\r\n  data.map((opt) => {\r\n    // opt[key] && arr.push(opt[key]);\r\n    opt[superKey] && arr.push(opt[superKey]);\r\n    if (opt[children] && opt[children].length > 0) {\r\n      arr = arr.concat(get_menu_key(opt[children], config));\r\n    } else {\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n/**\r\n * 根据权限生成路由\r\n * @param {*} data\r\n * @param {*} config\r\n * @returns\r\n */\r\nexport function create_route_key(data, config) {\r\n  const { key, children, perms = [], superKey } = config;\r\n  let routes = [];\r\n  data.map((opt) => {\r\n    if (opt[children] && opt[children].length > 0) {\r\n      if (perms.includes(opt[superKey]) || !opt[superKey]) {\r\n        let obj = {\r\n          ...opt,\r\n          routes: [],\r\n        };\r\n\r\n        obj[children] = create_route_key(opt[children], config);\r\n        routes.push(obj);\r\n      }\r\n    } else if (!opt[children] || opt[children].length == 0) {\r\n      // console.log(opt, opt[superKey], superKey, !opt[superKey]);\r\n      if (perms.includes(opt[superKey]) || !opt[superKey]) {\r\n        // console.log(opt[superKey], perms, perms.includes(opt[superKey]));\r\n        routes.push(opt);\r\n        // if (!opt[key]) {\r\n        //   routes.push(opt);\r\n        // } else if (perms.includes(opt[superKey])) {\r\n        //   // console.log(opt[superKey])\r\n        //   routes.push(opt);\r\n        // }\r\n        // console.log(opt[superKey],perms,opt[key]);\r\n      }\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nexport default getAttrFormArr;\r\n","import React, { memo, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\n// import * as Icon from \"@ant-design/icons\";\r\n\r\nimport { getMenu } from \"../../api/sys\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Navigation = () => {\r\n  const [menus, setMenu] = useState([]);\r\n  const routes = useSelector((state) => state.routes);\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    async function fetchData() {\r\n      let menu = await getMenu();\r\n      // console.log(routes);\r\n      if (mounted) setMenu(menu);\r\n    }\r\n    fetchData();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Menu mode=\"inline\">\r\n      {menus.map((item) => (\r\n        <Menu.SubMenu\r\n          key={item.id}\r\n          title={\r\n            <span>\r\n              {/* {item.icon && React.createElement(Icon[item.icon])} */}\r\n              {item.title}\r\n            </span>\r\n          }\r\n        >\r\n          {item.children.map((child) => (\r\n            <Menu.Item key={child.id}>\r\n              <NavLink to={child.link}>{child.title}</NavLink>\r\n            </Menu.Item>\r\n          ))}\r\n        </Menu.SubMenu>\r\n      ))}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default memo(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/logo.51586d6b.svg\";","import React, { Suspense, memo } from \"react\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Row, Menu, Dropdown, Skeleton } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport Navigation from \"components/Navigation/Navigation\";\r\nimport { logout } from \"store/actions\";\r\n\r\nimport logo from \"assets/image/logo.svg\";\r\nimport \"./index.less\";\r\n\r\nfunction Index(props) {\r\n  const { route } = props;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const session = useSelector((state) => state.session);\r\n  const onLogout = () => {\r\n    localStorage.removeItem(\"session\");\r\n    dispatch(logout());\r\n  };\r\n\r\n  // if (!session.loggedIn) {\r\n  //   return <Skeleton />\r\n  // }\r\n  if (!session.token) {\r\n    history.push(\"/login\");\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app\">\r\n        <header className=\"app-header\">\r\n          <Row justify=\"space-around\" align=\"middle\">\r\n            <Col span={8}>\r\n              <div className=\"logo\">\r\n                <img src={logo} alt=\"\" />\r\n                <h1 className=\"logo-title\">Dashboard</h1>\r\n              </div>\r\n            </Col>\r\n            <Col span={16} style={{ textAlign: \"right\" }}>\r\n              <Dropdown\r\n                overlay={\r\n                  <Menu>\r\n                    <Menu.Item onClick={onLogout}>logout</Menu.Item>\r\n                  </Menu>\r\n                }\r\n              >\r\n                <a\r\n                  style={{ color: \"#ffffff\" }}\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  {session.username} <DownOutlined />\r\n                </a>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </header>\r\n\r\n        <div className=\"app-body\">\r\n          <aside className=\"sidebar\">\r\n            <Navigation />\r\n          </aside>\r\n\r\n          <main className=\"main\">\r\n            <div className=\"main-content\" style={{ padding: \"20px\" }}>\r\n              <Suspense fallback={<div>loading...</div>}>\r\n                {renderRoutes(route.routes)}\r\n              </Suspense>\r\n            </div>\r\n\r\n            <div className=\"main-footer\">\r\n              Get the best experience with chrome.\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(Index);\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport Page from \"components/Page\";\r\nimport { login } from \"../../store/actions\";\r\nimport { createToken } from \"api/user\";\r\nimport { loginIn } from \"@/api/login\";\r\nimport \"./index.less\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 0,\r\n  },\r\n  wrapperCol: {\r\n    span: 40,\r\n  },\r\n};\r\n\r\nfunction Index() {\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const session = useSelector((state) => state.session);\r\n  const history = useHistory();\r\n  const onLogin = async (values) => {\r\n    try {\r\n      let data = await loginIn(values);\r\n      data = data.data;\r\n      // console.log(data);\r\n      data.diff = new Date().getTime() - dayjs().unix();\r\n      localStorage.setItem(\r\n        \"session\",\r\n        JSON.stringify({\r\n          ...data,\r\n          token: data[\"x-token\"],\r\n          expire: 3600,\r\n          time: new Date().getTime(),\r\n          username: form.getFieldValue(\"uname\"),\r\n        })\r\n      );\r\n      dispatch(\r\n        login({\r\n          ...data,\r\n          token: data[\"x-token\"],\r\n          expire: 3600,\r\n          time: new Date().getTime(),\r\n          // token: \"laibaorummy_=_03694adbca9d58ee6064c52f51b80dec\",\r\n          username: form.getFieldValue(\"uname\"),\r\n        })\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {console.log(session.token, 2345)} */}\r\n      {session.token && <Redirect to=\"/\" />}\r\n      <Page title={\"login\"} headStyle={{ display: \"none\" }}>\r\n        <div className=\"login-box\">\r\n          <Form {...layout} form={form} name=\"control-hooks\" onFinish={onLogin}>\r\n            <Form.Item\r\n              name=\"uname\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                login\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Page from 'components/Page'\r\nimport { getAppid } from 'api/sys'\r\nimport { initAppid } from 'store/actions'\r\n\r\nfunction Index(props) {\r\n  const { route, params, match } = props;\r\n  // console.log(route, params, match.params);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try{\r\n        const appidList = await getAppid();\r\n        // dispatch(initAppid(appidList));\r\n      }catch{\r\n\r\n      }\r\n     \r\n    };\r\n    fetchData();\r\n\r\n  }, [dispatch]);\r\n \r\n  return (\r\n    <Page title=\"Welcome\" style={{textAlign: \"center\"}} headStyle={{display: 'none'}}>\r\n      <h1>Welcome ！</h1>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import { lazy } from \"react\";\r\n\r\nimport Dashboard from \"layouts/Dashboard\";\r\nimport Login from \"pages/Login\";\r\nimport Home from \"pages/Home\";\r\nexport const contanstRoutes = [\r\n  {\r\n    path: \"/login\",\r\n    exact: true,\r\n    component: Login,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: Dashboard,\r\n    routes: [\r\n      {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Home,\r\n      },\r\n      {\r\n        component: lazy(() => import(\"pages/Notfound\")),\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    exact: true,\r\n    component: Login,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: Dashboard,\r\n    routes: [\r\n      {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Home,\r\n      },\r\n      {\r\n        path: \"/account/List\",\r\n        title: \"账号列表\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/AccountList\")),\r\n      },\r\n      {\r\n        path: \"/account/operalog\",\r\n        title: \"操作日志\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/AccountOperaLog\")),\r\n      },\r\n      {\r\n        path: \"/role/List\",\r\n        title: \"角色列表\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/Role\")),\r\n      },\r\n      {\r\n        path: \"/role/operalog\",\r\n        title: \"操作日志\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RoleOperaLog\")),\r\n      },\r\n\r\n      {\r\n        path: \"/game/List\",\r\n        title: \"游戏列表\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/Game\")),\r\n      },\r\n      {\r\n        path: \"/game/operalog\",\r\n        title: \"操作日志\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/GameOperaLog\")),\r\n      },\r\n      {\r\n        path: \"/roomList\",\r\n        title: \"玩法场次配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RoomList\")),\r\n      },\r\n      {\r\n        path: \"/robot/users\",\r\n        title: \"机器人列表\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RobotUser\")),\r\n      },\r\n      {\r\n        path: \"/roomListConfig\",\r\n        title: \"玩法场次配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RoomListConfig\")),\r\n      },\r\n\r\n      {\r\n        path: \"/robot/CondConfig\",\r\n        title: \"个人池条件配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RobotCondConfig\")),\r\n      },\r\n      {\r\n        path: \"/robot/CDConfig\",\r\n        title: \"个人池冷却配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RobotCDConfig\")),\r\n      },\r\n      {\r\n        path: \"/robot/RulesConfig\",\r\n        title: \"个人池规则配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RobotRulesConfig\")),\r\n      },\r\n      {\r\n        path: \"/areaConfig\",\r\n        title: \"地区管理\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/AreaConfig\")),\r\n      },\r\n      //用户管理-用户信息\r\n      {\r\n        path: \"/user/userInfo\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/UserInfo\")),\r\n      },\r\n      //用户管理-邀请数据排行\r\n      {\r\n        path: \"/activity/inviteRank\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/InviteRank\")),\r\n      },\r\n      //用户管理-用户登录列表\r\n      {\r\n        path: \"/user/loginLogList\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/LoginLog\")),\r\n      },\r\n      //用户管理-用户列表\r\n      {\r\n        path: \"/userList\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/UserList\")),\r\n      },\r\n      //用户管理-可疑用户列表\r\n      {\r\n        path: \"/security/list\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/Security/SecurityList\")),\r\n      },\r\n      //用户管理-异常用户名单\r\n      {\r\n        path: \"/security/flagLog\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/Security\")),\r\n      },\r\n\r\n      // {\r\n      //   path: \"/user/getUserRank\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/UserRank\")),\r\n      // },\r\n      // {\r\n      //   path: \"/activity/win\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Activity\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/notice/broadcast\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Broadcast\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/user/cardControl\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/UserCardControl\")),\r\n      // },\r\n      // {\r\n      //   path: \"/cardControl\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/CardControl\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/payments\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Payment\")),\r\n      // },\r\n      // {\r\n      //   path: \"/refundProcessing\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/RefundProcessing\")),\r\n      // },\r\n      //关键数据配置-场次规则管理\r\n      {\r\n        path: \"/robot/playRule\",\r\n        title: \"场次规则管理\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/Robot/PlayRule\")),\r\n      },\r\n      // {\r\n      //   path: \"/robot/RobotRoomRole\",\r\n      //   title: \"房间池规则配置\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/RobotRoomRole\")),\r\n      // },\r\n      // {\r\n      //   path: \"/robot/users\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Robot/Users\")),\r\n      // },\r\n      // {\r\n      //   path: \"/statistics/:id\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Statistics\")),\r\n      // },\r\n      // {\r\n      //   path: \"/activeData\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ActiveData\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/authentication\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Authentication\")),\r\n      // },\r\n      // {\r\n      //   path: \"/hotUpgrade\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/HotUpgrade\")),\r\n      // },\r\n      // {\r\n      //   path: \"/switch\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Switch\")),\r\n      // },\r\n      // {\r\n      //   path: \"/gameConfig\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/GameConfig\")),\r\n      // },\r\n      // {\r\n      //   path: \"/online\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Online\")),\r\n      // },\r\n      // {\r\n      //   path: \"/notice\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Notice\")),\r\n      // },\r\n      // {\r\n      //   path: \"/poster\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/NoticePoster\")),\r\n      // },\r\n      // {\r\n      //   path: \"/activity/tasks\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Task\")),\r\n      // },\r\n      // {\r\n      //   path: \"/poster\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/NoticePoster\")),\r\n      // },\r\n      // {\r\n      //   path: \"/email\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Email\")),\r\n      // },\r\n      // {\r\n      //   path: \"/withdraw\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Withdraw\")),\r\n      // },\r\n      // // {\r\n      // //   path: '/operationManage',\r\n      // //   exact: true,\r\n      // //   component: lazy(() => import('pages/OperationManage'))\r\n      // // },\r\n      // {\r\n      //   path: \"/user/manage\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/UserManage\")),\r\n      // },\r\n      // {\r\n      //   path: \"/verUpdate\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/VersionUpdate\")),\r\n      // },\r\n      // {\r\n      //   path: \"/activityRecharge\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ActivityRecharge\")),\r\n      // },\r\n      // {\r\n      //   path: \"/roomList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/RoomList\")),\r\n      // },\r\n\r\n      // // 充值排行榜\r\n      // {\r\n      //   path: \"/user/paymentRanking\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/PaymentRanking\")),\r\n      // },\r\n      // // 提现排行榜\r\n      // {\r\n      //   path: \"/user/withdrawRanking\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/WithdrawRanking\")),\r\n      // },\r\n      // // 盈利排行榜\r\n      // {\r\n      //   path: \"/user/profitRanking\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ProfitRanking\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/autoReviewConfig\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/AutoReviewConfig\")),\r\n      // },\r\n      // {\r\n      //   path: \"/autoReviewWhiteList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/AutoReviewWhiteList\")),\r\n      // },\r\n      // {\r\n      //   path: \"/autoReviewDangerArea\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/AutoReviewDangerArea\")),\r\n      // },\r\n      // {\r\n      //   path: \"/maintenanceNotice\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/MaintenanceNotice\")),\r\n      // },\r\n      // {\r\n      //   path: \"/active/sys\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Active\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/clientHotUpgrade\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ClientHotUpgrade\")),\r\n      // },\r\n      // {\r\n      //   path: \"/blockList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/BlockList\")),\r\n      // }, //黑名单\r\n      // {\r\n      //   path: \"/blockOtherList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/BlockOtherList\")),\r\n      // }, //其他黑名单\r\n      // {\r\n      //   path: \"/depositBill\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/DepositBill\")),\r\n      // }, //充值账单\r\n      // {\r\n      //   path: \"/withdrawBill\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/WithdrawBill\")),\r\n      // }, //充值账单\r\n      // {\r\n      //   path: \"/crux/statistics/:id\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Statistics/CruxStatistics\")), //关键指标统计\r\n      // },\r\n      // {\r\n      //   path: \"/reviewWhiteList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ReviewWhiteList\")),\r\n      // }, //审核白名单\r\n      // {\r\n      //   path: \"/reviewBlockList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ReviewBlockList\")),\r\n      // }, //审核黑名单\r\n      // {\r\n      //   path: \"/globalConfig\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/GlobalConfig\")),\r\n      // }, //全局配置\r\n\r\n      {\r\n        component: lazy(() => import(\"pages/Notfound\")),\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n"],"sourceRoot":""}