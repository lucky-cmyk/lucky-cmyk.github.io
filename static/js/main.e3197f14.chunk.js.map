{"version":3,"sources":["components/Page/Page.js","api/login.js","components/Navigation/Navigation.js","assets/image/logo.svg","layouts/Dashboard/components/Loading/index.js","layouts/Dashboard/index.js","pages/Login/index.js","pages/Home/index.js","routes.js","api/user.js","store/actions/appid.js","store/actions/session.js","store/actions/reactAppBaseUrl.js","store/actions/reactAppCdneUrl.js","store/actions/reactAppS3Enable.js","store/actions/routes.js","components/Initialization/index.js","App.js","serviceWorker.js","index.js","store/reducers/session.js","store/reducers/appid.js","store/reducers/reactAppBaseUrl.js","store/reducers/reactAppCdnUrl.js","store/reducers/reactAppS3Enable.js","store/reducers/routes.js","store/reducers/index.js","store/index.js","utils/axios.js","utils/http.js","api/sys.js","utils/index.js"],"names":["Page","props","title","children","rest","bordered","Helmet","loginIn","params","a","axios","jpost","data","loginOut","Navigation","useState","menus","setMenu","useSelector","state","routes","useEffect","mounted","getMenu","menu","fetchData","mode","map","item","SubMenu","child","Item","to","link","id","memo","Index","className","route","dispatch","useDispatch","history","useHistory","session","token","justify","align","span","src","logo","alt","style","textAlign","overlay","onClick","localStorage","removeItem","logout","color","e","preventDefault","username","DownOutlined","padding","fallback","renderRoutes","push","layout","labelCol","wrapperCol","useForm","form","onLogin","values","diff","Date","getTime","dayjs","unix","setItem","JSON","stringify","expire","time","getFieldValue","login","console","log","headStyle","display","name","onFinish","rules","required","placeholder","Password","type","htmlType","block","match","getAppid","path","exact","component","Login","Dashboard","Home","expect","lazy","getUserInfo","get","uid","bpUser","patch","getDevUsers","devid","userlist","ls","getIpUsers","ip","getGameCircleRecord","rid","getInviteUsersById","INIT_APPID","LOGIN","LOGOUT","userInfo","INIT_BASE_URL","initBaseUrl","baseUrl","INIT_CDN_URL","initCdnUrl","cndUrl","INIT_S3_ENABLE","iniS3Enable","s3Enable","SET_ROUTES","set_routes","routePerms","get_menu_key","superKey","new_routes","create_route_key","key","perms","concat","InitIndex","getItem","parse","load","then","res","REACT_APP_BASE_URL","REACT_APP_CDN_URL","REACT_APP_S3_SERVER_ENABLE","customizeRenderEmpty","image","PRESENTED_IMAGE_SIMPLE","description","renderEmpty","Initialization","Boolean","window","location","hostname","ReactDOM","render","store","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","initalState","loggedIn","sessionReducer","action","actionTypes","appidsReducer","baseUrlReducer","cdnUrlReducer","s3EnableReducer","routesReducer","contanstRoutes","rootReducer","combineReducers","appids","cdnUrl","createStore","composeWithDevTools","applyMiddleware","thunk","instance","undefined","create","baseURL","process","headers","interceptors","request","use","config","updateUrl","getState","Promise","reject","response","resp","code","reload","err","service","timeout","downservice","status","http","img","url","resolve","method","jqpost","formput","getdownload","fileName","responseType","blob","Blob","createElement","elink","target","download","href","URL","createObjectURL","click","revokeObjectURL","msSaveBlob","post","qs","delete","deleteBody","put","imgPost","AllMenu","icon","appid","appName","getUsers","userListLineData","paramsSerializer","p","arrayFormat","getAuthentication","getOnline","getWithdraw","reviewWithdraw","reason","returnWithdraw","getConfig","addAutoReviewConfig","updateAutoReviewConfig","delAutoReviewConfig","addSecurityList","DelSecurityList","kickOutSecurityUser","getBlockListType","addBlockList","getUserWithdrawal","getUserBonus","trans_tree","options","arr","trans_tree_get_key","check","checkState","length","trans_tree_get_all_key","get_id_user","source","repacle_id_user_name","trans_key","objKey","value","Object","entries","trans_menu_key","trans_title","trans_children","router","trans_route","new_menu","option","conf","opt","includes","obj"],"mappings":"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","file":"static/js/main.e3197f14.chunk.js","sourcesContent":["/* eslint-disable no-undef */\r\nimport React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { Card } from 'antd';\r\n\r\nconst Page = props => {\r\n  const { title, children, ...rest } = props;\r\n\r\n  return (\r\n    <Card {...rest} title={title} bordered={false} >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import axios from \"../utils/http\";\r\n\r\n//登录\r\nexport const loginIn = async (params) => {\r\n  let data = await axios.jpost(`/login`, params);\r\n  return data;\r\n};\r\n//登出\r\nexport const loginOut = async (params) => {\r\n  let data = await axios.jpost(`/log-out`, params);\r\n  return data;\r\n};\r\n\r\n","import React, { memo, useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Menu } from \"antd\";\r\n// import * as Icon from \"@ant-design/icons\";\r\n\r\nimport { getMenu, getMenu_h } from \"../../api/sys\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Navigation = () => {\r\n  const [menus, setMenu] = useState([]);\r\n  const routes = useSelector((state) => state.routes);\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    async function fetchData() {\r\n      let menu = await getMenu();\r\n      // console.log(routes);\r\n      if (mounted) setMenu(menu);\r\n    }\r\n    fetchData();\r\n\r\n    return () => {\r\n      mounted = false;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Menu mode=\"inline\">\r\n      {menus.map((item) => (\r\n        <Menu.SubMenu\r\n          key={item.id}\r\n          title={\r\n            <span>\r\n              {/* {item.icon && React.createElement(Icon[item.icon])} */}\r\n              {item.title}\r\n            </span>\r\n          }\r\n        >\r\n          {item.children.map((child) => (\r\n            <Menu.Item key={child.id}>\r\n              <NavLink to={child.link}>{child.title}</NavLink>\r\n            </Menu.Item>\r\n          ))}\r\n        </Menu.SubMenu>\r\n      ))}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default memo(Navigation);\r\n","export default __webpack_public_path__ + \"static/media/logo.51586d6b.svg\";","import React from \"react\";\r\nimport \"./index.less\";\r\nimport { Spin } from \"antd\";\r\nfunction Index() {\r\n  return (\r\n    <div className=\"SpainBox\">\r\n      <Spin/>\r\n    </div>\r\n  );\r\n}\r\nexport default Index;\r\n","import React, { Suspense, memo } from \"react\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Col, Row, Menu, Dropdown, Skeleton } from \"antd\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\n\r\nimport Navigation from \"components/Navigation/Navigation\";\r\nimport { logout } from \"store/actions\";\r\n\r\nimport logo from \"assets/image/logo.svg\";\r\nimport \"./index.less\";\r\nimport Loading from \"./components/Loading\";\r\nfunction Index(props) {\r\n  const { route } = props;\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const session = useSelector((state) => state.session);\r\n  const onLogout = () => {\r\n    localStorage.removeItem(\"session\");\r\n    dispatch(logout());\r\n  };\r\n\r\n  if (!session.token) {\r\n    history.push(\"/login\");\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"app\">\r\n        <header className=\"app-header\">\r\n          <Row justify=\"space-around\" align=\"middle\">\r\n            <Col span={8}>\r\n              <div className=\"logo\">\r\n                <img src={logo} alt=\"\" />\r\n                <h1 className=\"logo-title\">Dashboard</h1>\r\n              </div>\r\n            </Col>\r\n            <Col span={16} style={{ textAlign: \"right\" }}>\r\n              <Dropdown\r\n                overlay={\r\n                  <Menu>\r\n                    <Menu.Item onClick={onLogout}>logout</Menu.Item>\r\n                  </Menu>\r\n                }\r\n              >\r\n                <a\r\n                  style={{ color: \"#ffffff\" }}\r\n                  onClick={(e) => e.preventDefault()}\r\n                >\r\n                  {session.username} <DownOutlined />\r\n                </a>\r\n              </Dropdown>\r\n            </Col>\r\n          </Row>\r\n        </header>\r\n\r\n        <div className=\"app-body\">\r\n          <aside className=\"sidebar\">\r\n            <Navigation />\r\n          </aside>\r\n\r\n          <main className=\"main\">\r\n            <div className=\"main-content\" style={{ padding: \"20px\" }}>\r\n              <Suspense fallback={<Loading />}>\r\n                {renderRoutes(route.routes)}\r\n              </Suspense>\r\n            </div>\r\n\r\n            <div className=\"main-footer\">\r\n              Get the best experience with chrome.\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(Index);\r\n","import React, { useEffect } from \"react\";\r\nimport { Form, Input, Button, message } from \"antd\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport Page from \"components/Page\";\r\nimport { login } from \"../../store/actions\";\r\nimport { createToken } from \"api/user\";\r\nimport { loginIn } from \"@/api/login\";\r\nimport \"./index.less\";\r\n\r\nconst layout = {\r\n  labelCol: {\r\n    span: 0,\r\n  },\r\n  wrapperCol: {\r\n    span: 40,\r\n  },\r\n};\r\n\r\nfunction Index() {\r\n  const [form] = Form.useForm();\r\n  const dispatch = useDispatch();\r\n  const session = useSelector((state) => state.session);\r\n  const history = useHistory();\r\n  const onLogin = async (values) => {\r\n    try {\r\n      let data = await loginIn(values);\r\n      data = data.data;\r\n      // console.log(data);\r\n      data.diff = new Date().getTime() - dayjs().unix();\r\n      localStorage.setItem(\r\n        \"session\",\r\n        JSON.stringify({\r\n          ...data,\r\n          token: data[\"x-token\"],\r\n          expire: 3600,\r\n          time: new Date().getTime(),\r\n          username: form.getFieldValue(\"uname\"),\r\n        })\r\n      );\r\n      dispatch(\r\n        login({\r\n          ...data,\r\n          token: data[\"x-token\"],\r\n          expire: 3600,\r\n          time: new Date().getTime(),\r\n          // token: \"laibaorummy_=_03694adbca9d58ee6064c52f51b80dec\",\r\n          username: form.getFieldValue(\"uname\"),\r\n        })\r\n      );\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {console.log(session.token, 2345)} */}\r\n      {session.token && <Redirect to=\"/\" />}\r\n      <Page title={\"login\"} headStyle={{ display: \"none\" }}>\r\n        <div className=\"login-box\">\r\n          <Form {...layout} form={form} name=\"control-hooks\" onFinish={onLogin}>\r\n            <Form.Item\r\n              name=\"uname\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input placeholder=\"username\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password placeholder=\"password\" />\r\n            </Form.Item>\r\n\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" block>\r\n                login\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </Page>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Page from 'components/Page'\r\nimport { getAppid } from 'api/sys'\r\nimport { initAppid } from 'store/actions'\r\n\r\nfunction Index(props) {\r\n  const { route, params, match } = props;\r\n  // console.log(route, params, match.params);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try{\r\n        const appidList = await getAppid();\r\n        // dispatch(initAppid(appidList));\r\n      }catch{\r\n\r\n      }\r\n     \r\n    };\r\n    fetchData();\r\n\r\n  }, [dispatch]);\r\n \r\n  return (\r\n    <Page title=\"Welcome\" style={{textAlign: \"center\"}} headStyle={{display: 'none'}}>\r\n      <h1>Welcome ！</h1>\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n","import { lazy } from \"react\";\r\n\r\nimport Dashboard from \"layouts/Dashboard\";\r\nimport Login from \"pages/Login\";\r\nimport Home from \"pages/Home\";\r\nexport const contanstRoutes = [\r\n  {\r\n    path: \"/login\",\r\n    exact: true,\r\n    component: Login,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: Dashboard,\r\n    routes: [\r\n      {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Home,\r\n      },\r\n      {\r\n        component: lazy(() => import(\"pages/Notfound\")),\r\n      },\r\n    ],\r\n  },\r\n];\r\nconst routes = [\r\n  {\r\n    path: \"/login\",\r\n    exact: true,\r\n    component: Login,\r\n  },\r\n  {\r\n    path: \"*\",\r\n    component: Dashboard,\r\n    routes: [\r\n      {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: Home,\r\n      },\r\n      {\r\n        path: \"/account/List\",\r\n        title: \"账号列表\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/AccountList\")),\r\n      },\r\n      {\r\n        path: \"/account/operalog\",\r\n        title: \"操作日志\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/AccountOperaLog\")),\r\n      },\r\n      {\r\n        path: \"/role/List\",\r\n        title: \"角色列表\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/Role\")),\r\n      },\r\n      {\r\n        path: \"/role/operalog\",\r\n        title: \"操作日志\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RoleOperaLog\")),\r\n      },\r\n\r\n      {\r\n        path: \"/game/List\",\r\n        title: \"游戏列表\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/Game\")),\r\n      },\r\n      {\r\n        path: \"/game/operalog\",\r\n        title: \"操作日志\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/GameOperaLog\")),\r\n      },\r\n      {\r\n        path: \"/roomList\",\r\n        title: \"玩法场次配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RoomList\")),\r\n      },\r\n      {\r\n        path: \"/robot/users\",\r\n        title: \"机器人列表\",\r\n        expect: true,\r\n        component: lazy(() => import(\"pages/Robot/Users\")),\r\n      },\r\n      {\r\n        path: \"/roomListConfig\",\r\n        title: \"玩法场次配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RoomListConfig\")),\r\n      },\r\n\r\n      {\r\n        path: \"/robot/CondConfig\",\r\n        title: \"个人池条件配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RobotCondConfig\")),\r\n      },\r\n      {\r\n        path: \"/robot/CDConfig\",\r\n        title: \"个人池冷却配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RobotCDConfig\")),\r\n      },\r\n      {\r\n        path: \"/robot/RulesConfig\",\r\n        title: \"个人池规则配置\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/RobotRulesConfig\")),\r\n      },\r\n      {\r\n        path: \"/areaConfig\",\r\n        title: \"地区管理\",\r\n        expect: true,\r\n        component: lazy(() => import(\"./pages/AreaConfig\")),\r\n      },\r\n      //用户管理-用户信息\r\n      {\r\n        path: \"/user/userInfo\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/UserInfo\")),\r\n      },\r\n      //用户管理-邀请数据排行\r\n      {\r\n        path: \"/activity/inviteRank\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/InviteRank\")),\r\n      },\r\n      //用户管理-用户登录列表\r\n      {\r\n        path: \"/user/loginLogList\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/LoginLog\")),\r\n      },\r\n      //用户管理-用户列表\r\n      {\r\n        path: \"/userList\",\r\n        exact: true,\r\n        title: \"用户列表\",\r\n        component: lazy(() => import(\"pages/UserList\")),\r\n      },\r\n      //用户管理-可疑用户列表\r\n      {\r\n        path: \"/security/list\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/Security/SecurityList\")),\r\n      },\r\n      //用户管理-异常用户名单\r\n      {\r\n        path: \"/security/flagLog\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/Security\")),\r\n      },\r\n\r\n      // {\r\n      //   path: \"/user/getUserRank\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/UserRank\")),\r\n      // },\r\n      // {\r\n      //   path: \"/activity/win\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Activity\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/notice/broadcast\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Broadcast\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/user/cardControl\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/UserCardControl\")),\r\n      // },\r\n      // {\r\n      //   path: \"/cardControl\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/CardControl\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/payments\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Payment\")),\r\n      // },\r\n      // {\r\n      //   path: \"/refundProcessing\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/RefundProcessing\")),\r\n      // },\r\n      //关键数据配置-场次规则管理\r\n      {\r\n        path: \"/robot/playRule\",\r\n        title: \"场次规则管理\",\r\n        exact: true,\r\n        component: lazy(() => import(\"pages/Robot/PlayRule\")),\r\n      },\r\n      // {\r\n      //   path: \"/robot/RobotRoomRole\",\r\n      //   title: \"房间池规则配置\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/RobotRoomRole\")),\r\n      // },\r\n      // {\r\n      //   path: \"/robot/users\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Robot/Users\")),\r\n      // },\r\n      // {\r\n      //   path: \"/statistics/:id\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Statistics\")),\r\n      // },\r\n      // {\r\n      //   path: \"/activeData\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ActiveData\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/authentication\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Authentication\")),\r\n      // },\r\n      // {\r\n      //   path: \"/hotUpgrade\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/HotUpgrade\")),\r\n      // },\r\n      // {\r\n      //   path: \"/switch\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Switch\")),\r\n      // },\r\n      // {\r\n      //   path: \"/gameConfig\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/GameConfig\")),\r\n      // },\r\n      // {\r\n      //   path: \"/online\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Online\")),\r\n      // },\r\n      // {\r\n      //   path: \"/notice\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Notice\")),\r\n      // },\r\n      // {\r\n      //   path: \"/poster\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/NoticePoster\")),\r\n      // },\r\n      // {\r\n      //   path: \"/activity/tasks\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Task\")),\r\n      // },\r\n      // {\r\n      //   path: \"/poster\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/NoticePoster\")),\r\n      // },\r\n      // {\r\n      //   path: \"/email\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Email\")),\r\n      // },\r\n      // {\r\n      //   path: \"/withdraw\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Withdraw\")),\r\n      // },\r\n      // // {\r\n      // //   path: '/operationManage',\r\n      // //   exact: true,\r\n      // //   component: lazy(() => import('pages/OperationManage'))\r\n      // // },\r\n      // {\r\n      //   path: \"/user/manage\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/UserManage\")),\r\n      // },\r\n      // {\r\n      //   path: \"/verUpdate\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/VersionUpdate\")),\r\n      // },\r\n      // {\r\n      //   path: \"/activityRecharge\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ActivityRecharge\")),\r\n      // },\r\n      // {\r\n      //   path: \"/roomList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/RoomList\")),\r\n      // },\r\n\r\n      // // 充值排行榜\r\n      // {\r\n      //   path: \"/user/paymentRanking\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/PaymentRanking\")),\r\n      // },\r\n      // // 提现排行榜\r\n      // {\r\n      //   path: \"/user/withdrawRanking\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/WithdrawRanking\")),\r\n      // },\r\n      // // 盈利排行榜\r\n      // {\r\n      //   path: \"/user/profitRanking\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ProfitRanking\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/autoReviewConfig\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/AutoReviewConfig\")),\r\n      // },\r\n      // {\r\n      //   path: \"/autoReviewWhiteList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/AutoReviewWhiteList\")),\r\n      // },\r\n      // {\r\n      //   path: \"/autoReviewDangerArea\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/AutoReviewDangerArea\")),\r\n      // },\r\n      // {\r\n      //   path: \"/maintenanceNotice\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/MaintenanceNotice\")),\r\n      // },\r\n      // {\r\n      //   path: \"/active/sys\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Active\")),\r\n      // },\r\n\r\n      // {\r\n      //   path: \"/clientHotUpgrade\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ClientHotUpgrade\")),\r\n      // },\r\n      // {\r\n      //   path: \"/blockList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/BlockList\")),\r\n      // }, //黑名单\r\n      // {\r\n      //   path: \"/blockOtherList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/BlockOtherList\")),\r\n      // }, //其他黑名单\r\n      // {\r\n      //   path: \"/depositBill\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/DepositBill\")),\r\n      // }, //充值账单\r\n      // {\r\n      //   path: \"/withdrawBill\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/WithdrawBill\")),\r\n      // }, //充值账单\r\n      // {\r\n      //   path: \"/crux/statistics/:id\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/Statistics/CruxStatistics\")), //关键指标统计\r\n      // },\r\n      // {\r\n      //   path: \"/reviewWhiteList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ReviewWhiteList\")),\r\n      // }, //审核白名单\r\n      // {\r\n      //   path: \"/reviewBlockList\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/ReviewBlockList\")),\r\n      // }, //审核黑名单\r\n      // {\r\n      //   path: \"/globalConfig\",\r\n      //   exact: true,\r\n      //   component: lazy(() => import(\"pages/GlobalConfig\")),\r\n      // }, //全局配置\r\n\r\n      {\r\n        component: lazy(() => import(\"pages/Notfound\")),\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import axios from 'utils/axios'\r\n\r\nexport const getUserInfo = async (params) => {\r\n  let data = await axios.get(`/users/${params.uid}`,{params});\r\n\r\n  return data?.data\r\n};\r\n\r\nexport const bpUser = async (uid, params) => {\r\n  let data = await axios.patch(`/users/${uid}/ustatus`, params);\r\n  return data?.data\r\n};\r\n\r\nexport const createToken = async (loginInfo) => {\r\n  let data = await axios.post('/token', loginInfo);\r\n  return data\r\n};\r\n\r\nexport const getUserManage = async (params) => {\r\n  let data = await axios.get('/user/manage', {params});\r\n  return data\r\n};\r\n\r\nexport const getDevUsers = async (devid) => {\r\n  let data = await axios.get(`/user/devid/${devid}`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n  return {userlist: [], ls: []}\r\n};\r\n\r\nexport const getIpUsers = async (ip) => {\r\n  let data = await axios.get(`/user/ip/${ip}`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n  return {userlist: [], ls: []}\r\n};\r\n\r\nexport const editNickname = async (uid, params) => {\r\n  let data = await axios.patch(`/users/uname`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n};\r\n\r\nexport const getGameCircleRecord = async rid => {\r\n  let data = await axios.get(`/gameCircleRecord/${rid}`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n};\r\n\r\nexport const getInviteUsersById = async (uid) => {\r\n  let data = await axios.get(`/user/getInviteById/${uid}`);\r\n  if (data) {\r\n    return data?.data;\r\n  }\r\n  return [];\r\n};\r\n","export const INIT_APPID = 'INIT_APPID';\r\n\r\nexport const initAppid = appidList => dispatch =>\r\n  dispatch({\r\n    type: INIT_APPID,\r\n    data: appidList\r\n  });\r\n\r\n","import { loginOut } from \"../../api/login\";\r\n\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\nexport const login = (userInfo) => (dispatch) => {\r\n  dispatch({\r\n    type: LOGIN,\r\n    data: userInfo,\r\n  });\r\n};\r\n\r\nexport const logout = (data) => async (dispatch) => {\r\n  await loginOut();\r\n  dispatch({\r\n    type: LOGOUT,\r\n    data: data,\r\n  });\r\n};\r\n","export const INIT_BASE_URL = 'BASE_URL';\r\n\r\nexport const initBaseUrl = baseUrl => dispatch =>\r\n  dispatch({\r\n    type: INIT_BASE_URL,\r\n    data: baseUrl\r\n  });\r\n\r\n","export const INIT_CDN_URL = 'CDN_URL';\r\n\r\nexport const initCdnUrl = cndUrl => dispatch =>\r\n  dispatch({\r\n    type: INIT_CDN_URL,\r\n    data: cndUrl\r\n  });\r\n\r\n","export const INIT_S3_ENABLE = 'S3_ENABLE';\r\n\r\nexport const iniS3Enable = s3Enable => dispatch =>\r\n  dispatch({\r\n    type: INIT_S3_ENABLE,\r\n    data: s3Enable\r\n  });\r\n\r\n","import routes from \"../../routes\";\r\nimport { create_route_key, get_menu_key, trans_menu_key } from \"../../utils\";\r\nexport const SET_ROUTES = \"SET_ROUTES\";\r\n\r\nexport const set_routes = (data) => (dispatch) => {\r\n  //提供路由使用的所有权限\r\n  const routePerms = get_menu_key(data, {\r\n    // key: \"name\",\r\n    superKey: \"link\",\r\n    children: \"children\",\r\n  });\r\n  //路由白名单，本地存在路由地址,不与权限挂钩\r\n  const whiteList = [\"*\", \"/login\", \"/\"];\r\n  const new_routes = create_route_key(routes, {\r\n    key: \"title\",\r\n    superKey: \"path\",\r\n    children: \"routes\",\r\n    perms: routePerms.concat(whiteList),\r\n  });\r\n  // store.dispatch(set_routes(new_routes));\r\n\r\n  // console.log(new_routes)\r\n  dispatch({\r\n    type: SET_ROUTES,\r\n    data: new_routes,\r\n  });\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport dayjs from \"dayjs\";\r\n\r\nimport { getAppid } from \"api/sys\";\r\nimport {\r\n  initAppid,\r\n  login,\r\n  initBaseUrl,\r\n  initCdnUrl,\r\n  iniS3Enable,\r\n} from \"../../store/actions\";\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * @return {null}\r\n */\r\nfunction InitIndex() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const load = () => {\r\n      let session = localStorage.getItem(\"session\");\r\n      // console.log(session)\r\n\r\n      if (session !== null) {\r\n        session = JSON.parse(session);\r\n        if (\"token\" in session) {\r\n          // if (dayjs().unix() + session.diff < session.time + session.expire) {\r\n          // console.log(session);\r\n          dispatch(login({ ...session }));\r\n          return;\r\n          // }\r\n        }\r\n      }\r\n      // dispatch(login({}))\r\n    };\r\n    load();\r\n\r\n    // const fetchData = async () => {\r\n    //   const appidList = await getAppid();\r\n    //   dispatch(initAppid(appidList));\r\n    // };\r\n    // fetchData()\r\n\r\n    //初始化加载全局一些配置\r\n    axios.get(\"/config.json\").then((res) => {\r\n      // console.log(res)\r\n      dispatch(initBaseUrl(res.data.REACT_APP_BASE_URL));\r\n      dispatch(initCdnUrl(res.data.REACT_APP_CDN_URL));\r\n      dispatch(iniS3Enable(res.data.REACT_APP_S3_SERVER_ENABLE));\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return null;\r\n}\r\nexport default InitIndex;\r\n","import React, { useEffect } from \"react\";\r\nimport { Provider, useSelector } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Initialization from \"./components/Initialization\";\r\nimport { SmileOutlined } from \"@ant-design/icons\";\r\nimport \"./assets/css/app.css\";\r\nimport { ConfigProvider, Empty } from \"antd\";\r\n\r\n// if (process.env.NODE_ENV === 'development') {\r\n//   require('./mock');\r\n// }\r\nconst customizeRenderEmpty = () => <Empty  image={Empty.PRESENTED_IMAGE_SIMPLE} description=\"No Data\" />;\r\nexport default () => {\r\n  const routes = useSelector((state) => state.routes);\r\n\r\n  return (\r\n    <>\r\n      <ConfigProvider renderEmpty={true && customizeRenderEmpty}>\r\n        <Initialization />\r\n        <BrowserRouter>{renderRoutes(routes)}</BrowserRouter>\r\n      </ConfigProvider>\r\n    </>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import * as actionTypes from \"store/actions\";\r\n\r\nconst initalState = {\r\n  loggedIn: false,\r\n};\r\n\r\nconst sessionReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN:\r\n      return { ...action.data, loggedIn: true };\r\n    case actionTypes.LOGOUT:\r\n      return { loggedIn: true };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default sessionReducer;\r\n","import * as actionTypes from 'store/actions';\r\n\r\nconst initalState = [];\r\n\r\nconst appidsReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_APPID:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default appidsReducer;\r\n","import * as actionTypes from \"store/actions\";\r\n\r\nconst initalState = localStorage.getItem(\"INIT_BASE_URL\") || \"\";\r\nconst baseUrlReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_BASE_URL:\r\n      localStorage.setItem(\"INIT_BASE_URL\", action.data);\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default baseUrlReducer;\r\n","import * as actionTypes from 'store/actions';\r\n\r\nconst initalState = \"\";\r\n\r\nconst cdnUrlReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_CDN_URL:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cdnUrlReducer;\r\n","import * as actionTypes from 'store/actions';\r\n\r\nconst initalState = false; //false:服务器上传，true s3上传\r\n\r\nconst s3EnableReducer = (state = initalState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.INIT_S3_ENABLE:\r\n      return action.data;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default s3EnableReducer;\r\n","import * as actionTypes from \"store/actions\";\r\n// import { contanstRoutes } from \"../../routes\";\r\nimport contanstRoutes from \"../../routes\";\r\n\r\nconst routesReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_ROUTES:\r\n      return action.data;\r\n    default:\r\n      return contanstRoutes;\r\n  }\r\n};\r\n\r\nexport default routesReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport sessionReducer from \"./session\";\r\nimport appidsReducer from \"./appid\";\r\nimport baseUrlReducer from \"./reactAppBaseUrl\";\r\nimport cdnUrlReducer from \"./reactAppCdnUrl\";\r\nimport s3EnableReducer from \"./reactAppS3Enable\";\r\nimport routesReducer from \"./routes\";\r\nconst rootReducer = combineReducers({\r\n  session: sessionReducer,\r\n  appids: appidsReducer,\r\n  baseUrl: baseUrlReducer,\r\n  cdnUrl: cdnUrlReducer,\r\n  s3Enable: s3EnableReducer,\r\n  routes: routesReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","import { message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport store from \"store\";\r\n\r\nlet instance = undefined;\r\n// console.log(baseURL)\r\ninstance = axios.create({\r\n  baseURL: process.env.REACT_APP_REQUEST_URL,\r\n  headers: {\r\n    // 'Content-Type': 'application/x-www-form-urlencoded',\r\n    // 'X-TUNNEL-VERIFY': \"Test\"\r\n  },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const updateUrl = store.getState().baseUrl;\r\n    if (updateUrl) {\r\n      config.baseURL = updateUrl;\r\n    }\r\n\r\n    const session = store.getState().session;\r\n    if (\"token\" in session) {\r\n      config.headers[\"x-token\"] = session.token;\r\n    }\r\n    // console.log(session, config);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // console.log(error, \"123test\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (resp) => {\r\n    const data = resp;\r\n    if (data.code === 1 || data.code == 75008) {\r\n      localStorage.removeItem(\"session\");\r\n      window.location.reload();\r\n    } else if (data.data.code != 0) {\r\n      message.error(data.data.err);\r\n      return Promise.reject(\"服务器异常\");\r\n    }\r\n    return data;\r\n  },\r\n  (error) => {\r\n    // console.log()\r\n    message.error(\"服务器异常\");\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default instance;\r\n","import { message } from \"antd\";\r\nimport axios from \"axios\";\r\nimport store from \"store\";\r\nimport qs from \"qs\";\r\n// import \"\" from ''\r\n// create an axios instance\r\n\r\nlet baseURL = process.env.REACT_APP_REQUEST_URL;\r\nconst service = axios.create({\r\n  // baseURL: process.env.VUE_APP_BASE_API, // url = base url + request url\r\n  // baseURL: \"/api\",\r\n  baseURL,\r\n  // withCredentials: true, // send cookies when cross-domain requests\r\n  // 如果请求话费了超过 `timeout` 的时间，请求将被中断\r\n  timeout: 10000000,\r\n  // withCredentials: true,\r\n  // `withCredentials` 表示跨域请求时是否需要使用凭证\r\n});\r\nconst downservice = axios.create({\r\n  baseURL,\r\n  timeout: 100000,\r\n  // withCredentials: true,\r\n});\r\ndownservice.interceptors.request.use(\r\n  (config) => {\r\n    // do something before request is sent\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\ndownservice.interceptors.response.use(\r\n  /**\r\n   * If you want to get http information such as headers or status\r\n   * Please return  response => response\r\n   */\r\n\r\n  /**\r\n   * Determine the request status by custom code\r\n   * Here is just an example\r\n   * You can also judge the status by HTTP Status Code\r\n   */\r\n  (response) => {\r\n    const res = response.data;\r\n    // if the custom code is not 20000, it is judged as an error.\r\n    if ((response.status = 200)) {\r\n      return response;\r\n    } else {\r\n      return Promise.reject(\"服务器端异常\");\r\n    }\r\n  },\r\n  (error) => {\r\n    const { config, response } = error;\r\n\r\n    return Promise.reject(\"服务器端异常\");\r\n  }\r\n);\r\n// request interceptor\r\nservice.interceptors.request.use(\r\n  (config) => {\r\n    const updateUrl = store.getState().baseUrl;\r\n    if (updateUrl) {\r\n      config.baseURL = updateUrl;\r\n    }\r\n    // do something before request is sent\r\n    const session = store.getState().session;\r\n    if (\"token\" in session) {\r\n      config.headers[\"x-token\"] = session.token;\r\n    }\r\n\r\n    return config;\r\n  },\r\n  (error) => {\r\n    // do something with request error\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// response interceptor\r\nservice.interceptors.response.use(\r\n  /**\r\n   * If you want to get http information such as headers or status\r\n   * Please return  response => response\r\n   */\r\n\r\n  /**\r\n   * Determine the request status by custom code\r\n   * Here is just an example\r\n   * You can also judge the status by HTTP Status Code\r\n   */\r\n  (response) => {\r\n    const data = response.data;\r\n\r\n    if (data.code === 1 || data.code == 75008) {\r\n      localStorage.removeItem(\"session\");\r\n\r\n      window.location.reload();\r\n    } else if (data.code != 0) {\r\n      message.error(data.err);\r\n      return Promise.reject(\"服务器异常\");\r\n    }\r\n    return data;\r\n  },\r\n  (error) => {\r\n    const { config, response } = error;\r\n    return Promise.reject(\"服务器异常\");\r\n  }\r\n);\r\n\r\nconst http = {\r\n  img(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        data,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  jqpost(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        params: data,\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  formput(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"put\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        params: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  getdownload(url, data, fileName) {\r\n    return new Promise((resolve, reject) => {\r\n      downservice({\r\n        url,\r\n        method: \"get\",\r\n        params: data,\r\n        responseType: \"blob\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          const blob = new Blob([res.data], {\r\n            type: \"application/zip;charset=utf-8\",\r\n          });\r\n          if (\"download\" in document.createElement(\"a\")) {\r\n            // 非IE下载\r\n            const elink = document.createElement(\"a\");\r\n            elink.target = \"hrefTemplate\"; // 指向上面的iframe框架（防止跳转至空白页）,可有可无\r\n            elink.download = fileName + \".zip\";\r\n            elink.href = URL.createObjectURL(blob);\r\n            elink.click();\r\n            URL.revokeObjectURL(elink.href); // 释放URL 对象\r\n          } else {\r\n            // IE10+下载\r\n            navigator.msSaveBlob(blob, fileName);\r\n          }\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  get(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"get\",\r\n        params: data,\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  post(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        data: qs.stringify(data),\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  delete(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n        params: data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  deleteBody(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"delete\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  put(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"put\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        data,\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  jpost(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        data: JSON.stringify(data),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n  imgPost(url, data) {\r\n    return new Promise((resolve, reject) => {\r\n      service({\r\n        url,\r\n        method: \"post\",\r\n        data,\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      })\r\n        .then((res) => {\r\n          resolve(res);\r\n        })\r\n        .catch((error) => {\r\n          reject(error);\r\n        });\r\n    });\r\n  },\r\n};\r\n\r\nexport default http;\r\n","import axios from \"../utils/axios\";\r\nimport store from \"store\";\r\nimport { menu_get } from \"./menu\";\r\nimport qs from \"qs\";\r\nimport { set_routes } from \"../store/actions\";\r\nimport { trans_menu_key } from \"../utils\";\r\n// 语言，权限管理，通用方法\r\nexport const getMenu = async () => {\r\n  const session = store.getState().session;\r\n  //将返回数据转换成与菜单匹配的数据\r\n\r\n  const AllMenu = [\r\n    {\r\n      id: 1191,\r\n      title: \"账号管理\",\r\n      icon: \"UserOutlined\",\r\n      children: [\r\n        { id: 1234, title: \"账号列表\", link: \"/account/List\" },\r\n        { id: 1235, title: \"操作日志\", link: \"/account/operalog\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 1192,\r\n      title: \"角色管理\",\r\n      icon: \"UserOutlined\",\r\n      children: [\r\n        { id: 1236, title: \"角色列表\", link: \"/role/List\" },\r\n        { id: 1237, title: \"操作日志\", link: \"/role/operalog\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 1193,\r\n      title: \"游戏管理\",\r\n      icon: \"RedditOutlined\",\r\n      children: [\r\n        { id: 1238, title: \"游戏列表\", link: \"/game/List\" },\r\n        { id: 1239, title: \"操作日志\", link: \"/game/operalog\" },\r\n      ],\r\n    },\r\n    {\r\n      id: 119,\r\n      title: \"用户管理\",\r\n      icon: \"UserOutlined\",\r\n      children: [\r\n        { id: 123, title: \"用户信息\", link: \"/user/userInfo\" },\r\n        { id: 12323, title: \"邀请数据排行\", link: \"/activity/inviteRank\" },\r\n        { id: 1238928324, title: \"用户登录列表\", link: \"/user/loginLogList\" },\r\n        { id: 124, title: \"用户列表\", link: \"/userList\" },\r\n        {\r\n          id: 41231293023721003,\r\n          title: \"异常用户名单\",\r\n          link: \"/security/flagLog\",\r\n        },\r\n        // {id: 1238928323, title: '用户数据排行', link: '/user/getUserRank'},\r\n        {\r\n          id: 41231293023721004,\r\n          title: \"可疑用户列表\",\r\n          link: \"/security/list\",\r\n        },\r\n      ],\r\n    },\r\n    //排行榜数据\r\n    // {\r\n    //   id: 199999,\r\n    //   title: \"用户排行榜\",\r\n    //   icon: \"OrderedListOutlined\",\r\n    //   children: [\r\n    //     { id: 1999991, title: \"支付排行榜\", link: \"/user/paymentRanking\" },\r\n    //     { id: 1999992, title: \"提现排行榜\", link: \"/user/withdrawRanking\" },\r\n    //     { id: 1999993, title: \"盈利排行榜\", link: \"/user/profitRanking\" },\r\n    //   ],\r\n    // },\r\n    //机器人管理\r\n    {\r\n      id: 2,\r\n      title: \"机器人管理\",\r\n      icon: \"RobotOutlined\",\r\n      children: [\r\n        { id: 21, title: \"场次规则管理\", link: \"/robot/playRule\" },\r\n        { id: 22, title: \"机器人列表\", link: \"/robot/users\" },\r\n        // { id: 112423, title: \"玩家控牌记录\", link: \"/user/cardControl\" },\r\n        // { id: 112623, title: \"玩家控牌配置\", link: \"/cardControl\" },\r\n        {\r\n          id: 34223,\r\n          title: \"个人池条件配置\",\r\n          link: \"/robot/CondConfig\",\r\n        },\r\n        {\r\n          id: 2332,\r\n          title: \"个人池冷却配置\",\r\n          link: \"/robot/CDConfig\",\r\n        },\r\n        {\r\n          id: 2342,\r\n          title: \"个人池规则配置\",\r\n          link: \"/robot/RulesConfig\",\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      id: 222,\r\n      title: \"关键数据配置\",\r\n      icon: \"EditOutlined\",\r\n      children: [\r\n        // { id: 1224, title: \"Notice公告配置\", link: \"/notice\" },\r\n        // { id: 12243888, title: \"Post推送配置\", link: \"/poster\" },\r\n        // { id: 1222000003, title: \"Email邮件配置\", link: \"/email\" },\r\n        // {\r\n        //   id: 31324983928341,\r\n        //   title: \"跑马灯配置\",\r\n        //   link: \"/notice/broadcast\",\r\n        // },\r\n        // { id: 1222000005, title: \"自动审核配置\", link: \"/autoReviewConfig\" },\r\n        // {\r\n        //   id: 1222000006,\r\n        //   title: \"自动审核白名单\",\r\n        //   link: \"/autoReviewWhiteList\",\r\n        // },\r\n        // {\r\n        //   id: 1222000007,\r\n        //   title: \"自动审核区域配置\",\r\n        //   link: \"/autoReviewDangerArea\",\r\n        // },\r\n        // { id: 1225, title: \"玩法场次管理\", link: \"/roomList\" },\r\n        { id: 12225, title: \"玩法场次配置\", link: \"/roomListConfig\" },\r\n        { id: 123847, title: \"地区管理\", link: \"/areaConfig\" },\r\n        // { id: 122647362, title: \"全局配置\", link: \"/globalConfig\" },\r\n      ],\r\n    },\r\n    //活动管理\r\n    // {\r\n    //   id: 3,\r\n    //   title: \"活动管理\",\r\n    //   icon: \"GiftOutlined\",\r\n    //   children: [\r\n    //     { id: 3123123121, title: \"赢牌奖励活动\", link: \"/activity/win\" },\r\n    //     { id: 313248888341, title: \"新手任务\", link: \"/activity/tasks\" },\r\n    //     { id: 313248888342, title: \"活跃度系统配置\", link: \"/active/sys\" },\r\n    //     { id: 1222000004, title: \"充值活动管理\", link: \"/activityRecharge\" },\r\n    //   ],\r\n    // },\r\n    //客服\r\n    // {\r\n    //   id: 1223410002,\r\n    //   title: \"客服功能\",\r\n    //   icon: \"RedditOutlined\",\r\n    //   children: [\r\n    //     // {id: 122300003, title: 'Operation management', link: '/operationManage'},\r\n    //     { id: 12210900001, title: \"KYC审核\", link: \"/authentication\" },\r\n    //     { id: 153300103, title: \"封号列表\", link: \"/user/manage\" },\r\n    //     { id: 1248, title: \"充值订单\", link: \"/payments\" },\r\n    //     { id: 1222000002, title: \"提现订单\", link: \"/withdraw\" },\r\n    //     {\r\n    //       id: 12220000023,\r\n    //       title: \"refund Processing\",\r\n    //       link: \"/refundProcessing\",\r\n    //     },\r\n    //   ],\r\n    // },\r\n    //数据统计\r\n    // {\r\n    //   id: 1239839,\r\n    //   title: \"数据后台\",\r\n    //   icon: \"LineChartOutlined\",\r\n    //   children: [\r\n    //     { id: 1231, title: \"在线在玩数据\", link: \"/online\" },\r\n    //     { id: 1241, title: \"关键数据\", link: \"/statistics/200\" },\r\n    //     { id: 123243, title: \"日报数据\", link: \"/statistics/209\" },\r\n    //     // {id: 12342, title: 'Payment details', link: '/statistics/201'},\r\n    //     // {id: 123143, title: 'Total prepaid', link: '/statistics/202'},\r\n    //     // {id: 124343,title: 'Active user',link: '/statistics/203'},\r\n    //     // {id: 124349203, title: 'Users Retention', link: '/statistics/204'},\r\n    //     // {id: 12434920234213, title: 'Transaction history', link: '/statistics/206'},\r\n    //     { id: 124349202342130, title: \"用户活跃\", link: \"/statistics/207\" },\r\n    //     { id: 1243492023421309, title: \"游戏局数\", link: \"/statistics/208\" },\r\n    //     { id: 123456098, title: \"机器人关键数据\", link: \"/statistics/244\" },\r\n    //     {\r\n    //       id: 12342983198,\r\n    //       title: \"Points 机器人局数分析\",\r\n    //       link: \"/statistics/211\",\r\n    //     },\r\n    //     {\r\n    //       id: 123456198,\r\n    //       title: \"Pool 机器人局数分析\",\r\n    //       link: \"/statistics/230\",\r\n    //     },\r\n    //     {\r\n    //       id: 123456129398,\r\n    //       title: \"10Card 机器人局数分析\",\r\n    //       link: \"/statistics/239\",\r\n    //     },\r\n    //     { id: 1209382934, title: \"用户留存统计\", link: \"/statistics/218\" },\r\n    //     { id: 1209382823114, title: \"用户付费\", link: \"/statistics/222\" },\r\n    //     // {id: 1209382934,title: '用户留存统计',link: '/activeData'},\r\n    //     {\r\n    //       id: 1209382823115,\r\n    //       title: \"关键指标\",\r\n    //       link: \"/crux/statistics/200\",\r\n    //     },\r\n    //   ],\r\n    // },\r\n    //系统配置\r\n    // {\r\n    //   id: 122,\r\n    //   title: \"游戏更新配置\",\r\n    //   icon: \"SoundOutlined\",\r\n    //   children: [\r\n    //     { id: 1221, title: \"热更新配置\", link: \"/hotUpgrade\" },\r\n    //     { id: 98732, title: \"更新配置\", link: \"/clientHotUpgrade\" },\r\n    //     { id: 12211, title: \"版本更新配置\", link: \"/verUpdate\" },\r\n    //     { id: 1222, title: \"游戏开关配置\", link: \"/switch\" },\r\n    //     { id: 1226387, title: \"维护公告展示\", link: \"/maintenanceNotice\" },\r\n    //     { id: 1227, title: \"审核白名单\", link: \"/reviewWhiteList\" },\r\n    //     { id: 1228, title: \"审核黑名单\", link: \"/reviewBlockList\" },\r\n    //   ],\r\n    // },\r\n    // {\r\n    //   id: 1001,\r\n    //   title: \"黑名单管理\",\r\n    //   icon: \"BlockOutlined\", //黑名单管理\r\n    //   children: [\r\n    //     { id: 10010, title: \"UserIdBlocklist\", link: \"/blockList\" },\r\n    //     { id: 10011, title: \"BlockOtherlist\", link: \"/blockOtherList\" },\r\n    //   ],\r\n    // },\r\n    // {\r\n    //   id: 1201,\r\n    //   title: \"Financial Module \",\r\n    //   icon: \"ExceptionOutlined\",\r\n    //   children: [\r\n    //     { id: 12011, title: \"Deposit Bill\", link: \"/depositBill\" },\r\n    //     { id: 12012, title: \"Withdraw Bill\", link: \"/withdrawBill\" },\r\n    //   ],\r\n    // },\r\n    //dt_statistics数据统计表\r\n    // {\r\n    //   id: 1301,\r\n    //   title: \"数据统计\",\r\n    //   icon: \"LineChartOutlined\",\r\n    //   children: [\r\n    //     { id: 13010, title: \"在线在玩数据\", link: \"/online\" },\r\n    //     { id: 13011, title: \"关键指标\", link: \"/crux/statistics/13011\" },\r\n    //     { id: 13012, title: \"新用户付费\", link: \"/crux/statistics/13012\" },\r\n    //     { id: 13013, title: \"用户活跃\", link: \"/crux/statistics/13013\" },\r\n    //     { id: 13014, title: \"用户留存\", link: \"/crux/statistics/13014\" },\r\n    //     { id: 13015, title: \"游戏局数\", link: \"/crux/statistics/13015\" },\r\n    //     {\r\n    //       id: 13016,\r\n    //       title: \"point机器人局数\",\r\n    //       link: \"/crux/statistics/13016\",\r\n    //     },\r\n    //     {\r\n    //       id: 13017,\r\n    //       title: \"pool机器人局数\",\r\n    //       link: \"/crux/statistics/13017\",\r\n    //     },\r\n    //     {\r\n    //       id: 13018,\r\n    //       title: \"10card机器人局数\",\r\n    //       link: \"/crux/statistics/13018\",\r\n    //     },\r\n    //     { id: 13019, title: \"用户付费\", link: \"/crux/statistics/13019\" },\r\n    //   ],\r\n    // },\r\n  ];\r\n\r\n  //--------------------------------------管理员账号-------------------------------------\r\n  if (true || session.username === \"laibaorummy\") {\r\n    return AllMenu;\r\n  }\r\n};\r\n//获取菜单\r\nexport const getMenu_h = async () => {\r\n  let data = await menu_get();\r\n  //将返回数据转换成与菜单匹配的数据\r\n  data = trans_menu_key(data.data, {\r\n    title: \"title\",\r\n    trans_title: \"name\",\r\n    children: \"children\",\r\n    trans_children: \"child\",\r\n    router: \"link\",\r\n    trans_route: \"router\",\r\n  });\r\n  store.dispatch(set_routes(data));\r\n  return data;\r\n};\r\n\r\nexport const getAppid = async () => {\r\n  const session = store.getState().session;\r\n  if (session.username === \"xiaomirummy\") {\r\n    return [\r\n      /*{\r\n      id: 2,\r\n      appid: 6002,\r\n      appName: 'xiaomi',\r\n    },*/\r\n    ];\r\n  }\r\n  return [\r\n    { id: 1, appid: 6000, appName: \"Ruby Rummy\" },\r\n    { id: 2, appid: 1000, appName: \"King Rummy\" },\r\n    { id: 3, appid: 1001, appName: \"Nuts Rummy\" },\r\n    { id: 4, appid: 999, appName: \"King Rummy_999\" },\r\n    { id: 5, appid: 998, appName: \"King Rummy_998\" },\r\n    { id: 6, appid: 997, appName: \"King Rummy_997\" },\r\n    { id: 7, appid: 1100, appName: \"Gentle Rummy\" },\r\n  ];\r\n\r\n  // let data = await axios.get('/sys/appid');\r\n  //\r\n  // return data\r\n};\r\n\r\nexport const getHotupgradeList = async (params) => {\r\n  let data = await axios.get(\"/sys/hotupgrade\", { params });\r\n  return data;\r\n};\r\n\r\nexport const delHotupgrade = async (params) => {\r\n  let data = await axios.delete(\"/sys/hotupgrade\", { params });\r\n  return data;\r\n};\r\n\r\nexport const addHotupgrade = async (appid, data) => {\r\n  data.ver = parseInt(data.ver);\r\n  let body = { appid, versioncode: data.versioncode };\r\n  delete data.id;\r\n  delete data.versioncode;\r\n\r\n  body.value = JSON.stringify(data);\r\n  console.log(\"addHotupgrade\", body);\r\n\r\n  try {\r\n    let resp = await axios.post(\"/sys/hotupgrade\", body);\r\n    console.log(resp);\r\n    return resp?.data.code === 0;\r\n  } catch (e) {\r\n    console.log(\"addHotupgrade\", e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const editHotupgrade = async (appid, data) => {\r\n  data.ver = parseInt(data.ver);\r\n  let body = { appid, versioncode: data.versioncode, id: parseInt(data.id) };\r\n  delete data.id;\r\n  delete data.versioncode;\r\n  body.value = JSON.stringify(data);\r\n  console.log(\"修改热更配置：\", body);\r\n  let resp = await axios.put(\"/sys/hotupgrade\", body);\r\n  return resp;\r\n};\r\n\r\nexport const getUsers = async (params) => {\r\n  let resp = await axios.get(\"/users\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const userListLineData = async (uid, params) => {\r\n  let resp = await axios.get(`/users/${uid}/lineData`, {\r\n    params: params,\r\n    paramsSerializer: function (p) {\r\n      //固定写法\r\n      return qs.stringify(p, { arrayFormat: \"repeat\" });\r\n    },\r\n  });\r\n  return resp?.data;\r\n};\r\n\r\nexport const getAuthentication = async (params) => {\r\n  let resp = await axios.get(\"/kycs\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getOnline = async (params) => {\r\n  let resp = await axios.get(\"/statistic/online\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getEmail = async (params) => {\r\n  let resp = await axios.get(\"/messages\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const addEmail = async (data) => {\r\n  let resp = await axios.post(\"/messages\", data);\r\n  return resp;\r\n};\r\n\r\nexport const getWithdraw = async (params) => {\r\n  let resp = await axios.get(\"/withdrawals\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const reviewWithdraw = async (id, status, reason) => {\r\n  return await axios.patch(`/withdrawals/${id}`, { status, reason });\r\n};\r\n\r\nexport const returnWithdraw = async (id) => {\r\n  return await axios.patch(`/withdrawalReturn/${id}`);\r\n};\r\n\r\nexport const getOprationRecord = async (data) => {\r\n  let resp = await axios.get(\"/oprationRecord\", data);\r\n  return resp;\r\n};\r\n\r\nexport const getAdministrator = async (data) => {\r\n  let resp = await axios.get(\"/administrator\", data);\r\n  return resp;\r\n};\r\n\r\nexport const getSwitch = async (params) => {\r\n  let resp = await axios.get(\"/switch\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const addSwitch = async (appid, data) => {\r\n  data.appid = appid;\r\n  data.t_uid = parseInt(data.t_uid);\r\n  data = JSON.stringify(data);\r\n  console.log(\"addSwitch\", data);\r\n  let resp = await axios.post(\"/switch\", data);\r\n  return resp;\r\n};\r\n\r\nexport const editSwitch = async (appid, data) => {\r\n  data.appid = appid;\r\n  data.t_uid = parseInt(data.t_uid);\r\n  data = JSON.stringify(data);\r\n  console.log(\"editSwitch\", data);\r\n  let resp = await axios.put(\"/switch\", data);\r\n  return resp;\r\n};\r\n\r\nexport const delSwitch = async (params) => {\r\n  let resp = await axios.delete(\"/switch\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getVerUpdate = async (params) => {\r\n  let resp = await axios.get(\"/config/verupdate\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const addVerUpdate = async (data) => {\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.post(\"/config/verupdate\", data);\r\n  return resp;\r\n};\r\n\r\nexport const editVerUpdate = async (data) => {\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.put(\"/config/verupdate\", data);\r\n  return resp;\r\n};\r\n\r\nexport const delVerUpdate = async (params) => {\r\n  let resp = await axios.delete(\"/config/verupdate\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getNotice = async (params) => {\r\n  let resp = await axios.get(\"/notices\", { params });\r\n  return resp?.data;\r\n};\r\n\r\nexport const addNotice = async (data) => {\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.post(\"/notices\", data);\r\n  return resp;\r\n};\r\nexport const editNotice = async (data) => {\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.put(\"/notices\", data);\r\n  return resp;\r\n};\r\n\r\nexport const delNotice = async (params) => {\r\n  let resp = await axios.delete(\"/notices\", { params });\r\n  return resp;\r\n};\r\n\r\nexport const getActivityRecharge = async (params) => {\r\n  let resp = await axios.get(\"/activity/recharge\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addActivityRecharge = async (data) => {\r\n  data.bonus_range = JSON.stringify(data.bonus_range);\r\n  data.cashback_range = JSON.stringify(data.cashback_range);\r\n  if (data.repeat_range) {\r\n    data.repeat_range = JSON.stringify(data.repeat_range);\r\n  }\r\n  if (data.condition_group) {\r\n    data.condition_group = JSON.stringify(data.condition_group);\r\n  }\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.post(\"/activity/recharge\", data);\r\n  return resp;\r\n};\r\nexport const editActivityRecharge = async (data) => {\r\n  data.bonus_range = JSON.stringify(data.bonus_range);\r\n  data.cashback_range = JSON.stringify(data.cashback_range);\r\n  if (data.repeat_range) {\r\n    data.repeat_range = JSON.stringify(data.repeat_range);\r\n  }\r\n  if (data.condition_group) {\r\n    data.condition_group = JSON.stringify(data.condition_group);\r\n  }\r\n  data = JSON.stringify(data);\r\n  let resp = await axios.put(\"/activity/recharge\", data);\r\n  return resp;\r\n};\r\nexport const delActivityRecharge = async (params) => {\r\n  let resp = await axios.delete(\"/activity/recharge\", { params });\r\n  return resp;\r\n};\r\nexport const getRoomList = async (params) => {\r\n  let resp = await axios.get(\"/activity/recharge\", { params });\r\n  return resp?.data;\r\n};\r\n\r\n//------自动审批配置信息-------\r\nexport const getConfig = async (params) => {\r\n  let resp = await axios.get(\"/auto/getAutoReviewConfig\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addAutoReviewConfig = async (data) => {\r\n  let resp = await axios.post(\"/auto/addAutoReviewConfig\", data);\r\n  return resp;\r\n};\r\nexport const updateAutoReviewConfig = async (id, data) => {\r\n  return await axios.patch(`/auto/addAutoReviewConfig/${id}`, data);\r\n};\r\nexport const delAutoReviewConfig = async (id, params) => {\r\n  let resp = await axios.delete(`/auto/addAutoReviewConfig/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//------提款自动审批白名单信息-------\r\nexport const getAutoWhiteList = async (params) => {\r\n  let resp = await axios.get(\"/auto/getAutoWhiteList\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addAutoWhiteList = async (data) => {\r\n  let resp = await axios.post(\"/auto/addAutoWhiteList\", data);\r\n  return resp;\r\n};\r\nexport const updateAutoWhiteList = async (id, data) => {\r\n  return await axios.patch(`/auto/addAutoWhiteList/${id}`, data);\r\n};\r\nexport const delAutoWhiteList = async (id, params) => {\r\n  let resp = await axios.delete(`/auto/addAutoWhiteList/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//------提款自动审批危险区域信息-------\r\nexport const getAutoDangerArea = async (params) => {\r\n  let resp = await axios.get(\"/auto/getAutoDangerArea\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addAutoDangerArea = async (data) => {\r\n  let resp = await axios.post(\"/auto/addAutoDangerArea\", data);\r\n  return resp;\r\n};\r\nexport const updateAutoDangerArea = async (id, data) => {\r\n  return await axios.patch(`/auto/addAutoDangerArea/${id}`, data);\r\n};\r\nexport const delAutoDangerArea = async (id, params) => {\r\n  let resp = await axios.delete(`/auto/addAutoDangerArea/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//--------新手任务编辑新增修改\r\nexport const InsertTask = async (data) => {\r\n  let resp = await axios.post(\"/activity/tasks\", data);\r\n  return resp;\r\n};\r\nexport const UpdateTask = async (id, data) => {\r\n  return await axios.patch(`/activity/tasks/${id}`, data);\r\n};\r\nexport const DelTask = async (id, params) => {\r\n  let resp = await axios.delete(`/activity/tasks/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//--------维护公告，状态,获取，修改\r\nexport const getMaintenance = async (params) => {\r\n  let resp = await axios.get(\"/maintenance/notice\", { params });\r\n  return resp?.data;\r\n};\r\nexport const UpdateMaintenance = async (id, data) => {\r\n  return await axios.patch(`/maintenance/notice/${id}`, data);\r\n};\r\n//--------维护公告 用户白名单获取，删除，新增\r\nexport const getUserWhiteMaintenance = async (params) => {\r\n  let resp = await axios.get(\"/user/maintain/white/\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addUserMaintain = async (data) => {\r\n  let resp = await axios.post(\"/user/maintain/white/\", data);\r\n  return resp;\r\n};\r\nexport const DelUserMaintain = async (id, data) => {\r\n  return await axios.delete(`/user/maintain/white/${id}`, data);\r\n};\r\n\r\n//------活跃度任务信息,活跃度信息，活跃度开关-------\r\nexport const getActiveTaskConfig = async (params) => {\r\n  let resp = await axios.get(\"/active/getTaskConfig\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addActiveTaskConfig = async (data) => {\r\n  let resp = await axios.post(\"/active/addTaskConfig\", data);\r\n  return resp;\r\n};\r\nexport const UpdateActiveTaskConfig = async (id, data) => {\r\n  return await axios.patch(`/active/addTaskConfig/${id}`, data);\r\n};\r\nexport const DelActiveTaskConfig = async (id, data) => {\r\n  let resp = await axios.delete(`/active/addTaskConfig/${id}`, data);\r\n  return resp;\r\n};\r\nexport const activeTaskConfigSwitch = async (id, data) => {\r\n  let resp = await axios.patch(`/active/updateSwitch/${id}`, data);\r\n  return resp;\r\n};\r\n\r\nexport const getActiveConfig = async (params) => {\r\n  let resp = await axios.get(\"/active/getConfig\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addActiveConfig = async (data) => {\r\n  let resp = await axios.post(\"/active/addConfig\", data);\r\n  return resp;\r\n};\r\nexport const UpdateActiveConfig = async (id, data) => {\r\n  return await axios.patch(`/active/addConfig/${id}`, data);\r\n};\r\nexport const DelActiveConfig = async (id, params) => {\r\n  let resp = await axios.delete(`/active/addConfig/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\nexport const activeSwitch = async (params) => {\r\n  let resp = await axios.put(\"/active/switch\", params);\r\n  return resp;\r\n};\r\nexport const getActiveSwitch = async (params) => {\r\n  let resp = await axios.get(\"/active/getSwitch\", { params });\r\n  return resp?.data;\r\n};\r\n\r\n//------可疑用户新增，删除，踢人-------\r\n\r\nexport const addSecurityList = async (data) => {\r\n  let resp = await axios.post(\"/security/addList\", data);\r\n  return resp;\r\n};\r\nexport const DelSecurityList = async (id, data) => {\r\n  let resp = await axios.delete(`/security/addList/${id}`, data);\r\n  return resp;\r\n};\r\nexport const kickOutSecurityUser = async (id, data) => {\r\n  let resp = await axios.post(`/security/kickOut/${id}`, data);\r\n  return resp;\r\n};\r\n\r\n//------黑名单列表，单个查询，批量上传新增接口，批量删除接口-------\r\n\r\nexport const getBlockList = async (params) => {\r\n  let resp = await axios.get(\"/block/list\", { params });\r\n  return resp?.data;\r\n};\r\nexport const getBlockListType = async (params) => {\r\n  let resp = await axios.get(`/block/list/${params.uid}`, { params });\r\n  return resp;\r\n};\r\nexport const addBlockList = async (data) => {\r\n  let resp = await axios.post(\"/block/list\", data);\r\n  return resp;\r\n};\r\n//获取用户信息 widraw detial\r\nexport const getUserWithdrawal = async (params) => {\r\n  let resp = await axios.get(`/userWithdrawal/${params.uid}`, { params });\r\n  return resp.data;\r\n};\r\n//获取用户信息 UserBonus\r\nexport const getUserBonus = async (uid,params) => {\r\n  let resp = await axios.get(`/userBonus/${uid}`, { params });\r\n  return resp.data;\r\n};\r\n\r\nexport const BatchDelBlockList = async (data) => {\r\n  let resp = await axios.post(`/block/batch-delete`, data);\r\n  return resp;\r\n};\r\nexport const DelBlockList = async (id, data) => {\r\n  let resp = await axios.delete(`/block/list/${id}`, data);\r\n  return resp;\r\n};\r\n//------黑名单其他列表，分页查询，单个删除及新增-------\r\nexport const getBlockOtherList = async (params) => {\r\n  let resp = await axios.get(\"/block-other/list\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addBlockOtherList = async (data) => {\r\n  let resp = await axios.post(\"/block-other/list\", data);\r\n  return resp;\r\n};\r\nexport const DelBlockOtherList = async (id, data) => {\r\n  let resp = await axios.delete(`/block-other/list/${id}`, data);\r\n  return resp;\r\n};\r\n\r\n//------充值提款账单查询-------\r\nexport const getDepositBillList = async (params) => {\r\n  let resp = await axios.get(\"/financial/deposit\", {\r\n    params: params,\r\n    paramsSerializer: function (p) {\r\n      //固定写法\r\n      return qs.stringify(p, { arrayFormat: \"repeat\" });\r\n    },\r\n  });\r\n  return resp?.data;\r\n};\r\nexport const getWithdrawBillList = async (params) => {\r\n  let resp = await axios.get(\"/financial/withdrawal\", {\r\n    params: params,\r\n    paramsSerializer: function (p) {\r\n      //固定写法\r\n      return qs.stringify(p, { arrayFormat: \"repeat\" });\r\n    },\r\n  });\r\n  return resp?.data;\r\n};\r\n\r\n//---------------- 更新配置-----------\r\n\r\nexport const getClientHotupgradeList = async (params) => {\r\n  let data = await axios.get(\"/sys/clientHotupgrade\", { params });\r\n  return data;\r\n};\r\n\r\nexport const delClientHotupgrade = async (params) => {\r\n  let data = await axios.delete(\"/sys/clientHotupgrade\", { params });\r\n  return data;\r\n};\r\n\r\nexport const addClientHotupgrade = async (appid, data) => {\r\n  try {\r\n    let resp = await axios.post(\"/sys/clientHotupgrade\", data);\r\n    console.log(resp);\r\n    return resp?.data;\r\n  } catch (e) {\r\n    console.log(\"addClientHotupgrade\", e);\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const editClientHotupgrade = async (appid, data) => {\r\n  console.log(\"修改更新配置：\", data);\r\n  let resp = await axios.put(\"/sys/clientHotupgrade\", data);\r\n  return resp;\r\n};\r\n\r\n//------审核白名单配置-------\r\nexport const getReviewWhiteList = async (params) => {\r\n  let resp = await axios.get(\"/review/getReviewWhiteList\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addReviewWhiteList = async (data) => {\r\n  let resp = await axios.post(\"/review/addReviewWhiteList\", data);\r\n  return resp;\r\n};\r\nexport const updateReviewWhiteList = async (id, data) => {\r\n  return await axios.patch(`/review/addReviewWhiteList/${id}`, data);\r\n};\r\nexport const delReviewWhiteList = async (id, params) => {\r\n  let resp = await axios.delete(`/review/addReviewWhiteList/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//------全局配置信息-------\r\nexport const getGlobalConfig = async (params) => {\r\n  let resp = await axios.get(\"/global/getGlobalConfig\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addGlobalConfig = async (data) => {\r\n  let resp = await axios.post(\"/global/addGlobalConfig\", data);\r\n  return resp;\r\n};\r\nexport const updateGlobalConfig = async (id, data) => {\r\n  return await axios.patch(`/global/addGlobalConfig/${id}`, data);\r\n};\r\nexport const delGlobalConfig = async (id, params) => {\r\n  let resp = await axios.delete(`/global/addGlobalConfig/${id}`, { params });\r\n  return resp;\r\n};\r\n\r\n//------审核黑名单 查询删除及添加-------\r\nexport const getReviewBlockList = async (params) => {\r\n  let resp = await axios.get(\"/review_block/list\", { params });\r\n  return resp?.data;\r\n};\r\nexport const addReviewBlockList = async (data) => {\r\n  let resp = await axios.post(\"/review_block/list\", data);\r\n  return resp;\r\n};\r\nexport const DelReviewBlockList = async (id, data) => {\r\n  let resp = await axios.delete(`/review_block/list/${id}`, data);\r\n  return resp;\r\n};\r\n","// const arr = [{ id: 3 }, { id: 5 }];\r\n//从数组中取得值\r\nfunction getAttrFormArr(arr, attr) {\r\n  let new_arr = arr.map((opt) => opt[attr]);\r\n  return new_arr;\r\n}\r\n//转换key值\r\nexport const trans_tree = (data, options) => {\r\n  let arr = [];\r\n  const { key, title, children } = options;\r\n  if (data) {\r\n    data.map((item) => {\r\n      arr.push({\r\n        key: item[key],\r\n        title: item[title],\r\n        children: item[children] ? trans_tree(item[children], options) : [],\r\n      });\r\n    });\r\n  }\r\n  return arr;\r\n};\r\n/**\r\n * 获取所有子key值（有children的父亲key值不返回）\r\n * @param {*} data\r\n * @param {*} options\r\n * @param {*} checkState 是否校验选中状态，校验则只有选中状态的才返回\r\n * @returns\r\n */\r\nexport function trans_tree_get_key(data, options) {\r\n  let arr = [];\r\n  const { key, title, children, check = \"check\", checkState = false } = options;\r\n  if (data) {\r\n    data.map((item) => {\r\n      if (item[children] && item[children].length > 0) {\r\n        // console.log(trans_tree_get_key(item[children], options))\r\n        arr = arr.concat(trans_tree_get_key(item[children], options));\r\n        // console.log(arr,'测试');\r\n      } else {\r\n        if (checkState) {\r\n          if (item[check]) {\r\n            arr.push(item[key]);\r\n          }\r\n        } else {\r\n          arr.push(item[key]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n/**\r\n * 获取所有key值（有children的父亲key值也返回）\r\n * @param {*} data\r\n * @param {*} options\r\n * @param {*} checkState 是否校验选中状态，校验则只有选中状态的才返回\r\n * @returns\r\n */\r\nexport function trans_tree_get_all_key(data, options) {\r\n  let arr = [];\r\n  const { key, title, children, check = \"check\", checkState = false } = options;\r\n  if (data) {\r\n    data.map((item) => {\r\n      if (item[children] && item[children].length > 0) {\r\n        if (checkState) {\r\n          if (item[check]) {\r\n            arr.push(item[key]);\r\n          }\r\n        } else {\r\n          arr.push(item[key]);\r\n        }\r\n        arr = arr.concat(trans_tree_get_all_key(item[children], options));\r\n      } else {\r\n        if (checkState) {\r\n          if (item[check]) {\r\n            arr.push(item[key]);\r\n          }\r\n        } else {\r\n          arr.push(item[key]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n//获取列表里面的所有用户id\r\nexport function get_id_user(source, config) {\r\n  const { data = [], key = \"id\" } = config;\r\n  let arr = [];\r\n  source.map((item) => {\r\n    arr.push(item[key]);\r\n  });\r\n  return arr;\r\n}\r\n/**\r\n * 查询列表里面的用户id，替换成用户名称\r\n * @param {*} source\r\n * @param {*} data\r\n * @returns\r\n */\r\nexport function repacle_id_user_name(source, config) {\r\n  const { data = [], key = \"id\", trans_key = \"uname\" } = config;\r\n  let arr = source;\r\n  for (const [objKey, value] of Object.entries(data)) {\r\n    arr.map((item) => {\r\n      if (objKey == item[key]) {\r\n        // arr.uname=value\r\n        item[trans_key] = value;\r\n      }\r\n    });\r\n  }\r\n  return arr;\r\n}\r\n/**\r\n * 将菜单的所有关键字转换为项目需要的关键字\r\n * @param {*} data\r\n * @param {*} config\r\n * @returns\r\n */\r\nexport function trans_menu_key(data, config) {\r\n  const { title, trans_title, children, trans_children, router, trans_route } =\r\n    config;\r\n  let new_menu = [];\r\n  data.map((option) => {\r\n    // console.log(perms,option[trans_title],data)\r\n    if (option[trans_children] && option[trans_children].length > 0) {\r\n      let conf = {};\r\n      conf[title] = option[trans_title];\r\n      // conf[children] = option[trans_children];\r\n      conf[router] = option[trans_route];\r\n      conf.id = option.id;\r\n      conf[children] = trans_menu_key(option[trans_children], config);\r\n      new_menu.push(conf);\r\n    } else {\r\n      let conf = {};\r\n      conf[title] = option[trans_title];\r\n      conf[children] = option[trans_children];\r\n      conf[router] = option[trans_route];\r\n      new_menu.push(conf);\r\n    }\r\n  });\r\n  return new_menu;\r\n}\r\n/**\r\n * 获取菜单权限关键字,供路由使用\r\n * @param {*} data\r\n * @param {*} config\r\n */\r\nexport function get_menu_key(data, config) {\r\n  const { key, children, superKey } = config;\r\n  let arr = [];\r\n  data.map((opt) => {\r\n    // opt[key] && arr.push(opt[key]);\r\n    opt[superKey] && arr.push(opt[superKey]);\r\n    if (opt[children] && opt[children].length > 0) {\r\n      arr = arr.concat(get_menu_key(opt[children], config));\r\n    } else {\r\n    }\r\n  });\r\n  return arr;\r\n}\r\n/**\r\n * 根据权限生成路由\r\n * @param {*} data\r\n * @param {*} config\r\n * @returns\r\n */\r\nexport function create_route_key(data, config) {\r\n  const { key, children, perms = [], superKey } = config;\r\n  let routes = [];\r\n  data.map((opt) => {\r\n    if (opt[children] && opt[children].length > 0) {\r\n      if (perms.includes(opt[superKey]) || !opt[superKey]) {\r\n        let obj = {\r\n          ...opt,\r\n          routes: [],\r\n        };\r\n\r\n        obj[children] = create_route_key(opt[children], config);\r\n        routes.push(obj);\r\n      }\r\n    } else if (!opt[children] || opt[children].length == 0) {\r\n      // console.log(opt, opt[superKey], superKey, !opt[superKey]);\r\n      if (perms.includes(opt[superKey]) || !opt[superKey]) {\r\n        // console.log(opt[superKey], perms, perms.includes(opt[superKey]));\r\n        routes.push(opt);\r\n        // if (!opt[key]) {\r\n        //   routes.push(opt);\r\n        // } else if (perms.includes(opt[superKey])) {\r\n        //   // console.log(opt[superKey])\r\n        //   routes.push(opt);\r\n        // }\r\n        // console.log(opt[superKey],perms,opt[key]);\r\n      }\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nexport default getAttrFormArr;\r\n"],"sourceRoot":""}